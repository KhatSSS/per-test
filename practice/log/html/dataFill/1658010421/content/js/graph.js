/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 14527.0, "series": [{"data": [[0.0, 34.0], [0.1, 37.0], [0.2, 43.0], [0.3, 45.0], [0.4, 46.0], [0.5, 46.0], [0.6, 47.0], [0.7, 47.0], [0.8, 48.0], [0.9, 48.0], [1.0, 49.0], [1.1, 49.0], [1.2, 49.0], [1.3, 50.0], [1.4, 51.0], [1.5, 51.0], [1.6, 51.0], [1.7, 51.0], [1.8, 52.0], [1.9, 52.0], [2.0, 53.0], [2.1, 53.0], [2.2, 53.0], [2.3, 53.0], [2.4, 54.0], [2.5, 54.0], [2.6, 55.0], [2.7, 55.0], [2.8, 55.0], [2.9, 56.0], [3.0, 56.0], [3.1, 57.0], [3.2, 57.0], [3.3, 57.0], [3.4, 58.0], [3.5, 58.0], [3.6, 58.0], [3.7, 59.0], [3.8, 59.0], [3.9, 60.0], [4.0, 60.0], [4.1, 61.0], [4.2, 61.0], [4.3, 61.0], [4.4, 62.0], [4.5, 62.0], [4.6, 62.0], [4.7, 63.0], [4.8, 63.0], [4.9, 64.0], [5.0, 64.0], [5.1, 64.0], [5.2, 65.0], [5.3, 66.0], [5.4, 66.0], [5.5, 66.0], [5.6, 67.0], [5.7, 67.0], [5.8, 68.0], [5.9, 68.0], [6.0, 69.0], [6.1, 70.0], [6.2, 71.0], [6.3, 71.0], [6.4, 72.0], [6.5, 73.0], [6.6, 73.0], [6.7, 74.0], [6.8, 75.0], [6.9, 76.0], [7.0, 77.0], [7.1, 78.0], [7.2, 78.0], [7.3, 79.0], [7.4, 80.0], [7.5, 81.0], [7.6, 81.0], [7.7, 82.0], [7.8, 82.0], [7.9, 83.0], [8.0, 83.0], [8.1, 84.0], [8.2, 84.0], [8.3, 85.0], [8.4, 86.0], [8.5, 87.0], [8.6, 87.0], [8.7, 88.0], [8.8, 89.0], [8.9, 89.0], [9.0, 90.0], [9.1, 90.0], [9.2, 91.0], [9.3, 92.0], [9.4, 92.0], [9.5, 93.0], [9.6, 93.0], [9.7, 93.0], [9.8, 94.0], [9.9, 94.0], [10.0, 95.0], [10.1, 96.0], [10.2, 96.0], [10.3, 97.0], [10.4, 97.0], [10.5, 98.0], [10.6, 99.0], [10.7, 99.0], [10.8, 100.0], [10.9, 100.0], [11.0, 101.0], [11.1, 102.0], [11.2, 102.0], [11.3, 103.0], [11.4, 103.0], [11.5, 104.0], [11.6, 105.0], [11.7, 105.0], [11.8, 105.0], [11.9, 106.0], [12.0, 106.0], [12.1, 107.0], [12.2, 107.0], [12.3, 107.0], [12.4, 108.0], [12.5, 108.0], [12.6, 109.0], [12.7, 110.0], [12.8, 110.0], [12.9, 111.0], [13.0, 111.0], [13.1, 112.0], [13.2, 113.0], [13.3, 113.0], [13.4, 114.0], [13.5, 114.0], [13.6, 115.0], [13.7, 115.0], [13.8, 116.0], [13.9, 116.0], [14.0, 116.0], [14.1, 117.0], [14.2, 117.0], [14.3, 118.0], [14.4, 119.0], [14.5, 119.0], [14.6, 121.0], [14.7, 121.0], [14.8, 121.0], [14.9, 122.0], [15.0, 122.0], [15.1, 123.0], [15.2, 124.0], [15.3, 124.0], [15.4, 125.0], [15.5, 125.0], [15.6, 126.0], [15.7, 127.0], [15.8, 127.0], [15.9, 128.0], [16.0, 128.0], [16.1, 128.0], [16.2, 129.0], [16.3, 130.0], [16.4, 130.0], [16.5, 131.0], [16.6, 131.0], [16.7, 132.0], [16.8, 132.0], [16.9, 133.0], [17.0, 133.0], [17.1, 134.0], [17.2, 134.0], [17.3, 135.0], [17.4, 136.0], [17.5, 136.0], [17.6, 137.0], [17.7, 137.0], [17.8, 138.0], [17.9, 138.0], [18.0, 139.0], [18.1, 140.0], [18.2, 140.0], [18.3, 141.0], [18.4, 141.0], [18.5, 141.0], [18.6, 142.0], [18.7, 143.0], [18.8, 143.0], [18.9, 143.0], [19.0, 144.0], [19.1, 145.0], [19.2, 145.0], [19.3, 146.0], [19.4, 146.0], [19.5, 146.0], [19.6, 147.0], [19.7, 147.0], [19.8, 148.0], [19.9, 148.0], [20.0, 149.0], [20.1, 149.0], [20.2, 150.0], [20.3, 150.0], [20.4, 151.0], [20.5, 152.0], [20.6, 152.0], [20.7, 153.0], [20.8, 154.0], [20.9, 154.0], [21.0, 155.0], [21.1, 156.0], [21.2, 156.0], [21.3, 157.0], [21.4, 157.0], [21.5, 158.0], [21.6, 158.0], [21.7, 158.0], [21.8, 159.0], [21.9, 159.0], [22.0, 160.0], [22.1, 160.0], [22.2, 161.0], [22.3, 161.0], [22.4, 162.0], [22.5, 163.0], [22.6, 163.0], [22.7, 164.0], [22.8, 165.0], [22.9, 165.0], [23.0, 166.0], [23.1, 166.0], [23.2, 167.0], [23.3, 168.0], [23.4, 168.0], [23.5, 168.0], [23.6, 169.0], [23.7, 170.0], [23.8, 171.0], [23.9, 171.0], [24.0, 171.0], [24.1, 172.0], [24.2, 173.0], [24.3, 174.0], [24.4, 174.0], [24.5, 175.0], [24.6, 175.0], [24.7, 176.0], [24.8, 177.0], [24.9, 177.0], [25.0, 178.0], [25.1, 178.0], [25.2, 180.0], [25.3, 181.0], [25.4, 182.0], [25.5, 182.0], [25.6, 183.0], [25.7, 183.0], [25.8, 184.0], [25.9, 184.0], [26.0, 185.0], [26.1, 185.0], [26.2, 186.0], [26.3, 187.0], [26.4, 188.0], [26.5, 189.0], [26.6, 190.0], [26.7, 190.0], [26.8, 191.0], [26.9, 191.0], [27.0, 192.0], [27.1, 193.0], [27.2, 193.0], [27.3, 194.0], [27.4, 195.0], [27.5, 196.0], [27.6, 196.0], [27.7, 197.0], [27.8, 198.0], [27.9, 198.0], [28.0, 199.0], [28.1, 200.0], [28.2, 200.0], [28.3, 201.0], [28.4, 201.0], [28.5, 202.0], [28.6, 202.0], [28.7, 203.0], [28.8, 203.0], [28.9, 204.0], [29.0, 205.0], [29.1, 205.0], [29.2, 205.0], [29.3, 206.0], [29.4, 207.0], [29.5, 208.0], [29.6, 208.0], [29.7, 209.0], [29.8, 210.0], [29.9, 210.0], [30.0, 211.0], [30.1, 211.0], [30.2, 212.0], [30.3, 213.0], [30.4, 213.0], [30.5, 214.0], [30.6, 215.0], [30.7, 215.0], [30.8, 216.0], [30.9, 217.0], [31.0, 218.0], [31.1, 218.0], [31.2, 219.0], [31.3, 220.0], [31.4, 221.0], [31.5, 221.0], [31.6, 222.0], [31.7, 223.0], [31.8, 223.0], [31.9, 224.0], [32.0, 225.0], [32.1, 226.0], [32.2, 227.0], [32.3, 228.0], [32.4, 228.0], [32.5, 229.0], [32.6, 230.0], [32.7, 231.0], [32.8, 231.0], [32.9, 232.0], [33.0, 233.0], [33.1, 234.0], [33.2, 235.0], [33.3, 235.0], [33.4, 235.0], [33.5, 236.0], [33.6, 236.0], [33.7, 237.0], [33.8, 238.0], [33.9, 238.0], [34.0, 239.0], [34.1, 240.0], [34.2, 241.0], [34.3, 241.0], [34.4, 242.0], [34.5, 242.0], [34.6, 243.0], [34.7, 244.0], [34.8, 244.0], [34.9, 245.0], [35.0, 246.0], [35.1, 247.0], [35.2, 247.0], [35.3, 248.0], [35.4, 249.0], [35.5, 249.0], [35.6, 250.0], [35.7, 250.0], [35.8, 251.0], [35.9, 251.0], [36.0, 252.0], [36.1, 253.0], [36.2, 253.0], [36.3, 254.0], [36.4, 255.0], [36.5, 256.0], [36.6, 257.0], [36.7, 258.0], [36.8, 259.0], [36.9, 259.0], [37.0, 260.0], [37.1, 261.0], [37.2, 261.0], [37.3, 262.0], [37.4, 262.0], [37.5, 263.0], [37.6, 263.0], [37.7, 264.0], [37.8, 264.0], [37.9, 265.0], [38.0, 266.0], [38.1, 267.0], [38.2, 267.0], [38.3, 267.0], [38.4, 268.0], [38.5, 269.0], [38.6, 269.0], [38.7, 270.0], [38.8, 272.0], [38.9, 272.0], [39.0, 273.0], [39.1, 273.0], [39.2, 274.0], [39.3, 275.0], [39.4, 275.0], [39.5, 276.0], [39.6, 277.0], [39.7, 277.0], [39.8, 277.0], [39.9, 278.0], [40.0, 279.0], [40.1, 280.0], [40.2, 281.0], [40.3, 282.0], [40.4, 283.0], [40.5, 283.0], [40.6, 284.0], [40.7, 284.0], [40.8, 285.0], [40.9, 286.0], [41.0, 286.0], [41.1, 287.0], [41.2, 288.0], [41.3, 289.0], [41.4, 289.0], [41.5, 290.0], [41.6, 291.0], [41.7, 291.0], [41.8, 292.0], [41.9, 293.0], [42.0, 293.0], [42.1, 294.0], [42.2, 294.0], [42.3, 294.0], [42.4, 295.0], [42.5, 296.0], [42.6, 297.0], [42.7, 298.0], [42.8, 299.0], [42.9, 300.0], [43.0, 301.0], [43.1, 302.0], [43.2, 302.0], [43.3, 303.0], [43.4, 303.0], [43.5, 304.0], [43.6, 304.0], [43.7, 305.0], [43.8, 306.0], [43.9, 306.0], [44.0, 307.0], [44.1, 308.0], [44.2, 309.0], [44.3, 309.0], [44.4, 310.0], [44.5, 311.0], [44.6, 311.0], [44.7, 312.0], [44.8, 313.0], [44.9, 314.0], [45.0, 314.0], [45.1, 315.0], [45.2, 316.0], [45.3, 318.0], [45.4, 318.0], [45.5, 319.0], [45.6, 320.0], [45.7, 322.0], [45.8, 322.0], [45.9, 323.0], [46.0, 324.0], [46.1, 325.0], [46.2, 325.0], [46.3, 326.0], [46.4, 327.0], [46.5, 328.0], [46.6, 329.0], [46.7, 329.0], [46.8, 330.0], [46.9, 331.0], [47.0, 332.0], [47.1, 333.0], [47.2, 333.0], [47.3, 334.0], [47.4, 335.0], [47.5, 337.0], [47.6, 337.0], [47.7, 338.0], [47.8, 338.0], [47.9, 339.0], [48.0, 340.0], [48.1, 341.0], [48.2, 341.0], [48.3, 342.0], [48.4, 343.0], [48.5, 344.0], [48.6, 344.0], [48.7, 345.0], [48.8, 346.0], [48.9, 347.0], [49.0, 348.0], [49.1, 348.0], [49.2, 349.0], [49.3, 350.0], [49.4, 351.0], [49.5, 352.0], [49.6, 352.0], [49.7, 353.0], [49.8, 354.0], [49.9, 355.0], [50.0, 356.0], [50.1, 357.0], [50.2, 358.0], [50.3, 359.0], [50.4, 360.0], [50.5, 361.0], [50.6, 361.0], [50.7, 362.0], [50.8, 363.0], [50.9, 364.0], [51.0, 364.0], [51.1, 365.0], [51.2, 366.0], [51.3, 367.0], [51.4, 368.0], [51.5, 370.0], [51.6, 370.0], [51.7, 371.0], [51.8, 372.0], [51.9, 373.0], [52.0, 374.0], [52.1, 375.0], [52.2, 376.0], [52.3, 377.0], [52.4, 378.0], [52.5, 379.0], [52.6, 380.0], [52.7, 381.0], [52.8, 382.0], [52.9, 383.0], [53.0, 384.0], [53.1, 385.0], [53.2, 385.0], [53.3, 386.0], [53.4, 387.0], [53.5, 388.0], [53.6, 389.0], [53.7, 390.0], [53.8, 391.0], [53.9, 392.0], [54.0, 393.0], [54.1, 394.0], [54.2, 395.0], [54.3, 395.0], [54.4, 396.0], [54.5, 397.0], [54.6, 398.0], [54.7, 399.0], [54.8, 400.0], [54.9, 401.0], [55.0, 401.0], [55.1, 402.0], [55.2, 403.0], [55.3, 404.0], [55.4, 405.0], [55.5, 407.0], [55.6, 407.0], [55.7, 409.0], [55.8, 410.0], [55.9, 411.0], [56.0, 412.0], [56.1, 414.0], [56.2, 416.0], [56.3, 417.0], [56.4, 417.0], [56.5, 419.0], [56.6, 420.0], [56.7, 420.0], [56.8, 421.0], [56.9, 423.0], [57.0, 425.0], [57.1, 426.0], [57.2, 427.0], [57.3, 428.0], [57.4, 429.0], [57.5, 430.0], [57.6, 431.0], [57.7, 432.0], [57.8, 433.0], [57.9, 435.0], [58.0, 436.0], [58.1, 437.0], [58.2, 439.0], [58.3, 441.0], [58.4, 442.0], [58.5, 443.0], [58.6, 445.0], [58.7, 446.0], [58.8, 447.0], [58.9, 449.0], [59.0, 451.0], [59.1, 451.0], [59.2, 454.0], [59.3, 455.0], [59.4, 456.0], [59.5, 458.0], [59.6, 460.0], [59.7, 460.0], [59.8, 461.0], [59.9, 464.0], [60.0, 464.0], [60.1, 466.0], [60.2, 467.0], [60.3, 468.0], [60.4, 469.0], [60.5, 470.0], [60.6, 472.0], [60.7, 473.0], [60.8, 475.0], [60.9, 476.0], [61.0, 477.0], [61.1, 478.0], [61.2, 480.0], [61.3, 482.0], [61.4, 483.0], [61.5, 484.0], [61.6, 485.0], [61.7, 487.0], [61.8, 489.0], [61.9, 490.0], [62.0, 492.0], [62.1, 493.0], [62.2, 494.0], [62.3, 496.0], [62.4, 496.0], [62.5, 497.0], [62.6, 499.0], [62.7, 500.0], [62.8, 501.0], [62.9, 502.0], [63.0, 504.0], [63.1, 505.0], [63.2, 506.0], [63.3, 507.0], [63.4, 508.0], [63.5, 509.0], [63.6, 510.0], [63.7, 512.0], [63.8, 513.0], [63.9, 514.0], [64.0, 516.0], [64.1, 517.0], [64.2, 518.0], [64.3, 519.0], [64.4, 521.0], [64.5, 522.0], [64.6, 523.0], [64.7, 525.0], [64.8, 526.0], [64.9, 527.0], [65.0, 528.0], [65.1, 529.0], [65.2, 531.0], [65.3, 531.0], [65.4, 533.0], [65.5, 534.0], [65.6, 535.0], [65.7, 538.0], [65.8, 539.0], [65.9, 540.0], [66.0, 541.0], [66.1, 543.0], [66.2, 544.0], [66.3, 546.0], [66.4, 547.0], [66.5, 548.0], [66.6, 550.0], [66.7, 551.0], [66.8, 552.0], [66.9, 554.0], [67.0, 555.0], [67.1, 556.0], [67.2, 558.0], [67.3, 560.0], [67.4, 561.0], [67.5, 562.0], [67.6, 563.0], [67.7, 564.0], [67.8, 565.0], [67.9, 567.0], [68.0, 568.0], [68.1, 571.0], [68.2, 572.0], [68.3, 574.0], [68.4, 576.0], [68.5, 577.0], [68.6, 578.0], [68.7, 579.0], [68.8, 581.0], [68.9, 583.0], [69.0, 586.0], [69.1, 588.0], [69.2, 589.0], [69.3, 591.0], [69.4, 592.0], [69.5, 593.0], [69.6, 595.0], [69.7, 597.0], [69.8, 600.0], [69.9, 602.0], [70.0, 604.0], [70.1, 604.0], [70.2, 605.0], [70.3, 607.0], [70.4, 609.0], [70.5, 612.0], [70.6, 613.0], [70.7, 615.0], [70.8, 616.0], [70.9, 620.0], [71.0, 621.0], [71.1, 623.0], [71.2, 626.0], [71.3, 627.0], [71.4, 630.0], [71.5, 633.0], [71.6, 635.0], [71.7, 637.0], [71.8, 639.0], [71.9, 639.0], [72.0, 642.0], [72.1, 643.0], [72.2, 646.0], [72.3, 647.0], [72.4, 650.0], [72.5, 653.0], [72.6, 655.0], [72.7, 658.0], [72.8, 660.0], [72.9, 662.0], [73.0, 664.0], [73.1, 666.0], [73.2, 668.0], [73.3, 671.0], [73.4, 673.0], [73.5, 676.0], [73.6, 679.0], [73.7, 681.0], [73.8, 685.0], [73.9, 687.0], [74.0, 690.0], [74.1, 691.0], [74.2, 694.0], [74.3, 698.0], [74.4, 701.0], [74.5, 703.0], [74.6, 705.0], [74.7, 710.0], [74.8, 711.0], [74.9, 714.0], [75.0, 716.0], [75.1, 719.0], [75.2, 721.0], [75.3, 724.0], [75.4, 727.0], [75.5, 729.0], [75.6, 733.0], [75.7, 736.0], [75.8, 738.0], [75.9, 740.0], [76.0, 742.0], [76.1, 745.0], [76.2, 747.0], [76.3, 749.0], [76.4, 753.0], [76.5, 756.0], [76.6, 759.0], [76.7, 763.0], [76.8, 767.0], [76.9, 769.0], [77.0, 773.0], [77.1, 777.0], [77.2, 779.0], [77.3, 783.0], [77.4, 786.0], [77.5, 788.0], [77.6, 791.0], [77.7, 793.0], [77.8, 797.0], [77.9, 798.0], [78.0, 800.0], [78.1, 804.0], [78.2, 807.0], [78.3, 809.0], [78.4, 812.0], [78.5, 814.0], [78.6, 819.0], [78.7, 825.0], [78.8, 827.0], [78.9, 833.0], [79.0, 836.0], [79.1, 841.0], [79.2, 844.0], [79.3, 848.0], [79.4, 852.0], [79.5, 857.0], [79.6, 860.0], [79.7, 864.0], [79.8, 868.0], [79.9, 876.0], [80.0, 880.0], [80.1, 884.0], [80.2, 888.0], [80.3, 895.0], [80.4, 900.0], [80.5, 903.0], [80.6, 912.0], [80.7, 917.0], [80.8, 922.0], [80.9, 928.0], [81.0, 933.0], [81.1, 939.0], [81.2, 943.0], [81.3, 949.0], [81.4, 956.0], [81.5, 959.0], [81.6, 964.0], [81.7, 970.0], [81.8, 976.0], [81.9, 980.0], [82.0, 985.0], [82.1, 997.0], [82.2, 1004.0], [82.3, 1012.0], [82.4, 1016.0], [82.5, 1018.0], [82.6, 1024.0], [82.7, 1031.0], [82.8, 1037.0], [82.9, 1043.0], [83.0, 1048.0], [83.1, 1052.0], [83.2, 1055.0], [83.3, 1058.0], [83.4, 1062.0], [83.5, 1065.0], [83.6, 1069.0], [83.7, 1074.0], [83.8, 1079.0], [83.9, 1082.0], [84.0, 1089.0], [84.1, 1093.0], [84.2, 1096.0], [84.3, 1102.0], [84.4, 1106.0], [84.5, 1109.0], [84.6, 1115.0], [84.7, 1118.0], [84.8, 1121.0], [84.9, 1124.0], [85.0, 1130.0], [85.1, 1134.0], [85.2, 1136.0], [85.3, 1138.0], [85.4, 1142.0], [85.5, 1144.0], [85.6, 1148.0], [85.7, 1151.0], [85.8, 1154.0], [85.9, 1157.0], [86.0, 1160.0], [86.1, 1162.0], [86.2, 1165.0], [86.3, 1171.0], [86.4, 1178.0], [86.5, 1181.0], [86.6, 1188.0], [86.7, 1192.0], [86.8, 1197.0], [86.9, 1201.0], [87.0, 1205.0], [87.1, 1208.0], [87.2, 1211.0], [87.3, 1215.0], [87.4, 1218.0], [87.5, 1220.0], [87.6, 1226.0], [87.7, 1229.0], [87.8, 1234.0], [87.9, 1235.0], [88.0, 1236.0], [88.1, 1245.0], [88.2, 1252.0], [88.3, 1256.0], [88.4, 1260.0], [88.5, 1267.0], [88.6, 1271.0], [88.7, 1277.0], [88.8, 1283.0], [88.9, 1294.0], [89.0, 1298.0], [89.1, 1304.0], [89.2, 1312.0], [89.3, 1318.0], [89.4, 1321.0], [89.5, 1325.0], [89.6, 1329.0], [89.7, 1334.0], [89.8, 1336.0], [89.9, 1341.0], [90.0, 1344.0], [90.1, 1348.0], [90.2, 1354.0], [90.3, 1358.0], [90.4, 1363.0], [90.5, 1368.0], [90.6, 1378.0], [90.7, 1381.0], [90.8, 1385.0], [90.9, 1389.0], [91.0, 1393.0], [91.1, 1398.0], [91.2, 1409.0], [91.3, 1416.0], [91.4, 1422.0], [91.5, 1428.0], [91.6, 1434.0], [91.7, 1437.0], [91.8, 1443.0], [91.9, 1447.0], [92.0, 1454.0], [92.1, 1456.0], [92.2, 1461.0], [92.3, 1468.0], [92.4, 1472.0], [92.5, 1481.0], [92.6, 1483.0], [92.7, 1488.0], [92.8, 1498.0], [92.9, 1502.0], [93.0, 1507.0], [93.1, 1514.0], [93.2, 1521.0], [93.3, 1528.0], [93.4, 1537.0], [93.5, 1548.0], [93.6, 1556.0], [93.7, 1566.0], [93.8, 1579.0], [93.9, 1588.0], [94.0, 1599.0], [94.1, 1607.0], [94.2, 1616.0], [94.3, 1623.0], [94.4, 1628.0], [94.5, 1635.0], [94.6, 1643.0], [94.7, 1650.0], [94.8, 1659.0], [94.9, 1666.0], [95.0, 1680.0], [95.1, 1689.0], [95.2, 1713.0], [95.3, 1727.0], [95.4, 1735.0], [95.5, 1757.0], [95.6, 1776.0], [95.7, 1794.0], [95.8, 1807.0], [95.9, 1819.0], [96.0, 1833.0], [96.1, 1852.0], [96.2, 1863.0], [96.3, 1883.0], [96.4, 1896.0], [96.5, 1907.0], [96.6, 1917.0], [96.7, 1960.0], [96.8, 1985.0], [96.9, 2025.0], [97.0, 2048.0], [97.1, 2078.0], [97.2, 2111.0], [97.3, 2141.0], [97.4, 2165.0], [97.5, 2185.0], [97.6, 2226.0], [97.7, 2248.0], [97.8, 2283.0], [97.9, 2311.0], [98.0, 2337.0], [98.1, 2366.0], [98.2, 2408.0], [98.3, 2453.0], [98.4, 2503.0], [98.5, 2561.0], [98.6, 2631.0], [98.7, 2733.0], [98.8, 2792.0], [98.9, 2889.0], [99.0, 2970.0], [99.1, 3063.0], [99.2, 3200.0], [99.3, 3285.0], [99.4, 3495.0], [99.5, 3654.0], [99.6, 3954.0], [99.7, 4274.0], [99.8, 4471.0], [99.9, 4805.0], [100.0, 14527.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 3.0], [85.1, 3.0], [85.2, 3.0], [85.3, 3.0], [85.4, 3.0], [85.5, 3.0], [85.6, 3.0], [85.7, 3.0], [85.8, 3.0], [85.9, 3.0], [86.0, 3.0], [86.1, 3.0], [86.2, 3.0], [86.3, 3.0], [86.4, 3.0], [86.5, 3.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 3.0], [87.4, 3.0], [87.5, 3.0], [87.6, 3.0], [87.7, 3.0], [87.8, 3.0], [87.9, 3.0], [88.0, 4.0], [88.1, 4.0], [88.2, 4.0], [88.3, 4.0], [88.4, 4.0], [88.5, 4.0], [88.6, 4.0], [88.7, 4.0], [88.8, 4.0], [88.9, 4.0], [89.0, 5.0], [89.1, 5.0], [89.2, 5.0], [89.3, 5.0], [89.4, 5.0], [89.5, 5.0], [89.6, 5.0], [89.7, 5.0], [89.8, 5.0], [89.9, 5.0], [90.0, 13.0], [90.1, 13.0], [90.2, 13.0], [90.3, 13.0], [90.4, 13.0], [90.5, 13.0], [90.6, 13.0], [90.7, 13.0], [90.8, 13.0], [90.9, 13.0], [91.0, 19.0], [91.1, 19.0], [91.2, 19.0], [91.3, 19.0], [91.4, 19.0], [91.5, 19.0], [91.6, 19.0], [91.7, 19.0], [91.8, 19.0], [91.9, 19.0], [92.0, 24.0], [92.1, 24.0], [92.2, 24.0], [92.3, 24.0], [92.4, 24.0], [92.5, 24.0], [92.6, 24.0], [92.7, 24.0], [92.8, 24.0], [92.9, 24.0], [93.0, 105.0], [93.1, 105.0], [93.2, 105.0], [93.3, 105.0], [93.4, 105.0], [93.5, 105.0], [93.6, 105.0], [93.7, 105.0], [93.8, 105.0], [93.9, 105.0], [94.0, 167.0], [94.1, 167.0], [94.2, 167.0], [94.3, 167.0], [94.4, 167.0], [94.5, 167.0], [94.6, 167.0], [94.7, 167.0], [94.8, 167.0], [94.9, 167.0], [95.0, 262.0], [95.1, 262.0], [95.2, 262.0], [95.3, 262.0], [95.4, 262.0], [95.5, 262.0], [95.6, 262.0], [95.7, 262.0], [95.8, 262.0], [95.9, 262.0], [96.0, 413.0], [96.1, 413.0], [96.2, 413.0], [96.3, 413.0], [96.4, 413.0], [96.5, 413.0], [96.6, 413.0], [96.7, 413.0], [96.8, 413.0], [96.9, 413.0], [97.0, 563.0], [97.1, 563.0], [97.2, 563.0], [97.3, 563.0], [97.4, 563.0], [97.5, 563.0], [97.6, 563.0], [97.7, 563.0], [97.8, 563.0], [97.9, 563.0], [98.0, 713.0], [98.1, 713.0], [98.2, 713.0], [98.3, 713.0], [98.4, 713.0], [98.5, 713.0], [98.6, 713.0], [98.7, 713.0], [98.8, 713.0], [98.9, 713.0], [99.0, 855.0], [99.1, 855.0], [99.2, 855.0], [99.3, 855.0], [99.4, 855.0], [99.5, 855.0], [99.6, 855.0], [99.7, 855.0], [99.8, 855.0], [99.9, 855.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 3.0], [82.1, 3.0], [82.2, 3.0], [82.3, 3.0], [82.4, 3.0], [82.5, 3.0], [82.6, 3.0], [82.7, 3.0], [82.8, 3.0], [82.9, 3.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 3.0], [85.1, 3.0], [85.2, 3.0], [85.3, 3.0], [85.4, 3.0], [85.5, 3.0], [85.6, 3.0], [85.7, 3.0], [85.8, 3.0], [85.9, 3.0], [86.0, 4.0], [86.1, 4.0], [86.2, 4.0], [86.3, 4.0], [86.4, 4.0], [86.5, 4.0], [86.6, 4.0], [86.7, 4.0], [86.8, 4.0], [86.9, 4.0], [87.0, 4.0], [87.1, 4.0], [87.2, 4.0], [87.3, 4.0], [87.4, 4.0], [87.5, 4.0], [87.6, 4.0], [87.7, 4.0], [87.8, 4.0], [87.9, 4.0], [88.0, 5.0], [88.1, 5.0], [88.2, 5.0], [88.3, 5.0], [88.4, 5.0], [88.5, 5.0], [88.6, 5.0], [88.7, 5.0], [88.8, 5.0], [88.9, 5.0], [89.0, 6.0], [89.1, 6.0], [89.2, 6.0], [89.3, 6.0], [89.4, 6.0], [89.5, 6.0], [89.6, 6.0], [89.7, 6.0], [89.8, 6.0], [89.9, 6.0], [90.0, 6.0], [90.1, 6.0], [90.2, 6.0], [90.3, 6.0], [90.4, 6.0], [90.5, 6.0], [90.6, 6.0], [90.7, 6.0], [90.8, 6.0], [90.9, 6.0], [91.0, 12.0], [91.1, 12.0], [91.2, 12.0], [91.3, 12.0], [91.4, 12.0], [91.5, 12.0], [91.6, 12.0], [91.7, 12.0], [91.8, 12.0], [91.9, 12.0], [92.0, 87.0], [92.1, 87.0], [92.2, 87.0], [92.3, 87.0], [92.4, 87.0], [92.5, 87.0], [92.6, 87.0], [92.7, 87.0], [92.8, 87.0], [92.9, 87.0], [93.0, 96.0], [93.1, 96.0], [93.2, 96.0], [93.3, 96.0], [93.4, 96.0], [93.5, 96.0], [93.6, 96.0], [93.7, 96.0], [93.8, 96.0], [93.9, 96.0], [94.0, 293.0], [94.1, 293.0], [94.2, 293.0], [94.3, 293.0], [94.4, 293.0], [94.5, 293.0], [94.6, 293.0], [94.7, 293.0], [94.8, 293.0], [94.9, 293.0], [95.0, 296.0], [95.1, 296.0], [95.2, 296.0], [95.3, 296.0], [95.4, 296.0], [95.5, 296.0], [95.6, 296.0], [95.7, 296.0], [95.8, 296.0], [95.9, 296.0], [96.0, 301.0], [96.1, 301.0], [96.2, 301.0], [96.3, 301.0], [96.4, 301.0], [96.5, 301.0], [96.6, 301.0], [96.7, 301.0], [96.8, 301.0], [96.9, 301.0], [97.0, 305.0], [97.1, 305.0], [97.2, 305.0], [97.3, 305.0], [97.4, 305.0], [97.5, 305.0], [97.6, 305.0], [97.7, 305.0], [97.8, 305.0], [97.9, 305.0], [98.0, 309.0], [98.1, 309.0], [98.2, 309.0], [98.3, 309.0], [98.4, 309.0], [98.5, 309.0], [98.6, 309.0], [98.7, 309.0], [98.8, 309.0], [98.9, 309.0], [99.0, 311.0], [99.1, 311.0], [99.2, 311.0], [99.3, 311.0], [99.4, 311.0], [99.5, 311.0], [99.6, 311.0], [99.7, 311.0], [99.8, 311.0], [99.9, 311.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 26.0], [0.1, 27.0], [0.2, 27.0], [0.3, 28.0], [0.4, 28.0], [0.5, 28.0], [0.6, 29.0], [0.7, 29.0], [0.8, 29.0], [0.9, 29.0], [1.0, 30.0], [1.1, 30.0], [1.2, 30.0], [1.3, 30.0], [1.4, 30.0], [1.5, 31.0], [1.6, 31.0], [1.7, 31.0], [1.8, 31.0], [1.9, 32.0], [2.0, 32.0], [2.1, 32.0], [2.2, 32.0], [2.3, 32.0], [2.4, 32.0], [2.5, 32.0], [2.6, 32.0], [2.7, 32.0], [2.8, 33.0], [2.9, 33.0], [3.0, 33.0], [3.1, 33.0], [3.2, 33.0], [3.3, 33.0], [3.4, 33.0], [3.5, 34.0], [3.6, 34.0], [3.7, 34.0], [3.8, 34.0], [3.9, 34.0], [4.0, 35.0], [4.1, 35.0], [4.2, 35.0], [4.3, 35.0], [4.4, 35.0], [4.5, 35.0], [4.6, 35.0], [4.7, 36.0], [4.8, 36.0], [4.9, 36.0], [5.0, 36.0], [5.1, 36.0], [5.2, 37.0], [5.3, 37.0], [5.4, 37.0], [5.5, 37.0], [5.6, 37.0], [5.7, 37.0], [5.8, 37.0], [5.9, 38.0], [6.0, 38.0], [6.1, 38.0], [6.2, 38.0], [6.3, 39.0], [6.4, 39.0], [6.5, 39.0], [6.6, 39.0], [6.7, 39.0], [6.8, 39.0], [6.9, 40.0], [7.0, 40.0], [7.1, 40.0], [7.2, 40.0], [7.3, 40.0], [7.4, 40.0], [7.5, 41.0], [7.6, 41.0], [7.7, 41.0], [7.8, 41.0], [7.9, 42.0], [8.0, 42.0], [8.1, 42.0], [8.2, 42.0], [8.3, 42.0], [8.4, 42.0], [8.5, 42.0], [8.6, 43.0], [8.7, 43.0], [8.8, 43.0], [8.9, 43.0], [9.0, 44.0], [9.1, 44.0], [9.2, 44.0], [9.3, 44.0], [9.4, 45.0], [9.5, 45.0], [9.6, 45.0], [9.7, 45.0], [9.8, 45.0], [9.9, 46.0], [10.0, 46.0], [10.1, 47.0], [10.2, 47.0], [10.3, 47.0], [10.4, 47.0], [10.5, 47.0], [10.6, 48.0], [10.7, 48.0], [10.8, 48.0], [10.9, 48.0], [11.0, 49.0], [11.1, 49.0], [11.2, 49.0], [11.3, 50.0], [11.4, 50.0], [11.5, 50.0], [11.6, 51.0], [11.7, 51.0], [11.8, 51.0], [11.9, 51.0], [12.0, 52.0], [12.1, 52.0], [12.2, 52.0], [12.3, 53.0], [12.4, 53.0], [12.5, 53.0], [12.6, 53.0], [12.7, 53.0], [12.8, 54.0], [12.9, 54.0], [13.0, 54.0], [13.1, 55.0], [13.2, 55.0], [13.3, 55.0], [13.4, 56.0], [13.5, 56.0], [13.6, 56.0], [13.7, 56.0], [13.8, 57.0], [13.9, 57.0], [14.0, 57.0], [14.1, 57.0], [14.2, 58.0], [14.3, 58.0], [14.4, 59.0], [14.5, 59.0], [14.6, 59.0], [14.7, 59.0], [14.8, 60.0], [14.9, 60.0], [15.0, 60.0], [15.1, 61.0], [15.2, 61.0], [15.3, 61.0], [15.4, 61.0], [15.5, 61.0], [15.6, 62.0], [15.7, 62.0], [15.8, 62.0], [15.9, 63.0], [16.0, 63.0], [16.1, 63.0], [16.2, 64.0], [16.3, 64.0], [16.4, 65.0], [16.5, 66.0], [16.6, 66.0], [16.7, 66.0], [16.8, 67.0], [16.9, 67.0], [17.0, 67.0], [17.1, 68.0], [17.2, 68.0], [17.3, 69.0], [17.4, 69.0], [17.5, 69.0], [17.6, 69.0], [17.7, 70.0], [17.8, 70.0], [17.9, 71.0], [18.0, 71.0], [18.1, 71.0], [18.2, 72.0], [18.3, 72.0], [18.4, 72.0], [18.5, 73.0], [18.6, 74.0], [18.7, 75.0], [18.8, 75.0], [18.9, 75.0], [19.0, 76.0], [19.1, 76.0], [19.2, 77.0], [19.3, 78.0], [19.4, 78.0], [19.5, 78.0], [19.6, 79.0], [19.7, 79.0], [19.8, 80.0], [19.9, 80.0], [20.0, 80.0], [20.1, 81.0], [20.2, 82.0], [20.3, 82.0], [20.4, 83.0], [20.5, 84.0], [20.6, 84.0], [20.7, 85.0], [20.8, 86.0], [20.9, 86.0], [21.0, 86.0], [21.1, 87.0], [21.2, 87.0], [21.3, 88.0], [21.4, 88.0], [21.5, 88.0], [21.6, 89.0], [21.7, 90.0], [21.8, 90.0], [21.9, 90.0], [22.0, 91.0], [22.1, 91.0], [22.2, 92.0], [22.3, 92.0], [22.4, 93.0], [22.5, 94.0], [22.6, 94.0], [22.7, 95.0], [22.8, 96.0], [22.9, 97.0], [23.0, 98.0], [23.1, 98.0], [23.2, 98.0], [23.3, 99.0], [23.4, 100.0], [23.5, 100.0], [23.6, 100.0], [23.7, 101.0], [23.8, 102.0], [23.9, 103.0], [24.0, 103.0], [24.1, 104.0], [24.2, 104.0], [24.3, 104.0], [24.4, 105.0], [24.5, 105.0], [24.6, 107.0], [24.7, 107.0], [24.8, 108.0], [24.9, 108.0], [25.0, 109.0], [25.1, 110.0], [25.2, 110.0], [25.3, 111.0], [25.4, 112.0], [25.5, 113.0], [25.6, 114.0], [25.7, 114.0], [25.8, 115.0], [25.9, 116.0], [26.0, 116.0], [26.1, 117.0], [26.2, 118.0], [26.3, 119.0], [26.4, 120.0], [26.5, 120.0], [26.6, 120.0], [26.7, 121.0], [26.8, 122.0], [26.9, 123.0], [27.0, 124.0], [27.1, 125.0], [27.2, 125.0], [27.3, 126.0], [27.4, 127.0], [27.5, 128.0], [27.6, 129.0], [27.7, 129.0], [27.8, 130.0], [27.9, 131.0], [28.0, 131.0], [28.1, 131.0], [28.2, 132.0], [28.3, 133.0], [28.4, 133.0], [28.5, 134.0], [28.6, 135.0], [28.7, 136.0], [28.8, 136.0], [28.9, 137.0], [29.0, 138.0], [29.1, 138.0], [29.2, 139.0], [29.3, 141.0], [29.4, 142.0], [29.5, 143.0], [29.6, 145.0], [29.7, 146.0], [29.8, 147.0], [29.9, 148.0], [30.0, 149.0], [30.1, 150.0], [30.2, 150.0], [30.3, 151.0], [30.4, 151.0], [30.5, 152.0], [30.6, 152.0], [30.7, 153.0], [30.8, 154.0], [30.9, 155.0], [31.0, 156.0], [31.1, 156.0], [31.2, 157.0], [31.3, 158.0], [31.4, 159.0], [31.5, 159.0], [31.6, 160.0], [31.7, 162.0], [31.8, 163.0], [31.9, 163.0], [32.0, 164.0], [32.1, 165.0], [32.2, 166.0], [32.3, 166.0], [32.4, 167.0], [32.5, 167.0], [32.6, 168.0], [32.7, 169.0], [32.8, 170.0], [32.9, 172.0], [33.0, 172.0], [33.1, 173.0], [33.2, 174.0], [33.3, 176.0], [33.4, 177.0], [33.5, 177.0], [33.6, 178.0], [33.7, 178.0], [33.8, 180.0], [33.9, 181.0], [34.0, 181.0], [34.1, 182.0], [34.2, 183.0], [34.3, 183.0], [34.4, 184.0], [34.5, 186.0], [34.6, 186.0], [34.7, 187.0], [34.8, 187.0], [34.9, 188.0], [35.0, 189.0], [35.1, 190.0], [35.2, 190.0], [35.3, 192.0], [35.4, 193.0], [35.5, 195.0], [35.6, 195.0], [35.7, 197.0], [35.8, 198.0], [35.9, 198.0], [36.0, 199.0], [36.1, 200.0], [36.2, 201.0], [36.3, 202.0], [36.4, 203.0], [36.5, 203.0], [36.6, 204.0], [36.7, 204.0], [36.8, 206.0], [36.9, 207.0], [37.0, 208.0], [37.1, 209.0], [37.2, 210.0], [37.3, 210.0], [37.4, 211.0], [37.5, 212.0], [37.6, 213.0], [37.7, 214.0], [37.8, 214.0], [37.9, 215.0], [38.0, 216.0], [38.1, 217.0], [38.2, 218.0], [38.3, 219.0], [38.4, 220.0], [38.5, 221.0], [38.6, 222.0], [38.7, 222.0], [38.8, 223.0], [38.9, 224.0], [39.0, 225.0], [39.1, 226.0], [39.2, 228.0], [39.3, 228.0], [39.4, 229.0], [39.5, 230.0], [39.6, 230.0], [39.7, 231.0], [39.8, 232.0], [39.9, 233.0], [40.0, 234.0], [40.1, 235.0], [40.2, 235.0], [40.3, 236.0], [40.4, 237.0], [40.5, 238.0], [40.6, 238.0], [40.7, 238.0], [40.8, 239.0], [40.9, 240.0], [41.0, 241.0], [41.1, 242.0], [41.2, 243.0], [41.3, 243.0], [41.4, 244.0], [41.5, 245.0], [41.6, 246.0], [41.7, 246.0], [41.8, 247.0], [41.9, 248.0], [42.0, 249.0], [42.1, 249.0], [42.2, 250.0], [42.3, 251.0], [42.4, 252.0], [42.5, 252.0], [42.6, 254.0], [42.7, 256.0], [42.8, 256.0], [42.9, 256.0], [43.0, 257.0], [43.1, 258.0], [43.2, 259.0], [43.3, 260.0], [43.4, 262.0], [43.5, 263.0], [43.6, 264.0], [43.7, 265.0], [43.8, 266.0], [43.9, 267.0], [44.0, 269.0], [44.1, 269.0], [44.2, 270.0], [44.3, 271.0], [44.4, 271.0], [44.5, 274.0], [44.6, 276.0], [44.7, 276.0], [44.8, 277.0], [44.9, 279.0], [45.0, 280.0], [45.1, 282.0], [45.2, 282.0], [45.3, 283.0], [45.4, 284.0], [45.5, 285.0], [45.6, 285.0], [45.7, 286.0], [45.8, 287.0], [45.9, 288.0], [46.0, 289.0], [46.1, 290.0], [46.2, 290.0], [46.3, 291.0], [46.4, 292.0], [46.5, 294.0], [46.6, 295.0], [46.7, 295.0], [46.8, 296.0], [46.9, 298.0], [47.0, 298.0], [47.1, 299.0], [47.2, 299.0], [47.3, 300.0], [47.4, 302.0], [47.5, 302.0], [47.6, 303.0], [47.7, 304.0], [47.8, 305.0], [47.9, 306.0], [48.0, 307.0], [48.1, 308.0], [48.2, 310.0], [48.3, 311.0], [48.4, 314.0], [48.5, 315.0], [48.6, 316.0], [48.7, 318.0], [48.8, 318.0], [48.9, 320.0], [49.0, 321.0], [49.1, 322.0], [49.2, 323.0], [49.3, 325.0], [49.4, 326.0], [49.5, 327.0], [49.6, 327.0], [49.7, 329.0], [49.8, 330.0], [49.9, 331.0], [50.0, 333.0], [50.1, 334.0], [50.2, 335.0], [50.3, 336.0], [50.4, 338.0], [50.5, 339.0], [50.6, 340.0], [50.7, 341.0], [50.8, 342.0], [50.9, 343.0], [51.0, 344.0], [51.1, 344.0], [51.2, 345.0], [51.3, 347.0], [51.4, 349.0], [51.5, 351.0], [51.6, 351.0], [51.7, 352.0], [51.8, 352.0], [51.9, 354.0], [52.0, 354.0], [52.1, 355.0], [52.2, 357.0], [52.3, 358.0], [52.4, 359.0], [52.5, 360.0], [52.6, 361.0], [52.7, 363.0], [52.8, 363.0], [52.9, 365.0], [53.0, 368.0], [53.1, 370.0], [53.2, 370.0], [53.3, 372.0], [53.4, 373.0], [53.5, 374.0], [53.6, 375.0], [53.7, 376.0], [53.8, 376.0], [53.9, 378.0], [54.0, 380.0], [54.1, 381.0], [54.2, 382.0], [54.3, 383.0], [54.4, 384.0], [54.5, 384.0], [54.6, 385.0], [54.7, 387.0], [54.8, 388.0], [54.9, 390.0], [55.0, 394.0], [55.1, 395.0], [55.2, 396.0], [55.3, 397.0], [55.4, 397.0], [55.5, 398.0], [55.6, 399.0], [55.7, 401.0], [55.8, 402.0], [55.9, 403.0], [56.0, 405.0], [56.1, 406.0], [56.2, 406.0], [56.3, 407.0], [56.4, 408.0], [56.5, 409.0], [56.6, 411.0], [56.7, 411.0], [56.8, 412.0], [56.9, 413.0], [57.0, 414.0], [57.1, 416.0], [57.2, 417.0], [57.3, 418.0], [57.4, 419.0], [57.5, 420.0], [57.6, 421.0], [57.7, 421.0], [57.8, 423.0], [57.9, 424.0], [58.0, 426.0], [58.1, 428.0], [58.2, 430.0], [58.3, 431.0], [58.4, 432.0], [58.5, 435.0], [58.6, 436.0], [58.7, 437.0], [58.8, 439.0], [58.9, 442.0], [59.0, 444.0], [59.1, 445.0], [59.2, 447.0], [59.3, 448.0], [59.4, 449.0], [59.5, 452.0], [59.6, 453.0], [59.7, 455.0], [59.8, 458.0], [59.9, 459.0], [60.0, 461.0], [60.1, 461.0], [60.2, 463.0], [60.3, 464.0], [60.4, 465.0], [60.5, 466.0], [60.6, 467.0], [60.7, 468.0], [60.8, 470.0], [60.9, 471.0], [61.0, 472.0], [61.1, 474.0], [61.2, 475.0], [61.3, 477.0], [61.4, 479.0], [61.5, 480.0], [61.6, 482.0], [61.7, 485.0], [61.8, 487.0], [61.9, 489.0], [62.0, 491.0], [62.1, 492.0], [62.2, 494.0], [62.3, 496.0], [62.4, 497.0], [62.5, 498.0], [62.6, 499.0], [62.7, 500.0], [62.8, 502.0], [62.9, 503.0], [63.0, 507.0], [63.1, 510.0], [63.2, 512.0], [63.3, 514.0], [63.4, 515.0], [63.5, 515.0], [63.6, 518.0], [63.7, 519.0], [63.8, 520.0], [63.9, 521.0], [64.0, 522.0], [64.1, 525.0], [64.2, 526.0], [64.3, 528.0], [64.4, 530.0], [64.5, 533.0], [64.6, 534.0], [64.7, 536.0], [64.8, 539.0], [64.9, 540.0], [65.0, 543.0], [65.1, 544.0], [65.2, 547.0], [65.3, 548.0], [65.4, 549.0], [65.5, 551.0], [65.6, 553.0], [65.7, 554.0], [65.8, 556.0], [65.9, 557.0], [66.0, 560.0], [66.1, 561.0], [66.2, 561.0], [66.3, 564.0], [66.4, 565.0], [66.5, 569.0], [66.6, 570.0], [66.7, 572.0], [66.8, 572.0], [66.9, 575.0], [67.0, 576.0], [67.1, 576.0], [67.2, 577.0], [67.3, 581.0], [67.4, 584.0], [67.5, 585.0], [67.6, 587.0], [67.7, 589.0], [67.8, 590.0], [67.9, 591.0], [68.0, 593.0], [68.1, 594.0], [68.2, 597.0], [68.3, 599.0], [68.4, 601.0], [68.5, 602.0], [68.6, 607.0], [68.7, 608.0], [68.8, 611.0], [68.9, 614.0], [69.0, 615.0], [69.1, 618.0], [69.2, 618.0], [69.3, 620.0], [69.4, 622.0], [69.5, 624.0], [69.6, 626.0], [69.7, 628.0], [69.8, 631.0], [69.9, 633.0], [70.0, 635.0], [70.1, 637.0], [70.2, 641.0], [70.3, 642.0], [70.4, 645.0], [70.5, 647.0], [70.6, 649.0], [70.7, 650.0], [70.8, 653.0], [70.9, 654.0], [71.0, 659.0], [71.1, 660.0], [71.2, 662.0], [71.3, 666.0], [71.4, 667.0], [71.5, 670.0], [71.6, 673.0], [71.7, 675.0], [71.8, 679.0], [71.9, 681.0], [72.0, 684.0], [72.1, 687.0], [72.2, 690.0], [72.3, 692.0], [72.4, 695.0], [72.5, 700.0], [72.6, 702.0], [72.7, 705.0], [72.8, 708.0], [72.9, 710.0], [73.0, 714.0], [73.1, 715.0], [73.2, 716.0], [73.3, 717.0], [73.4, 718.0], [73.5, 721.0], [73.6, 723.0], [73.7, 725.0], [73.8, 728.0], [73.9, 730.0], [74.0, 732.0], [74.1, 734.0], [74.2, 736.0], [74.3, 738.0], [74.4, 742.0], [74.5, 745.0], [74.6, 747.0], [74.7, 751.0], [74.8, 756.0], [74.9, 758.0], [75.0, 765.0], [75.1, 768.0], [75.2, 770.0], [75.3, 771.0], [75.4, 777.0], [75.5, 780.0], [75.6, 783.0], [75.7, 784.0], [75.8, 785.0], [75.9, 791.0], [76.0, 794.0], [76.1, 797.0], [76.2, 801.0], [76.3, 805.0], [76.4, 808.0], [76.5, 815.0], [76.6, 819.0], [76.7, 824.0], [76.8, 826.0], [76.9, 828.0], [77.0, 833.0], [77.1, 835.0], [77.2, 837.0], [77.3, 840.0], [77.4, 845.0], [77.5, 850.0], [77.6, 852.0], [77.7, 857.0], [77.8, 861.0], [77.9, 866.0], [78.0, 870.0], [78.1, 874.0], [78.2, 877.0], [78.3, 883.0], [78.4, 895.0], [78.5, 897.0], [78.6, 899.0], [78.7, 907.0], [78.8, 909.0], [78.9, 912.0], [79.0, 916.0], [79.1, 919.0], [79.2, 927.0], [79.3, 934.0], [79.4, 937.0], [79.5, 940.0], [79.6, 948.0], [79.7, 957.0], [79.8, 965.0], [79.9, 967.0], [80.0, 973.0], [80.1, 975.0], [80.2, 977.0], [80.3, 978.0], [80.4, 982.0], [80.5, 993.0], [80.6, 995.0], [80.7, 1001.0], [80.8, 1006.0], [80.9, 1012.0], [81.0, 1015.0], [81.1, 1025.0], [81.2, 1027.0], [81.3, 1031.0], [81.4, 1048.0], [81.5, 1050.0], [81.6, 1055.0], [81.7, 1060.0], [81.8, 1062.0], [81.9, 1067.0], [82.0, 1070.0], [82.1, 1077.0], [82.2, 1087.0], [82.3, 1093.0], [82.4, 1098.0], [82.5, 1105.0], [82.6, 1111.0], [82.7, 1114.0], [82.8, 1118.0], [82.9, 1124.0], [83.0, 1131.0], [83.1, 1140.0], [83.2, 1147.0], [83.3, 1149.0], [83.4, 1153.0], [83.5, 1155.0], [83.6, 1162.0], [83.7, 1165.0], [83.8, 1170.0], [83.9, 1177.0], [84.0, 1180.0], [84.1, 1186.0], [84.2, 1195.0], [84.3, 1199.0], [84.4, 1202.0], [84.5, 1207.0], [84.6, 1214.0], [84.7, 1223.0], [84.8, 1228.0], [84.9, 1229.0], [85.0, 1232.0], [85.1, 1236.0], [85.2, 1238.0], [85.3, 1242.0], [85.4, 1247.0], [85.5, 1255.0], [85.6, 1259.0], [85.7, 1260.0], [85.8, 1265.0], [85.9, 1275.0], [86.0, 1276.0], [86.1, 1285.0], [86.2, 1286.0], [86.3, 1289.0], [86.4, 1301.0], [86.5, 1309.0], [86.6, 1316.0], [86.7, 1327.0], [86.8, 1336.0], [86.9, 1338.0], [87.0, 1346.0], [87.1, 1352.0], [87.2, 1361.0], [87.3, 1374.0], [87.4, 1376.0], [87.5, 1383.0], [87.6, 1393.0], [87.7, 1394.0], [87.8, 1398.0], [87.9, 1407.0], [88.0, 1411.0], [88.1, 1418.0], [88.2, 1420.0], [88.3, 1428.0], [88.4, 1436.0], [88.5, 1445.0], [88.6, 1456.0], [88.7, 1464.0], [88.8, 1467.0], [88.9, 1472.0], [89.0, 1476.0], [89.1, 1483.0], [89.2, 1489.0], [89.3, 1490.0], [89.4, 1500.0], [89.5, 1509.0], [89.6, 1519.0], [89.7, 1526.0], [89.8, 1529.0], [89.9, 1534.0], [90.0, 1538.0], [90.1, 1546.0], [90.2, 1552.0], [90.3, 1563.0], [90.4, 1571.0], [90.5, 1584.0], [90.6, 1594.0], [90.7, 1603.0], [90.8, 1611.0], [90.9, 1620.0], [91.0, 1622.0], [91.1, 1632.0], [91.2, 1634.0], [91.3, 1646.0], [91.4, 1654.0], [91.5, 1668.0], [91.6, 1674.0], [91.7, 1692.0], [91.8, 1696.0], [91.9, 1703.0], [92.0, 1709.0], [92.1, 1727.0], [92.2, 1740.0], [92.3, 1748.0], [92.4, 1755.0], [92.5, 1772.0], [92.6, 1778.0], [92.7, 1786.0], [92.8, 1795.0], [92.9, 1801.0], [93.0, 1807.0], [93.1, 1817.0], [93.2, 1823.0], [93.3, 1841.0], [93.4, 1846.0], [93.5, 1855.0], [93.6, 1860.0], [93.7, 1863.0], [93.8, 1872.0], [93.9, 1886.0], [94.0, 1906.0], [94.1, 1922.0], [94.2, 1940.0], [94.3, 1954.0], [94.4, 1964.0], [94.5, 1978.0], [94.6, 1980.0], [94.7, 1997.0], [94.8, 2024.0], [94.9, 2041.0], [95.0, 2061.0], [95.1, 2066.0], [95.2, 2083.0], [95.3, 2097.0], [95.4, 2108.0], [95.5, 2120.0], [95.6, 2134.0], [95.7, 2155.0], [95.8, 2169.0], [95.9, 2173.0], [96.0, 2187.0], [96.1, 2197.0], [96.2, 2216.0], [96.3, 2235.0], [96.4, 2258.0], [96.5, 2277.0], [96.6, 2308.0], [96.7, 2323.0], [96.8, 2363.0], [96.9, 2396.0], [97.0, 2412.0], [97.1, 2434.0], [97.2, 2455.0], [97.3, 2487.0], [97.4, 2550.0], [97.5, 2580.0], [97.6, 2604.0], [97.7, 2647.0], [97.8, 2665.0], [97.9, 2700.0], [98.0, 2721.0], [98.1, 2796.0], [98.2, 2861.0], [98.3, 2908.0], [98.4, 2942.0], [98.5, 3002.0], [98.6, 3090.0], [98.7, 3144.0], [98.8, 3217.0], [98.9, 3240.0], [99.0, 3480.0], [99.1, 3601.0], [99.2, 3704.0], [99.3, 3798.0], [99.4, 4135.0], [99.5, 4274.0], [99.6, 4484.0], [99.7, 4718.0], [99.8, 4872.0], [99.9, 7425.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1571.0, "series": [{"data": [[0.0, 977.0], [600.0, 415.0], [700.0, 326.0], [800.0, 223.0], [900.0, 159.0], [1000.0, 190.0], [1100.0, 236.0], [1200.0, 200.0], [1300.0, 188.0], [1400.0, 158.0], [1500.0, 106.0], [1600.0, 104.0], [1700.0, 52.0], [1800.0, 62.0], [1900.0, 40.0], [2000.0, 29.0], [2100.0, 32.0], [2200.0, 31.0], [2300.0, 29.0], [2400.0, 18.0], [2500.0, 15.0], [2600.0, 12.0], [2800.0, 11.0], [2700.0, 11.0], [2900.0, 10.0], [3000.0, 8.0], [3100.0, 7.0], [3200.0, 11.0], [3300.0, 2.0], [3400.0, 6.0], [3500.0, 6.0], [3700.0, 1.0], [3600.0, 5.0], [3800.0, 2.0], [3900.0, 4.0], [4000.0, 1.0], [4300.0, 3.0], [4200.0, 7.0], [4100.0, 4.0], [4500.0, 3.0], [4400.0, 5.0], [4600.0, 2.0], [4700.0, 1.0], [4800.0, 3.0], [5000.0, 1.0], [4900.0, 2.0], [5800.0, 1.0], [6100.0, 1.0], [6700.0, 1.0], [14500.0, 1.0], [100.0, 1571.0], [200.0, 1345.0], [300.0, 1084.0], [400.0, 716.0], [500.0, 646.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 93.0], [700.0, 1.0], [200.0, 1.0], [800.0, 1.0], [100.0, 2.0], [400.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 94.0], [300.0, 4.0], [200.0, 2.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 906.0], [600.0, 160.0], [700.0, 144.0], [800.0, 94.0], [900.0, 81.0], [1000.0, 67.0], [1100.0, 74.0], [1200.0, 80.0], [1300.0, 56.0], [1400.0, 60.0], [1500.0, 50.0], [1600.0, 45.0], [1700.0, 40.0], [1800.0, 43.0], [1900.0, 29.0], [2000.0, 23.0], [2100.0, 31.0], [2300.0, 12.0], [2200.0, 19.0], [2400.0, 18.0], [2500.0, 8.0], [2600.0, 12.0], [2700.0, 9.0], [2800.0, 7.0], [2900.0, 7.0], [3000.0, 6.0], [3100.0, 4.0], [3200.0, 8.0], [3400.0, 3.0], [3500.0, 3.0], [3700.0, 5.0], [3600.0, 3.0], [3800.0, 2.0], [3900.0, 1.0], [4300.0, 3.0], [4200.0, 2.0], [4100.0, 3.0], [4400.0, 1.0], [4600.0, 2.0], [4500.0, 1.0], [4700.0, 4.0], [4800.0, 1.0], [5000.0, 1.0], [4900.0, 1.0], [6900.0, 1.0], [7400.0, 1.0], [7500.0, 1.0], [11900.0, 1.0], [13300.0, 1.0], [100.0, 492.0], [200.0, 434.0], [300.0, 327.0], [400.0, 272.0], [500.0, 220.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1059.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8331.0, "series": [{"data": [[0.0, 8331.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3773.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1059.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 13.59259259259259, "minX": 1.61727102E12, "maxY": 68.36735905044532, "series": [{"data": [[1.61727114E12, 68.36735905044532], [1.61727102E12, 13.59259259259259], [1.61727108E12, 57.43287800282594]], "isOverall": false, "label": "jp@gc - Stepping Thread Group (deprecated)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727114E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 2358.9375, "series": [{"data": [[4.0, 70.0], [5.0, 77.0], [6.0, 59.0], [7.0, 72.0], [8.0, 48.0], [9.0, 61.0], [10.0, 70.34848484848487], [11.0, 1064.0], [12.0, 191.0769230769231], [14.0, 1166.5], [15.0, 1153.3333333333333], [16.0, 1153.0], [17.0, 1146.0], [19.0, 1239.0000000000002], [20.0, 174.89328063241123], [21.0, 232.47619047619045], [22.0, 127.77777777777779], [23.0, 113.76], [24.0, 132.0], [25.0, 252.84759358288778], [26.0, 126.04761904761908], [27.0, 194.85714285714283], [28.0, 251.8], [29.0, 313.00000000000006], [30.0, 397.5882352941176], [31.0, 354.5], [32.0, 360.75], [33.0, 343.68000000000006], [34.0, 231.35294117647058], [35.0, 253.76923076923077], [36.0, 264.9130434782609], [37.0, 234.0], [38.0, 215.51999999999998], [39.0, 231.83333333333331], [40.0, 317.0120056497177], [41.0, 284.6666666666667], [42.0, 246.9642857142857], [43.0, 254.6428571428571], [44.0, 304.6666666666667], [45.0, 321.4230769230769], [46.0, 345.1666666666667], [47.0, 394.90000000000003], [48.0, 429.0999999999999], [49.0, 586.7777777777777], [50.0, 695.1666666666667], [51.0, 699.5], [52.0, 576.75], [53.0, 694.0], [54.0, 772.5], [55.0, 454.2978208232445], [56.0, 845.142857142857], [58.0, 961.16], [59.0, 900.5], [60.0, 1031.7901234567903], [61.0, 558.5882352941178], [62.0, 557.2857142857143], [63.0, 501.2380952380952], [64.0, 389.7777777777777], [65.0, 646.6315789473686], [66.0, 554.8125], [67.0, 377.2941176470588], [68.0, 929.3333333333334], [69.0, 368.63157894736844], [70.0, 728.8982035928146], [71.0, 1237.608695652174], [72.0, 1659.0], [73.0, 1171.125], [74.0, 912.8965517241379], [75.0, 1284.741935483871], [76.0, 514.5675675675675], [77.0, 592.6428571428571], [78.0, 498.8636363636363], [79.0, 520.3214285714286], [80.0, 690.764060356653], [81.0, 607.5], [82.0, 665.375], [83.0, 596.0833333333334], [84.0, 552.3636363636364], [85.0, 653.1214421252367], [86.0, 704.0819672131148], [87.0, 1035.6666666666665], [88.0, 538.1], [89.0, 1124.8333333333335], [90.0, 741.75], [91.0, 854.1999999999999], [92.0, 884.3571428571429], [93.0, 682.8333333333334], [94.0, 1044.6500000000003], [95.0, 1195.9473684210527], [96.0, 644.3846153846154], [97.0, 569.9285714285714], [98.0, 478.5454545454545], [99.0, 776.8421052631577], [100.0, 856.2312423124233], [1.0, 273.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[62.95299427564944, 569.788309114928]], "isOverall": false, "label": "VNE-GET-bongda-Aggregated", "isController": false}, {"data": [[6.0, 485.1666666666667], [8.0, 93.0], [9.0, 1.0], [10.0, 1.0], [11.0, 1.0], [12.0, 1.0], [13.0, 0.0], [14.0, 0.0], [15.0, 1.0], [16.0, 1.0], [17.0, 24.0], [18.0, 1.0], [19.0, 13.0], [20.0, 1.0], [21.0, 1.0], [22.0, 0.0], [23.0, 1.0], [24.0, 0.0], [25.0, 1.0], [26.0, 0.0], [27.0, 0.0], [28.0, 1.0], [29.0, 0.0], [30.0, 0.0], [31.0, 0.0], [32.0, 0.0], [33.0, 4.0], [34.0, 0.0], [35.0, 0.0], [36.0, 1.0], [37.0, 0.0], [38.0, 0.0], [39.0, 1.0], [40.0, 0.0], [41.0, 1.0], [42.0, 0.0], [43.0, 1.0], [44.0, 0.0], [45.0, 1.0], [46.0, 0.0], [47.0, 1.0], [48.0, 0.0], [49.0, 1.0], [50.0, 1.0], [51.0, 0.0], [52.0, 0.0], [53.0, 1.0], [54.0, 0.0], [55.0, 1.0], [56.0, 1.0], [57.0, 0.0], [58.0, 1.0], [59.0, 1.0], [60.0, 1.0], [61.0, 1.0], [62.0, 1.0], [63.0, 0.0], [64.0, 1.0], [65.0, 3.0], [66.0, 1.0], [67.0, 1.0], [68.0, 1.0], [69.0, 1.0], [70.0, 0.0], [71.0, 1.0], [72.0, 0.0], [73.0, 3.0], [74.0, 0.0], [75.0, 1.0], [76.0, 1.0], [77.0, 0.0], [78.0, 0.0], [79.0, 0.0], [80.0, 0.0], [81.0, 0.0], [82.0, 1.0], [83.0, 0.0], [84.0, 1.0], [85.0, 0.0], [86.0, 0.0], [87.0, 0.0], [88.0, 0.0], [89.0, 0.0], [90.0, 1.0], [91.0, 5.0], [92.0, 3.0], [93.0, 0.0], [94.0, 1.0], [95.0, 1.0], [96.0, 0.0], [97.0, 1.0], [98.0, 0.0], [99.0, 1.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[50.66, 31.949999999999992]], "isOverall": false, "label": "PROF - VNE - Test 01-Aggregated", "isController": false}, {"data": [[8.0, 249.75], [9.0, 1.0], [10.0, 2.0], [11.0, 0.0], [12.0, 1.0], [13.0, 1.0], [14.0, 2.0], [15.0, 1.0], [16.0, 1.0], [17.0, 2.0], [18.0, 1.0], [19.0, 2.0], [20.0, 1.0], [21.0, 1.0], [22.0, 1.0], [23.0, 4.0], [24.0, 1.0], [25.0, 2.0], [26.0, 2.0], [27.0, 1.0], [28.0, 0.0], [29.0, 1.0], [30.0, 0.0], [31.0, 1.0], [32.0, 0.0], [33.0, 3.0], [34.0, 1.0], [35.0, 1.0], [36.0, 1.0], [37.0, 0.0], [38.0, 2.0], [39.0, 3.0], [40.0, 1.0], [41.0, 0.0], [42.0, 1.0], [43.0, 1.0], [44.0, 3.0], [45.0, 1.0], [46.0, 1.0], [47.0, 1.0], [48.0, 1.0], [49.0, 1.0], [50.0, 1.0], [51.0, 1.0], [52.0, 1.0], [53.0, 0.0], [54.0, 1.0], [55.0, 1.0], [56.0, 1.0], [57.0, 1.0], [58.0, 0.0], [59.0, 1.0], [60.0, 1.0], [61.0, 5.0], [62.0, 4.0], [63.0, 1.0], [64.0, 1.0], [65.0, 1.0], [66.0, 0.0], [67.0, 0.0], [68.0, 0.0], [69.0, 0.0], [70.0, 1.0], [71.0, 0.0], [72.0, 12.0], [73.0, 1.0], [74.0, 1.0], [75.0, 1.0], [76.0, 1.0], [77.0, 1.0], [78.0, 1.0], [79.0, 1.0], [80.0, 0.0], [81.0, 1.0], [82.0, 1.0], [83.0, 1.0], [84.0, 3.0], [85.0, 1.0], [86.0, 0.0], [87.0, 1.0], [88.0, 1.0], [89.0, 1.0], [90.0, 0.0], [91.0, 6.0], [92.0, 1.0], [93.0, 1.0], [94.0, 1.0], [95.0, 3.0], [96.0, 1.0], [97.0, 0.0], [98.0, 1.0], [99.0, 6.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[50.78, 21.2]], "isOverall": false, "label": "PROF - VNE - Random main action-Aggregated", "isController": false}, {"data": [[2.0, 124.0], [3.0, 87.0], [10.0, 73.6872246696035], [12.0, 590.8571428571429], [17.0, 30.0], [18.0, 1118.0], [20.0, 239.95999999999987], [21.0, 122.81818181818183], [22.0, 246.57142857142858], [23.0, 125.99999999999997], [24.0, 132.2], [25.0, 234.11111111111117], [26.0, 127.0909090909091], [27.0, 224.66666666666666], [28.0, 166.5], [29.0, 376.3333333333333], [30.0, 262.8571428571429], [31.0, 224.0], [33.0, 296.0], [32.0, 386.0], [34.0, 319.9375], [35.0, 165.16666666666666], [36.0, 222.0], [37.0, 109.75], [38.0, 201.7], [39.0, 191.0909090909091], [40.0, 281.3491027732459], [41.0, 219.11111111111114], [42.0, 318.53846153846155], [43.0, 222.08333333333331], [44.0, 381.66666666666663], [45.0, 244.00000000000003], [46.0, 290.8], [47.0, 395.0], [52.0, 360.0], [54.0, 1444.0], [55.0, 391.89142857142855], [56.0, 2179.8888888888887], [57.0, 1816.5], [58.0, 1546.5454545454545], [59.0, 833.0], [60.0, 999.0114285714288], [61.0, 975.8571428571431], [62.0, 585.7777777777778], [63.0, 1378.5], [64.0, 229.0], [65.0, 436.5], [66.0, 830.6666666666666], [67.0, 568.6363636363636], [68.0, 677.125], [69.0, 194.5], [70.0, 656.7692307692306], [71.0, 711.5], [74.0, 2358.9375], [75.0, 1399.125], [73.0, 1207.3333333333335], [72.0, 385.85714285714283], [76.0, 504.2105263157895], [77.0, 663.0], [78.0, 855.6999999999999], [79.0, 451.3333333333333], [80.0, 980.1687898089174], [81.0, 768.0], [82.0, 839.0], [83.0, 1245.6], [84.0, 548.0], [85.0, 496.3], [86.0, 655.5652173913044], [87.0, 528.75], [88.0, 1202.0], [89.0, 771.0], [90.0, 2137.75], [92.0, 1569.4], [93.0, 1001.6666666666666], [94.0, 1912.2500000000002], [95.0, 1272.4736842105265], [96.0, 750.5], [97.0, 980.9999999999999], [98.0, 690.3333333333334], [99.0, 1403.5], [100.0, 859.6765799256508]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}, {"data": [[63.24078370714108, 599.9963908223766]], "isOverall": false, "label": "VNE-GET-quansu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 149.8, "minX": 1.61727102E12, "maxY": 8519549.933333334, "series": [{"data": [[1.61727114E12, 8519549.933333334], [1.61727102E12, 8123.866666666667], [1.61727108E12, 7783192.583333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61727114E12, 58795.3], [1.61727102E12, 149.8], [1.61727108E12, 54351.55]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727114E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.6624999999999999, "minX": 1.61727102E12, "maxY": 1190.571428571429, "series": [{"data": [[1.61727114E12, 630.7131321716978], [1.61727102E12, 1190.571428571429], [1.61727108E12, 502.09738771769025]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727102E12, 157.10000000000002], [1.61727108E12, 0.6624999999999999]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727102E12, 100.64999999999999], [1.61727108E12, 1.3375]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727114E12, 521.2802359882002], [1.61727108E12, 686.776151761518]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727114E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61727102E12, "maxY": 1114.4285714285713, "series": [{"data": [[1.61727114E12, 573.8011049723767], [1.61727102E12, 1114.4285714285713], [1.61727108E12, 376.11686526122816]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727102E12, 0.0], [1.61727108E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727102E12, 0.0], [1.61727108E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727114E12, 391.0122910521139], [1.61727108E12, 258.87804878048775]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727114E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61727102E12, "maxY": 1042.2142857142858, "series": [{"data": [[1.61727114E12, 475.5146621334468], [1.61727102E12, 1042.2142857142858], [1.61727108E12, 294.3652612282305]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727102E12, 0.0], [1.61727108E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727102E12, 0.0], [1.61727108E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727114E12, 320.4975417895765], [1.61727108E12, 200.2704607046071]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727114E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61727102E12, "maxY": 14527.0, "series": [{"data": [[1.61727114E12, 7570.0], [1.61727102E12, 1534.0], [1.61727108E12, 14527.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61727114E12, 1404.0], [1.61727102E12, 1500.5], [1.61727108E12, 1357.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61727114E12, 3177.4900000000016], [1.61727102E12, 1534.0], [1.61727108E12, 3079.5000000000027]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61727114E12, 1729.9499999999998], [1.61727102E12, 1516.25], [1.61727108E12, 1879.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61727114E12, 26.0], [1.61727102E12, 0.0], [1.61727108E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61727114E12, 408.0], [1.61727102E12, 100.5], [1.61727108E12, 297.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727114E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 10.5, "minX": 6.0, "maxY": 1637.0, "series": [{"data": [[6.0, 488.0], [16.0, 1395.0], [19.0, 976.0], [20.0, 10.5], [21.0, 67.0], [23.0, 1335.0], [26.0, 1627.5], [27.0, 1160.0], [28.0, 1492.0], [37.0, 1447.0], [40.0, 418.0], [41.0, 1200.5], [51.0, 873.5], [53.0, 718.0], [57.0, 1035.0], [56.0, 865.5], [59.0, 222.0], [63.0, 1051.5], [67.0, 1637.0], [68.0, 294.0], [75.0, 1209.0], [73.0, 1362.0], [72.0, 98.0], [78.0, 1060.0], [77.0, 317.0], [82.0, 731.5], [80.0, 790.5], [85.0, 182.0], [86.0, 744.0], [91.0, 192.0], [88.0, 211.5], [94.0, 222.5], [92.0, 508.0], [93.0, 1137.0], [99.0, 307.0], [97.0, 643.0], [100.0, 354.0], [102.0, 407.5], [103.0, 691.0], [107.0, 686.0], [105.0, 1345.0], [110.0, 372.0], [111.0, 68.0], [113.0, 203.0], [115.0, 395.0], [117.0, 206.0], [116.0, 364.0], [119.0, 444.0], [123.0, 484.0], [120.0, 459.0], [122.0, 451.0], [125.0, 461.0], [126.0, 596.5], [131.0, 149.0], [135.0, 265.0], [134.0, 261.0], [133.0, 260.5], [129.0, 521.0], [143.0, 138.0], [139.0, 173.0], [137.0, 81.0], [141.0, 591.0], [138.0, 522.0], [149.0, 277.0], [150.0, 242.5], [148.0, 327.5], [146.0, 389.0], [147.0, 106.5], [145.0, 282.0], [153.0, 253.0], [154.0, 226.0], [158.0, 285.0], [162.0, 738.5], [160.0, 86.0], [163.0, 280.0], [169.0, 205.0], [173.0, 475.0], [172.0, 509.5], [168.0, 607.5], [171.0, 530.0], [178.0, 437.0], [184.0, 116.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 184.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 6.0, "maxY": 1382.5, "series": [{"data": [[6.0, 0.0], [16.0, 1382.5], [19.0, 967.0], [20.0, 0.0], [21.0, 54.0], [23.0, 603.0], [26.0, 1268.5], [27.0, 728.0], [28.0, 849.0], [37.0, 1073.0], [40.0, 244.5], [41.0, 746.5], [51.0, 557.5], [53.0, 417.0], [57.0, 505.0], [56.0, 526.5], [59.0, 190.0], [63.0, 655.0], [67.0, 980.0], [68.0, 273.5], [75.0, 556.0], [73.0, 1303.0], [72.0, 89.5], [78.0, 767.0], [77.0, 204.0], [82.0, 392.0], [80.0, 447.0], [85.0, 112.0], [86.0, 702.5], [91.0, 130.0], [88.0, 143.5], [94.0, 159.0], [92.0, 320.0], [93.0, 1120.0], [99.0, 211.0], [97.0, 313.0], [100.0, 202.0], [102.0, 180.0], [103.0, 663.0], [107.0, 265.0], [105.0, 1341.0], [110.0, 326.5], [111.0, 54.0], [113.0, 111.0], [115.0, 146.0], [117.0, 167.0], [116.0, 242.0], [119.0, 276.0], [123.0, 276.0], [120.0, 395.0], [122.0, 150.0], [125.0, 263.0], [126.0, 580.5], [131.0, 110.0], [135.0, 189.0], [134.0, 202.5], [133.0, 192.5], [129.0, 496.5], [143.0, 113.0], [139.0, 143.5], [137.0, 62.0], [141.0, 488.5], [138.0, 495.5], [149.0, 264.0], [150.0, 216.5], [148.0, 256.0], [146.0, 126.5], [147.0, 68.5], [145.0, 247.0], [153.0, 230.0], [154.0, 205.0], [158.0, 251.5], [162.0, 682.0], [160.0, 66.0], [163.0, 250.0], [169.0, 194.0], [173.0, 381.0], [172.0, 464.5], [168.0, 594.0], [171.0, 514.0], [178.0, 388.5], [184.0, 88.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 184.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.2333333333333334, "minX": 1.61727102E12, "maxY": 110.68333333333334, "series": [{"data": [[1.61727114E12, 110.68333333333334], [1.61727102E12, 1.2333333333333334], [1.61727108E12, 107.46666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727114E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.61727102E12, "maxY": 112.33333333333333, "series": [{"data": [[1.61727114E12, 112.33333333333333], [1.61727102E12, 0.9], [1.61727108E12, 106.15]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727114E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.61727102E12, "maxY": 78.43333333333334, "series": [{"data": [[1.61727102E12, 0.3333333333333333], [1.61727108E12, 1.3333333333333333]], "isOverall": false, "label": "PROF - VNE - Random main action-success", "isController": false}, {"data": [[1.61727114E12, 33.9], [1.61727108E12, 30.75]], "isOverall": false, "label": "VNE-GET-quansu-success", "isController": false}, {"data": [[1.61727102E12, 0.3333333333333333], [1.61727108E12, 1.3333333333333333]], "isOverall": false, "label": "PROF - VNE - Test 01-success", "isController": false}, {"data": [[1.61727114E12, 78.43333333333334], [1.61727102E12, 0.23333333333333334], [1.61727108E12, 72.73333333333333]], "isOverall": false, "label": "VNE-GET-bongda-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727114E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.61727102E12, "maxY": 112.33333333333333, "series": [{"data": [[1.61727114E12, 112.33333333333333], [1.61727102E12, 0.9], [1.61727108E12, 106.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727114E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

