/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 22418.0, "series": [{"data": [[0.0, 41.0], [0.1, 45.0], [0.2, 46.0], [0.3, 47.0], [0.4, 48.0], [0.5, 49.0], [0.6, 50.0], [0.7, 50.0], [0.8, 51.0], [0.9, 51.0], [1.0, 52.0], [1.1, 52.0], [1.2, 53.0], [1.3, 53.0], [1.4, 54.0], [1.5, 54.0], [1.6, 55.0], [1.7, 55.0], [1.8, 56.0], [1.9, 56.0], [2.0, 57.0], [2.1, 57.0], [2.2, 58.0], [2.3, 58.0], [2.4, 59.0], [2.5, 59.0], [2.6, 59.0], [2.7, 60.0], [2.8, 60.0], [2.9, 60.0], [3.0, 61.0], [3.1, 61.0], [3.2, 62.0], [3.3, 62.0], [3.4, 62.0], [3.5, 63.0], [3.6, 63.0], [3.7, 64.0], [3.8, 64.0], [3.9, 65.0], [4.0, 65.0], [4.1, 66.0], [4.2, 66.0], [4.3, 66.0], [4.4, 67.0], [4.5, 67.0], [4.6, 68.0], [4.7, 68.0], [4.8, 69.0], [4.9, 69.0], [5.0, 70.0], [5.1, 70.0], [5.2, 71.0], [5.3, 71.0], [5.4, 72.0], [5.5, 72.0], [5.6, 73.0], [5.7, 73.0], [5.8, 74.0], [5.9, 74.0], [6.0, 75.0], [6.1, 76.0], [6.2, 76.0], [6.3, 77.0], [6.4, 77.0], [6.5, 78.0], [6.6, 78.0], [6.7, 79.0], [6.8, 79.0], [6.9, 80.0], [7.0, 80.0], [7.1, 81.0], [7.2, 81.0], [7.3, 82.0], [7.4, 82.0], [7.5, 82.0], [7.6, 83.0], [7.7, 83.0], [7.8, 84.0], [7.9, 84.0], [8.0, 85.0], [8.1, 85.0], [8.2, 85.0], [8.3, 86.0], [8.4, 86.0], [8.5, 87.0], [8.6, 87.0], [8.7, 87.0], [8.8, 87.0], [8.9, 88.0], [9.0, 88.0], [9.1, 88.0], [9.2, 89.0], [9.3, 90.0], [9.4, 90.0], [9.5, 90.0], [9.6, 91.0], [9.7, 92.0], [9.8, 92.0], [9.9, 93.0], [10.0, 93.0], [10.1, 94.0], [10.2, 94.0], [10.3, 95.0], [10.4, 95.0], [10.5, 96.0], [10.6, 96.0], [10.7, 97.0], [10.8, 98.0], [10.9, 98.0], [11.0, 99.0], [11.1, 99.0], [11.2, 100.0], [11.3, 100.0], [11.4, 101.0], [11.5, 101.0], [11.6, 102.0], [11.7, 103.0], [11.8, 103.0], [11.9, 104.0], [12.0, 105.0], [12.1, 105.0], [12.2, 106.0], [12.3, 107.0], [12.4, 108.0], [12.5, 108.0], [12.6, 108.0], [12.7, 109.0], [12.8, 110.0], [12.9, 111.0], [13.0, 112.0], [13.1, 112.0], [13.2, 112.0], [13.3, 113.0], [13.4, 114.0], [13.5, 114.0], [13.6, 115.0], [13.7, 116.0], [13.8, 116.0], [13.9, 117.0], [14.0, 118.0], [14.1, 119.0], [14.2, 120.0], [14.3, 121.0], [14.4, 121.0], [14.5, 122.0], [14.6, 123.0], [14.7, 124.0], [14.8, 125.0], [14.9, 126.0], [15.0, 127.0], [15.1, 128.0], [15.2, 129.0], [15.3, 130.0], [15.4, 130.0], [15.5, 131.0], [15.6, 132.0], [15.7, 133.0], [15.8, 134.0], [15.9, 135.0], [16.0, 136.0], [16.1, 136.0], [16.2, 137.0], [16.3, 138.0], [16.4, 138.0], [16.5, 139.0], [16.6, 140.0], [16.7, 142.0], [16.8, 142.0], [16.9, 143.0], [17.0, 144.0], [17.1, 145.0], [17.2, 147.0], [17.3, 147.0], [17.4, 148.0], [17.5, 149.0], [17.6, 149.0], [17.7, 150.0], [17.8, 151.0], [17.9, 152.0], [18.0, 152.0], [18.1, 153.0], [18.2, 154.0], [18.3, 155.0], [18.4, 156.0], [18.5, 156.0], [18.6, 157.0], [18.7, 158.0], [18.8, 158.0], [18.9, 160.0], [19.0, 160.0], [19.1, 162.0], [19.2, 162.0], [19.3, 163.0], [19.4, 163.0], [19.5, 164.0], [19.6, 165.0], [19.7, 166.0], [19.8, 167.0], [19.9, 167.0], [20.0, 168.0], [20.1, 169.0], [20.2, 169.0], [20.3, 170.0], [20.4, 171.0], [20.5, 172.0], [20.6, 173.0], [20.7, 174.0], [20.8, 174.0], [20.9, 175.0], [21.0, 176.0], [21.1, 177.0], [21.2, 178.0], [21.3, 178.0], [21.4, 179.0], [21.5, 180.0], [21.6, 181.0], [21.7, 181.0], [21.8, 182.0], [21.9, 182.0], [22.0, 183.0], [22.1, 184.0], [22.2, 185.0], [22.3, 185.0], [22.4, 186.0], [22.5, 187.0], [22.6, 187.0], [22.7, 188.0], [22.8, 189.0], [22.9, 190.0], [23.0, 190.0], [23.1, 191.0], [23.2, 191.0], [23.3, 192.0], [23.4, 193.0], [23.5, 194.0], [23.6, 195.0], [23.7, 195.0], [23.8, 196.0], [23.9, 196.0], [24.0, 197.0], [24.1, 198.0], [24.2, 198.0], [24.3, 199.0], [24.4, 200.0], [24.5, 200.0], [24.6, 201.0], [24.7, 202.0], [24.8, 202.0], [24.9, 203.0], [25.0, 204.0], [25.1, 205.0], [25.2, 205.0], [25.3, 206.0], [25.4, 207.0], [25.5, 207.0], [25.6, 208.0], [25.7, 209.0], [25.8, 209.0], [25.9, 210.0], [26.0, 211.0], [26.1, 212.0], [26.2, 212.0], [26.3, 213.0], [26.4, 214.0], [26.5, 215.0], [26.6, 216.0], [26.7, 216.0], [26.8, 216.0], [26.9, 217.0], [27.0, 218.0], [27.1, 218.0], [27.2, 219.0], [27.3, 220.0], [27.4, 221.0], [27.5, 222.0], [27.6, 223.0], [27.7, 224.0], [27.8, 225.0], [27.9, 226.0], [28.0, 226.0], [28.1, 227.0], [28.2, 228.0], [28.3, 229.0], [28.4, 230.0], [28.5, 231.0], [28.6, 231.0], [28.7, 232.0], [28.8, 233.0], [28.9, 234.0], [29.0, 235.0], [29.1, 235.0], [29.2, 236.0], [29.3, 237.0], [29.4, 238.0], [29.5, 238.0], [29.6, 240.0], [29.7, 240.0], [29.8, 241.0], [29.9, 242.0], [30.0, 243.0], [30.1, 244.0], [30.2, 245.0], [30.3, 245.0], [30.4, 246.0], [30.5, 246.0], [30.6, 247.0], [30.7, 248.0], [30.8, 249.0], [30.9, 250.0], [31.0, 250.0], [31.1, 251.0], [31.2, 252.0], [31.3, 253.0], [31.4, 253.0], [31.5, 254.0], [31.6, 255.0], [31.7, 256.0], [31.8, 257.0], [31.9, 258.0], [32.0, 259.0], [32.1, 260.0], [32.2, 261.0], [32.3, 262.0], [32.4, 262.0], [32.5, 263.0], [32.6, 264.0], [32.7, 265.0], [32.8, 265.0], [32.9, 266.0], [33.0, 267.0], [33.1, 268.0], [33.2, 268.0], [33.3, 269.0], [33.4, 270.0], [33.5, 270.0], [33.6, 271.0], [33.7, 272.0], [33.8, 273.0], [33.9, 273.0], [34.0, 274.0], [34.1, 275.0], [34.2, 275.0], [34.3, 277.0], [34.4, 277.0], [34.5, 278.0], [34.6, 278.0], [34.7, 279.0], [34.8, 280.0], [34.9, 281.0], [35.0, 282.0], [35.1, 282.0], [35.2, 283.0], [35.3, 284.0], [35.4, 285.0], [35.5, 285.0], [35.6, 286.0], [35.7, 286.0], [35.8, 287.0], [35.9, 287.0], [36.0, 288.0], [36.1, 289.0], [36.2, 290.0], [36.3, 290.0], [36.4, 291.0], [36.5, 292.0], [36.6, 292.0], [36.7, 293.0], [36.8, 294.0], [36.9, 294.0], [37.0, 295.0], [37.1, 296.0], [37.2, 296.0], [37.3, 297.0], [37.4, 298.0], [37.5, 299.0], [37.6, 300.0], [37.7, 300.0], [37.8, 301.0], [37.9, 302.0], [38.0, 303.0], [38.1, 303.0], [38.2, 304.0], [38.3, 304.0], [38.4, 305.0], [38.5, 305.0], [38.6, 306.0], [38.7, 307.0], [38.8, 308.0], [38.9, 308.0], [39.0, 309.0], [39.1, 309.0], [39.2, 310.0], [39.3, 311.0], [39.4, 312.0], [39.5, 312.0], [39.6, 313.0], [39.7, 314.0], [39.8, 315.0], [39.9, 315.0], [40.0, 316.0], [40.1, 316.0], [40.2, 317.0], [40.3, 318.0], [40.4, 319.0], [40.5, 319.0], [40.6, 320.0], [40.7, 321.0], [40.8, 321.0], [40.9, 322.0], [41.0, 323.0], [41.1, 323.0], [41.2, 324.0], [41.3, 325.0], [41.4, 325.0], [41.5, 326.0], [41.6, 327.0], [41.7, 328.0], [41.8, 328.0], [41.9, 329.0], [42.0, 330.0], [42.1, 330.0], [42.2, 331.0], [42.3, 332.0], [42.4, 333.0], [42.5, 333.0], [42.6, 334.0], [42.7, 335.0], [42.8, 335.0], [42.9, 336.0], [43.0, 337.0], [43.1, 337.0], [43.2, 338.0], [43.3, 339.0], [43.4, 339.0], [43.5, 340.0], [43.6, 341.0], [43.7, 341.0], [43.8, 342.0], [43.9, 343.0], [44.0, 344.0], [44.1, 345.0], [44.2, 346.0], [44.3, 347.0], [44.4, 347.0], [44.5, 348.0], [44.6, 349.0], [44.7, 350.0], [44.8, 351.0], [44.9, 352.0], [45.0, 353.0], [45.1, 354.0], [45.2, 355.0], [45.3, 355.0], [45.4, 356.0], [45.5, 357.0], [45.6, 357.0], [45.7, 359.0], [45.8, 359.0], [45.9, 360.0], [46.0, 361.0], [46.1, 361.0], [46.2, 362.0], [46.3, 363.0], [46.4, 363.0], [46.5, 364.0], [46.6, 364.0], [46.7, 365.0], [46.8, 366.0], [46.9, 367.0], [47.0, 368.0], [47.1, 368.0], [47.2, 369.0], [47.3, 369.0], [47.4, 370.0], [47.5, 371.0], [47.6, 371.0], [47.7, 372.0], [47.8, 373.0], [47.9, 373.0], [48.0, 374.0], [48.1, 375.0], [48.2, 376.0], [48.3, 377.0], [48.4, 377.0], [48.5, 378.0], [48.6, 379.0], [48.7, 380.0], [48.8, 381.0], [48.9, 382.0], [49.0, 383.0], [49.1, 384.0], [49.2, 385.0], [49.3, 385.0], [49.4, 386.0], [49.5, 387.0], [49.6, 388.0], [49.7, 389.0], [49.8, 389.0], [49.9, 390.0], [50.0, 391.0], [50.1, 392.0], [50.2, 392.0], [50.3, 393.0], [50.4, 394.0], [50.5, 395.0], [50.6, 396.0], [50.7, 396.0], [50.8, 397.0], [50.9, 398.0], [51.0, 399.0], [51.1, 400.0], [51.2, 400.0], [51.3, 401.0], [51.4, 402.0], [51.5, 402.0], [51.6, 403.0], [51.7, 404.0], [51.8, 405.0], [51.9, 406.0], [52.0, 406.0], [52.1, 407.0], [52.2, 408.0], [52.3, 409.0], [52.4, 410.0], [52.5, 411.0], [52.6, 412.0], [52.7, 412.0], [52.8, 413.0], [52.9, 413.0], [53.0, 414.0], [53.1, 414.0], [53.2, 415.0], [53.3, 416.0], [53.4, 417.0], [53.5, 418.0], [53.6, 418.0], [53.7, 419.0], [53.8, 419.0], [53.9, 420.0], [54.0, 421.0], [54.1, 422.0], [54.2, 423.0], [54.3, 424.0], [54.4, 424.0], [54.5, 425.0], [54.6, 425.0], [54.7, 426.0], [54.8, 427.0], [54.9, 428.0], [55.0, 428.0], [55.1, 429.0], [55.2, 430.0], [55.3, 431.0], [55.4, 432.0], [55.5, 432.0], [55.6, 433.0], [55.7, 434.0], [55.8, 435.0], [55.9, 435.0], [56.0, 436.0], [56.1, 437.0], [56.2, 438.0], [56.3, 438.0], [56.4, 439.0], [56.5, 439.0], [56.6, 440.0], [56.7, 441.0], [56.8, 442.0], [56.9, 442.0], [57.0, 443.0], [57.1, 444.0], [57.2, 445.0], [57.3, 445.0], [57.4, 446.0], [57.5, 447.0], [57.6, 447.0], [57.7, 448.0], [57.8, 448.0], [57.9, 449.0], [58.0, 450.0], [58.1, 450.0], [58.2, 451.0], [58.3, 452.0], [58.4, 452.0], [58.5, 453.0], [58.6, 454.0], [58.7, 455.0], [58.8, 456.0], [58.9, 456.0], [59.0, 458.0], [59.1, 459.0], [59.2, 460.0], [59.3, 461.0], [59.4, 462.0], [59.5, 462.0], [59.6, 463.0], [59.7, 464.0], [59.8, 466.0], [59.9, 466.0], [60.0, 467.0], [60.1, 468.0], [60.2, 469.0], [60.3, 470.0], [60.4, 471.0], [60.5, 472.0], [60.6, 473.0], [60.7, 474.0], [60.8, 476.0], [60.9, 477.0], [61.0, 477.0], [61.1, 478.0], [61.2, 479.0], [61.3, 480.0], [61.4, 481.0], [61.5, 482.0], [61.6, 483.0], [61.7, 483.0], [61.8, 485.0], [61.9, 485.0], [62.0, 486.0], [62.1, 487.0], [62.2, 488.0], [62.3, 489.0], [62.4, 489.0], [62.5, 490.0], [62.6, 492.0], [62.7, 493.0], [62.8, 493.0], [62.9, 494.0], [63.0, 495.0], [63.1, 496.0], [63.2, 497.0], [63.3, 498.0], [63.4, 499.0], [63.5, 500.0], [63.6, 501.0], [63.7, 502.0], [63.8, 503.0], [63.9, 504.0], [64.0, 505.0], [64.1, 506.0], [64.2, 507.0], [64.3, 508.0], [64.4, 509.0], [64.5, 510.0], [64.6, 511.0], [64.7, 512.0], [64.8, 513.0], [64.9, 514.0], [65.0, 515.0], [65.1, 516.0], [65.2, 517.0], [65.3, 518.0], [65.4, 519.0], [65.5, 520.0], [65.6, 521.0], [65.7, 522.0], [65.8, 523.0], [65.9, 525.0], [66.0, 526.0], [66.1, 527.0], [66.2, 528.0], [66.3, 529.0], [66.4, 530.0], [66.5, 531.0], [66.6, 532.0], [66.7, 533.0], [66.8, 534.0], [66.9, 535.0], [67.0, 536.0], [67.1, 537.0], [67.2, 538.0], [67.3, 539.0], [67.4, 540.0], [67.5, 540.0], [67.6, 541.0], [67.7, 542.0], [67.8, 543.0], [67.9, 544.0], [68.0, 546.0], [68.1, 546.0], [68.2, 547.0], [68.3, 549.0], [68.4, 549.0], [68.5, 550.0], [68.6, 551.0], [68.7, 553.0], [68.8, 553.0], [68.9, 554.0], [69.0, 555.0], [69.1, 556.0], [69.2, 558.0], [69.3, 559.0], [69.4, 560.0], [69.5, 561.0], [69.6, 562.0], [69.7, 563.0], [69.8, 564.0], [69.9, 566.0], [70.0, 566.0], [70.1, 568.0], [70.2, 569.0], [70.3, 571.0], [70.4, 573.0], [70.5, 574.0], [70.6, 576.0], [70.7, 577.0], [70.8, 578.0], [70.9, 580.0], [71.0, 581.0], [71.1, 582.0], [71.2, 584.0], [71.3, 584.0], [71.4, 586.0], [71.5, 588.0], [71.6, 589.0], [71.7, 590.0], [71.8, 592.0], [71.9, 594.0], [72.0, 596.0], [72.1, 597.0], [72.2, 599.0], [72.3, 600.0], [72.4, 601.0], [72.5, 603.0], [72.6, 604.0], [72.7, 606.0], [72.8, 607.0], [72.9, 608.0], [73.0, 609.0], [73.1, 611.0], [73.2, 612.0], [73.3, 613.0], [73.4, 616.0], [73.5, 618.0], [73.6, 620.0], [73.7, 621.0], [73.8, 622.0], [73.9, 624.0], [74.0, 625.0], [74.1, 626.0], [74.2, 628.0], [74.3, 629.0], [74.4, 631.0], [74.5, 633.0], [74.6, 635.0], [74.7, 636.0], [74.8, 637.0], [74.9, 639.0], [75.0, 640.0], [75.1, 642.0], [75.2, 643.0], [75.3, 644.0], [75.4, 646.0], [75.5, 647.0], [75.6, 649.0], [75.7, 650.0], [75.8, 651.0], [75.9, 653.0], [76.0, 654.0], [76.1, 656.0], [76.2, 658.0], [76.3, 660.0], [76.4, 661.0], [76.5, 662.0], [76.6, 665.0], [76.7, 667.0], [76.8, 668.0], [76.9, 671.0], [77.0, 673.0], [77.1, 675.0], [77.2, 677.0], [77.3, 678.0], [77.4, 679.0], [77.5, 682.0], [77.6, 683.0], [77.7, 685.0], [77.8, 687.0], [77.9, 689.0], [78.0, 691.0], [78.1, 694.0], [78.2, 697.0], [78.3, 700.0], [78.4, 702.0], [78.5, 704.0], [78.6, 706.0], [78.7, 708.0], [78.8, 711.0], [78.9, 715.0], [79.0, 716.0], [79.1, 718.0], [79.2, 721.0], [79.3, 723.0], [79.4, 725.0], [79.5, 728.0], [79.6, 732.0], [79.7, 735.0], [79.8, 738.0], [79.9, 741.0], [80.0, 744.0], [80.1, 747.0], [80.2, 751.0], [80.3, 753.0], [80.4, 755.0], [80.5, 757.0], [80.6, 761.0], [80.7, 767.0], [80.8, 769.0], [80.9, 771.0], [81.0, 779.0], [81.1, 785.0], [81.2, 790.0], [81.3, 794.0], [81.4, 799.0], [81.5, 804.0], [81.6, 809.0], [81.7, 816.0], [81.8, 822.0], [81.9, 826.0], [82.0, 833.0], [82.1, 836.0], [82.2, 841.0], [82.3, 845.0], [82.4, 849.0], [82.5, 856.0], [82.6, 861.0], [82.7, 867.0], [82.8, 873.0], [82.9, 884.0], [83.0, 890.0], [83.1, 898.0], [83.2, 906.0], [83.3, 910.0], [83.4, 919.0], [83.5, 929.0], [83.6, 936.0], [83.7, 945.0], [83.8, 953.0], [83.9, 963.0], [84.0, 969.0], [84.1, 984.0], [84.2, 993.0], [84.3, 999.0], [84.4, 1004.0], [84.5, 1010.0], [84.6, 1017.0], [84.7, 1022.0], [84.8, 1034.0], [84.9, 1040.0], [85.0, 1047.0], [85.1, 1054.0], [85.2, 1060.0], [85.3, 1064.0], [85.4, 1067.0], [85.5, 1071.0], [85.6, 1074.0], [85.7, 1080.0], [85.8, 1084.0], [85.9, 1090.0], [86.0, 1094.0], [86.1, 1100.0], [86.2, 1108.0], [86.3, 1114.0], [86.4, 1119.0], [86.5, 1122.0], [86.6, 1127.0], [86.7, 1130.0], [86.8, 1136.0], [86.9, 1143.0], [87.0, 1148.0], [87.1, 1152.0], [87.2, 1156.0], [87.3, 1158.0], [87.4, 1163.0], [87.5, 1167.0], [87.6, 1170.0], [87.7, 1173.0], [87.8, 1177.0], [87.9, 1181.0], [88.0, 1185.0], [88.1, 1191.0], [88.2, 1194.0], [88.3, 1197.0], [88.4, 1202.0], [88.5, 1206.0], [88.6, 1209.0], [88.7, 1213.0], [88.8, 1214.0], [88.9, 1220.0], [89.0, 1224.0], [89.1, 1226.0], [89.2, 1232.0], [89.3, 1238.0], [89.4, 1241.0], [89.5, 1244.0], [89.6, 1249.0], [89.7, 1253.0], [89.8, 1257.0], [89.9, 1260.0], [90.0, 1264.0], [90.1, 1267.0], [90.2, 1270.0], [90.3, 1274.0], [90.4, 1277.0], [90.5, 1283.0], [90.6, 1288.0], [90.7, 1296.0], [90.8, 1300.0], [90.9, 1305.0], [91.0, 1310.0], [91.1, 1318.0], [91.2, 1324.0], [91.3, 1330.0], [91.4, 1335.0], [91.5, 1340.0], [91.6, 1344.0], [91.7, 1349.0], [91.8, 1358.0], [91.9, 1365.0], [92.0, 1371.0], [92.1, 1377.0], [92.2, 1383.0], [92.3, 1388.0], [92.4, 1395.0], [92.5, 1401.0], [92.6, 1407.0], [92.7, 1412.0], [92.8, 1416.0], [92.9, 1423.0], [93.0, 1429.0], [93.1, 1435.0], [93.2, 1443.0], [93.3, 1447.0], [93.4, 1454.0], [93.5, 1459.0], [93.6, 1468.0], [93.7, 1475.0], [93.8, 1481.0], [93.9, 1489.0], [94.0, 1497.0], [94.1, 1503.0], [94.2, 1510.0], [94.3, 1518.0], [94.4, 1527.0], [94.5, 1536.0], [94.6, 1544.0], [94.7, 1553.0], [94.8, 1562.0], [94.9, 1569.0], [95.0, 1580.0], [95.1, 1591.0], [95.2, 1600.0], [95.3, 1605.0], [95.4, 1611.0], [95.5, 1617.0], [95.6, 1628.0], [95.7, 1635.0], [95.8, 1642.0], [95.9, 1656.0], [96.0, 1666.0], [96.1, 1675.0], [96.2, 1688.0], [96.3, 1704.0], [96.4, 1710.0], [96.5, 1720.0], [96.6, 1728.0], [96.7, 1739.0], [96.8, 1745.0], [96.9, 1759.0], [97.0, 1788.0], [97.1, 1807.0], [97.2, 1825.0], [97.3, 1853.0], [97.4, 1882.0], [97.5, 1928.0], [97.6, 1979.0], [97.7, 2008.0], [97.8, 2036.0], [97.9, 2072.0], [98.0, 2107.0], [98.1, 2122.0], [98.2, 2136.0], [98.3, 2164.0], [98.4, 2185.0], [98.5, 2222.0], [98.6, 2262.0], [98.7, 2297.0], [98.8, 2318.0], [98.9, 2363.0], [99.0, 2401.0], [99.1, 2450.0], [99.2, 2519.0], [99.3, 2540.0], [99.4, 2594.0], [99.5, 2650.0], [99.6, 2742.0], [99.7, 2884.0], [99.8, 3136.0], [99.9, 3589.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 2.0], [89.1, 2.0], [89.2, 2.0], [89.3, 2.0], [89.4, 2.0], [89.5, 2.0], [89.6, 2.0], [89.7, 2.0], [89.8, 2.0], [89.9, 2.0], [90.0, 3.0], [90.1, 3.0], [90.2, 3.0], [90.3, 3.0], [90.4, 3.0], [90.5, 3.0], [90.6, 3.0], [90.7, 3.0], [90.8, 3.0], [90.9, 3.0], [91.0, 6.0], [91.1, 6.0], [91.2, 6.0], [91.3, 6.0], [91.4, 6.0], [91.5, 6.0], [91.6, 6.0], [91.7, 6.0], [91.8, 6.0], [91.9, 6.0], [92.0, 20.0], [92.1, 20.0], [92.2, 20.0], [92.3, 20.0], [92.4, 20.0], [92.5, 20.0], [92.6, 20.0], [92.7, 20.0], [92.8, 20.0], [92.9, 20.0], [93.0, 92.0], [93.1, 92.0], [93.2, 92.0], [93.3, 92.0], [93.4, 92.0], [93.5, 92.0], [93.6, 92.0], [93.7, 92.0], [93.8, 92.0], [93.9, 92.0], [94.0, 139.0], [94.1, 139.0], [94.2, 139.0], [94.3, 139.0], [94.4, 139.0], [94.5, 139.0], [94.6, 139.0], [94.7, 139.0], [94.8, 139.0], [94.9, 139.0], [95.0, 242.0], [95.1, 242.0], [95.2, 242.0], [95.3, 242.0], [95.4, 242.0], [95.5, 242.0], [95.6, 242.0], [95.7, 242.0], [95.8, 242.0], [95.9, 242.0], [96.0, 390.0], [96.1, 390.0], [96.2, 390.0], [96.3, 390.0], [96.4, 390.0], [96.5, 390.0], [96.6, 390.0], [96.7, 390.0], [96.8, 390.0], [96.9, 390.0], [97.0, 541.0], [97.1, 541.0], [97.2, 541.0], [97.3, 541.0], [97.4, 541.0], [97.5, 541.0], [97.6, 541.0], [97.7, 541.0], [97.8, 541.0], [97.9, 541.0], [98.0, 691.0], [98.1, 691.0], [98.2, 691.0], [98.3, 691.0], [98.4, 691.0], [98.5, 691.0], [98.6, 691.0], [98.7, 691.0], [98.8, 691.0], [98.9, 691.0], [99.0, 833.0], [99.1, 833.0], [99.2, 833.0], [99.3, 833.0], [99.4, 833.0], [99.5, 833.0], [99.6, 833.0], [99.7, 833.0], [99.8, 833.0], [99.9, 833.0]], "isOverall": false, "label": "PROF - VNE - Test 02", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 2.0], [84.1, 2.0], [84.2, 2.0], [84.3, 2.0], [84.4, 2.0], [84.5, 2.0], [84.6, 2.0], [84.7, 2.0], [84.8, 2.0], [84.9, 2.0], [85.0, 3.0], [85.1, 3.0], [85.2, 3.0], [85.3, 3.0], [85.4, 3.0], [85.5, 3.0], [85.6, 3.0], [85.7, 3.0], [85.8, 3.0], [85.9, 3.0], [86.0, 3.0], [86.1, 3.0], [86.2, 3.0], [86.3, 3.0], [86.4, 3.0], [86.5, 3.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 3.0], [87.4, 3.0], [87.5, 3.0], [87.6, 3.0], [87.7, 3.0], [87.8, 3.0], [87.9, 3.0], [88.0, 4.0], [88.1, 4.0], [88.2, 4.0], [88.3, 4.0], [88.4, 4.0], [88.5, 4.0], [88.6, 4.0], [88.7, 4.0], [88.8, 4.0], [88.9, 4.0], [89.0, 5.0], [89.1, 5.0], [89.2, 5.0], [89.3, 5.0], [89.4, 5.0], [89.5, 5.0], [89.6, 5.0], [89.7, 5.0], [89.8, 5.0], [89.9, 5.0], [90.0, 7.0], [90.1, 7.0], [90.2, 7.0], [90.3, 7.0], [90.4, 7.0], [90.5, 7.0], [90.6, 7.0], [90.7, 7.0], [90.8, 7.0], [90.9, 7.0], [91.0, 7.0], [91.1, 7.0], [91.2, 7.0], [91.3, 7.0], [91.4, 7.0], [91.5, 7.0], [91.6, 7.0], [91.7, 7.0], [91.8, 7.0], [91.9, 7.0], [92.0, 98.0], [92.1, 98.0], [92.2, 98.0], [92.3, 98.0], [92.4, 98.0], [92.5, 98.0], [92.6, 98.0], [92.7, 98.0], [92.8, 98.0], [92.9, 98.0], [93.0, 106.0], [93.1, 106.0], [93.2, 106.0], [93.3, 106.0], [93.4, 106.0], [93.5, 106.0], [93.6, 106.0], [93.7, 106.0], [93.8, 106.0], [93.9, 106.0], [94.0, 304.0], [94.1, 304.0], [94.2, 304.0], [94.3, 304.0], [94.4, 304.0], [94.5, 304.0], [94.6, 304.0], [94.7, 304.0], [94.8, 304.0], [94.9, 304.0], [95.0, 305.0], [95.1, 305.0], [95.2, 305.0], [95.3, 305.0], [95.4, 305.0], [95.5, 305.0], [95.6, 305.0], [95.7, 305.0], [95.8, 305.0], [95.9, 305.0], [96.0, 316.0], [96.1, 316.0], [96.2, 316.0], [96.3, 316.0], [96.4, 316.0], [96.5, 316.0], [96.6, 316.0], [96.7, 316.0], [96.8, 316.0], [96.9, 316.0], [97.0, 317.0], [97.1, 317.0], [97.2, 317.0], [97.3, 317.0], [97.4, 317.0], [97.5, 317.0], [97.6, 317.0], [97.7, 317.0], [97.8, 317.0], [97.9, 317.0], [98.0, 319.0], [98.1, 319.0], [98.2, 319.0], [98.3, 319.0], [98.4, 319.0], [98.5, 319.0], [98.6, 319.0], [98.7, 319.0], [98.8, 319.0], [98.9, 319.0], [99.0, 319.0], [99.1, 319.0], [99.2, 319.0], [99.3, 319.0], [99.4, 319.0], [99.5, 319.0], [99.6, 319.0], [99.7, 319.0], [99.8, 319.0], [99.9, 319.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 24.0], [0.1, 26.0], [0.2, 26.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 28.0], [1.1, 28.0], [1.2, 28.0], [1.3, 28.0], [1.4, 28.0], [1.5, 28.0], [1.6, 29.0], [1.7, 29.0], [1.8, 29.0], [1.9, 29.0], [2.0, 29.0], [2.1, 29.0], [2.2, 29.0], [2.3, 29.0], [2.4, 29.0], [2.5, 29.0], [2.6, 29.0], [2.7, 29.0], [2.8, 30.0], [2.9, 30.0], [3.0, 30.0], [3.1, 30.0], [3.2, 30.0], [3.3, 30.0], [3.4, 30.0], [3.5, 30.0], [3.6, 30.0], [3.7, 30.0], [3.8, 30.0], [3.9, 30.0], [4.0, 31.0], [4.1, 31.0], [4.2, 31.0], [4.3, 31.0], [4.4, 31.0], [4.5, 31.0], [4.6, 31.0], [4.7, 31.0], [4.8, 31.0], [4.9, 31.0], [5.0, 32.0], [5.1, 32.0], [5.2, 32.0], [5.3, 32.0], [5.4, 32.0], [5.5, 32.0], [5.6, 32.0], [5.7, 32.0], [5.8, 32.0], [5.9, 32.0], [6.0, 32.0], [6.1, 32.0], [6.2, 32.0], [6.3, 32.0], [6.4, 32.0], [6.5, 32.0], [6.6, 32.0], [6.7, 32.0], [6.8, 32.0], [6.9, 33.0], [7.0, 33.0], [7.1, 33.0], [7.2, 33.0], [7.3, 33.0], [7.4, 33.0], [7.5, 33.0], [7.6, 33.0], [7.7, 33.0], [7.8, 33.0], [7.9, 33.0], [8.0, 33.0], [8.1, 34.0], [8.2, 34.0], [8.3, 34.0], [8.4, 34.0], [8.5, 34.0], [8.6, 34.0], [8.7, 34.0], [8.8, 34.0], [8.9, 34.0], [9.0, 34.0], [9.1, 34.0], [9.2, 34.0], [9.3, 34.0], [9.4, 34.0], [9.5, 35.0], [9.6, 35.0], [9.7, 35.0], [9.8, 35.0], [9.9, 35.0], [10.0, 35.0], [10.1, 35.0], [10.2, 35.0], [10.3, 35.0], [10.4, 35.0], [10.5, 35.0], [10.6, 35.0], [10.7, 36.0], [10.8, 36.0], [10.9, 36.0], [11.0, 36.0], [11.1, 36.0], [11.2, 36.0], [11.3, 36.0], [11.4, 36.0], [11.5, 36.0], [11.6, 36.0], [11.7, 36.0], [11.8, 36.0], [11.9, 36.0], [12.0, 37.0], [12.1, 37.0], [12.2, 37.0], [12.3, 37.0], [12.4, 37.0], [12.5, 37.0], [12.6, 37.0], [12.7, 37.0], [12.8, 37.0], [12.9, 37.0], [13.0, 37.0], [13.1, 37.0], [13.2, 37.0], [13.3, 37.0], [13.4, 37.0], [13.5, 37.0], [13.6, 37.0], [13.7, 37.0], [13.8, 37.0], [13.9, 38.0], [14.0, 38.0], [14.1, 38.0], [14.2, 38.0], [14.3, 38.0], [14.4, 38.0], [14.5, 38.0], [14.6, 38.0], [14.7, 38.0], [14.8, 39.0], [14.9, 39.0], [15.0, 39.0], [15.1, 39.0], [15.2, 39.0], [15.3, 39.0], [15.4, 39.0], [15.5, 39.0], [15.6, 39.0], [15.7, 39.0], [15.8, 39.0], [15.9, 39.0], [16.0, 40.0], [16.1, 40.0], [16.2, 40.0], [16.3, 40.0], [16.4, 40.0], [16.5, 40.0], [16.6, 40.0], [16.7, 40.0], [16.8, 40.0], [16.9, 40.0], [17.0, 40.0], [17.1, 41.0], [17.2, 41.0], [17.3, 41.0], [17.4, 41.0], [17.5, 41.0], [17.6, 41.0], [17.7, 41.0], [17.8, 41.0], [17.9, 41.0], [18.0, 41.0], [18.1, 41.0], [18.2, 41.0], [18.3, 42.0], [18.4, 42.0], [18.5, 42.0], [18.6, 42.0], [18.7, 42.0], [18.8, 42.0], [18.9, 42.0], [19.0, 42.0], [19.1, 42.0], [19.2, 42.0], [19.3, 43.0], [19.4, 43.0], [19.5, 43.0], [19.6, 43.0], [19.7, 43.0], [19.8, 43.0], [19.9, 43.0], [20.0, 43.0], [20.1, 43.0], [20.2, 43.0], [20.3, 43.0], [20.4, 43.0], [20.5, 43.0], [20.6, 43.0], [20.7, 43.0], [20.8, 44.0], [20.9, 44.0], [21.0, 44.0], [21.1, 44.0], [21.2, 44.0], [21.3, 44.0], [21.4, 44.0], [21.5, 44.0], [21.6, 44.0], [21.7, 44.0], [21.8, 45.0], [21.9, 45.0], [22.0, 45.0], [22.1, 45.0], [22.2, 45.0], [22.3, 45.0], [22.4, 46.0], [22.5, 46.0], [22.6, 46.0], [22.7, 46.0], [22.8, 46.0], [22.9, 46.0], [23.0, 46.0], [23.1, 46.0], [23.2, 46.0], [23.3, 46.0], [23.4, 46.0], [23.5, 47.0], [23.6, 47.0], [23.7, 47.0], [23.8, 47.0], [23.9, 47.0], [24.0, 47.0], [24.1, 47.0], [24.2, 47.0], [24.3, 47.0], [24.4, 48.0], [24.5, 48.0], [24.6, 48.0], [24.7, 48.0], [24.8, 48.0], [24.9, 48.0], [25.0, 48.0], [25.1, 48.0], [25.2, 48.0], [25.3, 48.0], [25.4, 49.0], [25.5, 49.0], [25.6, 49.0], [25.7, 49.0], [25.8, 49.0], [25.9, 49.0], [26.0, 49.0], [26.1, 49.0], [26.2, 49.0], [26.3, 50.0], [26.4, 50.0], [26.5, 50.0], [26.6, 50.0], [26.7, 50.0], [26.8, 50.0], [26.9, 50.0], [27.0, 50.0], [27.1, 51.0], [27.2, 51.0], [27.3, 51.0], [27.4, 51.0], [27.5, 51.0], [27.6, 51.0], [27.7, 51.0], [27.8, 51.0], [27.9, 52.0], [28.0, 52.0], [28.1, 52.0], [28.2, 52.0], [28.3, 52.0], [28.4, 52.0], [28.5, 52.0], [28.6, 52.0], [28.7, 52.0], [28.8, 53.0], [28.9, 53.0], [29.0, 53.0], [29.1, 53.0], [29.2, 53.0], [29.3, 53.0], [29.4, 53.0], [29.5, 53.0], [29.6, 53.0], [29.7, 53.0], [29.8, 53.0], [29.9, 53.0], [30.0, 53.0], [30.1, 54.0], [30.2, 54.0], [30.3, 54.0], [30.4, 54.0], [30.5, 54.0], [30.6, 55.0], [30.7, 55.0], [30.8, 55.0], [30.9, 55.0], [31.0, 55.0], [31.1, 55.0], [31.2, 55.0], [31.3, 55.0], [31.4, 56.0], [31.5, 56.0], [31.6, 56.0], [31.7, 56.0], [31.8, 56.0], [31.9, 57.0], [32.0, 57.0], [32.1, 57.0], [32.2, 57.0], [32.3, 57.0], [32.4, 57.0], [32.5, 58.0], [32.6, 58.0], [32.7, 58.0], [32.8, 58.0], [32.9, 58.0], [33.0, 58.0], [33.1, 58.0], [33.2, 59.0], [33.3, 59.0], [33.4, 59.0], [33.5, 59.0], [33.6, 59.0], [33.7, 59.0], [33.8, 60.0], [33.9, 60.0], [34.0, 60.0], [34.1, 60.0], [34.2, 61.0], [34.3, 61.0], [34.4, 61.0], [34.5, 61.0], [34.6, 61.0], [34.7, 61.0], [34.8, 61.0], [34.9, 61.0], [35.0, 62.0], [35.1, 62.0], [35.2, 62.0], [35.3, 62.0], [35.4, 62.0], [35.5, 62.0], [35.6, 62.0], [35.7, 62.0], [35.8, 62.0], [35.9, 63.0], [36.0, 63.0], [36.1, 63.0], [36.2, 63.0], [36.3, 63.0], [36.4, 64.0], [36.5, 64.0], [36.6, 64.0], [36.7, 64.0], [36.8, 64.0], [36.9, 65.0], [37.0, 65.0], [37.1, 65.0], [37.2, 65.0], [37.3, 65.0], [37.4, 65.0], [37.5, 65.0], [37.6, 66.0], [37.7, 66.0], [37.8, 66.0], [37.9, 66.0], [38.0, 66.0], [38.1, 67.0], [38.2, 67.0], [38.3, 67.0], [38.4, 67.0], [38.5, 67.0], [38.6, 68.0], [38.7, 68.0], [38.8, 68.0], [38.9, 68.0], [39.0, 68.0], [39.1, 68.0], [39.2, 69.0], [39.3, 69.0], [39.4, 69.0], [39.5, 69.0], [39.6, 69.0], [39.7, 69.0], [39.8, 69.0], [39.9, 69.0], [40.0, 70.0], [40.1, 70.0], [40.2, 70.0], [40.3, 70.0], [40.4, 71.0], [40.5, 71.0], [40.6, 71.0], [40.7, 71.0], [40.8, 72.0], [40.9, 72.0], [41.0, 72.0], [41.1, 72.0], [41.2, 73.0], [41.3, 73.0], [41.4, 73.0], [41.5, 73.0], [41.6, 73.0], [41.7, 73.0], [41.8, 74.0], [41.9, 74.0], [42.0, 74.0], [42.1, 74.0], [42.2, 74.0], [42.3, 74.0], [42.4, 75.0], [42.5, 75.0], [42.6, 75.0], [42.7, 75.0], [42.8, 75.0], [42.9, 76.0], [43.0, 76.0], [43.1, 76.0], [43.2, 76.0], [43.3, 76.0], [43.4, 76.0], [43.5, 77.0], [43.6, 77.0], [43.7, 77.0], [43.8, 77.0], [43.9, 77.0], [44.0, 78.0], [44.1, 78.0], [44.2, 78.0], [44.3, 78.0], [44.4, 78.0], [44.5, 79.0], [44.6, 79.0], [44.7, 79.0], [44.8, 79.0], [44.9, 79.0], [45.0, 79.0], [45.1, 80.0], [45.2, 80.0], [45.3, 80.0], [45.4, 80.0], [45.5, 80.0], [45.6, 80.0], [45.7, 81.0], [45.8, 81.0], [45.9, 81.0], [46.0, 81.0], [46.1, 82.0], [46.2, 82.0], [46.3, 82.0], [46.4, 83.0], [46.5, 83.0], [46.6, 83.0], [46.7, 83.0], [46.8, 83.0], [46.9, 83.0], [47.0, 84.0], [47.1, 84.0], [47.2, 85.0], [47.3, 85.0], [47.4, 85.0], [47.5, 85.0], [47.6, 85.0], [47.7, 86.0], [47.8, 86.0], [47.9, 86.0], [48.0, 86.0], [48.1, 86.0], [48.2, 86.0], [48.3, 86.0], [48.4, 87.0], [48.5, 87.0], [48.6, 88.0], [48.7, 88.0], [48.8, 88.0], [48.9, 88.0], [49.0, 88.0], [49.1, 88.0], [49.2, 89.0], [49.3, 89.0], [49.4, 89.0], [49.5, 89.0], [49.6, 89.0], [49.7, 90.0], [49.8, 90.0], [49.9, 91.0], [50.0, 91.0], [50.1, 91.0], [50.2, 91.0], [50.3, 92.0], [50.4, 92.0], [50.5, 92.0], [50.6, 92.0], [50.7, 92.0], [50.8, 93.0], [50.9, 93.0], [51.0, 93.0], [51.1, 93.0], [51.2, 93.0], [51.3, 93.0], [51.4, 94.0], [51.5, 94.0], [51.6, 95.0], [51.7, 95.0], [51.8, 95.0], [51.9, 95.0], [52.0, 95.0], [52.1, 96.0], [52.2, 96.0], [52.3, 96.0], [52.4, 97.0], [52.5, 97.0], [52.6, 98.0], [52.7, 98.0], [52.8, 98.0], [52.9, 99.0], [53.0, 99.0], [53.1, 99.0], [53.2, 100.0], [53.3, 100.0], [53.4, 100.0], [53.5, 100.0], [53.6, 101.0], [53.7, 101.0], [53.8, 101.0], [53.9, 101.0], [54.0, 102.0], [54.1, 102.0], [54.2, 102.0], [54.3, 102.0], [54.4, 103.0], [54.5, 103.0], [54.6, 103.0], [54.7, 103.0], [54.8, 104.0], [54.9, 104.0], [55.0, 104.0], [55.1, 105.0], [55.2, 105.0], [55.3, 105.0], [55.4, 105.0], [55.5, 106.0], [55.6, 106.0], [55.7, 106.0], [55.8, 106.0], [55.9, 106.0], [56.0, 107.0], [56.1, 107.0], [56.2, 107.0], [56.3, 108.0], [56.4, 108.0], [56.5, 109.0], [56.6, 109.0], [56.7, 109.0], [56.8, 109.0], [56.9, 109.0], [57.0, 110.0], [57.1, 110.0], [57.2, 110.0], [57.3, 110.0], [57.4, 111.0], [57.5, 111.0], [57.6, 111.0], [57.7, 111.0], [57.8, 112.0], [57.9, 112.0], [58.0, 112.0], [58.1, 113.0], [58.2, 113.0], [58.3, 113.0], [58.4, 113.0], [58.5, 114.0], [58.6, 114.0], [58.7, 115.0], [58.8, 115.0], [58.9, 116.0], [59.0, 116.0], [59.1, 117.0], [59.2, 117.0], [59.3, 117.0], [59.4, 118.0], [59.5, 119.0], [59.6, 119.0], [59.7, 119.0], [59.8, 120.0], [59.9, 120.0], [60.0, 121.0], [60.1, 121.0], [60.2, 122.0], [60.3, 122.0], [60.4, 123.0], [60.5, 123.0], [60.6, 124.0], [60.7, 124.0], [60.8, 126.0], [60.9, 126.0], [61.0, 127.0], [61.1, 127.0], [61.2, 127.0], [61.3, 127.0], [61.4, 127.0], [61.5, 128.0], [61.6, 128.0], [61.7, 129.0], [61.8, 129.0], [61.9, 130.0], [62.0, 130.0], [62.1, 130.0], [62.2, 131.0], [62.3, 131.0], [62.4, 131.0], [62.5, 131.0], [62.6, 132.0], [62.7, 132.0], [62.8, 133.0], [62.9, 133.0], [63.0, 133.0], [63.1, 134.0], [63.2, 134.0], [63.3, 134.0], [63.4, 135.0], [63.5, 135.0], [63.6, 137.0], [63.7, 137.0], [63.8, 137.0], [63.9, 137.0], [64.0, 137.0], [64.1, 138.0], [64.2, 138.0], [64.3, 138.0], [64.4, 139.0], [64.5, 139.0], [64.6, 139.0], [64.7, 140.0], [64.8, 140.0], [64.9, 141.0], [65.0, 141.0], [65.1, 142.0], [65.2, 142.0], [65.3, 142.0], [65.4, 142.0], [65.5, 143.0], [65.6, 143.0], [65.7, 143.0], [65.8, 143.0], [65.9, 144.0], [66.0, 144.0], [66.1, 144.0], [66.2, 144.0], [66.3, 145.0], [66.4, 145.0], [66.5, 146.0], [66.6, 147.0], [66.7, 147.0], [66.8, 147.0], [66.9, 147.0], [67.0, 148.0], [67.1, 148.0], [67.2, 149.0], [67.3, 149.0], [67.4, 149.0], [67.5, 149.0], [67.6, 152.0], [67.7, 152.0], [67.8, 152.0], [67.9, 154.0], [68.0, 155.0], [68.1, 156.0], [68.2, 157.0], [68.3, 157.0], [68.4, 158.0], [68.5, 159.0], [68.6, 160.0], [68.7, 161.0], [68.8, 162.0], [68.9, 165.0], [69.0, 165.0], [69.1, 166.0], [69.2, 166.0], [69.3, 167.0], [69.4, 167.0], [69.5, 167.0], [69.6, 170.0], [69.7, 170.0], [69.8, 170.0], [69.9, 172.0], [70.0, 173.0], [70.1, 173.0], [70.2, 175.0], [70.3, 176.0], [70.4, 176.0], [70.5, 177.0], [70.6, 177.0], [70.7, 179.0], [70.8, 181.0], [70.9, 181.0], [71.0, 182.0], [71.1, 183.0], [71.2, 183.0], [71.3, 185.0], [71.4, 186.0], [71.5, 186.0], [71.6, 186.0], [71.7, 187.0], [71.8, 187.0], [71.9, 189.0], [72.0, 189.0], [72.1, 192.0], [72.2, 192.0], [72.3, 193.0], [72.4, 195.0], [72.5, 198.0], [72.6, 199.0], [72.7, 199.0], [72.8, 200.0], [72.9, 200.0], [73.0, 201.0], [73.1, 206.0], [73.2, 209.0], [73.3, 209.0], [73.4, 209.0], [73.5, 212.0], [73.6, 216.0], [73.7, 218.0], [73.8, 218.0], [73.9, 220.0], [74.0, 221.0], [74.1, 221.0], [74.2, 222.0], [74.3, 224.0], [74.4, 225.0], [74.5, 226.0], [74.6, 226.0], [74.7, 230.0], [74.8, 230.0], [74.9, 231.0], [75.0, 232.0], [75.1, 233.0], [75.2, 234.0], [75.3, 239.0], [75.4, 240.0], [75.5, 244.0], [75.6, 247.0], [75.7, 248.0], [75.8, 250.0], [75.9, 250.0], [76.0, 258.0], [76.1, 258.0], [76.2, 260.0], [76.3, 260.0], [76.4, 260.0], [76.5, 261.0], [76.6, 262.0], [76.7, 262.0], [76.8, 263.0], [76.9, 265.0], [77.0, 265.0], [77.1, 268.0], [77.2, 269.0], [77.3, 269.0], [77.4, 270.0], [77.5, 271.0], [77.6, 272.0], [77.7, 275.0], [77.8, 275.0], [77.9, 276.0], [78.0, 277.0], [78.1, 279.0], [78.2, 280.0], [78.3, 282.0], [78.4, 282.0], [78.5, 284.0], [78.6, 285.0], [78.7, 287.0], [78.8, 288.0], [78.9, 290.0], [79.0, 294.0], [79.1, 295.0], [79.2, 296.0], [79.3, 296.0], [79.4, 300.0], [79.5, 300.0], [79.6, 303.0], [79.7, 304.0], [79.8, 305.0], [79.9, 307.0], [80.0, 308.0], [80.1, 309.0], [80.2, 315.0], [80.3, 315.0], [80.4, 316.0], [80.5, 318.0], [80.6, 321.0], [80.7, 321.0], [80.8, 322.0], [80.9, 324.0], [81.0, 326.0], [81.1, 327.0], [81.2, 328.0], [81.3, 331.0], [81.4, 331.0], [81.5, 332.0], [81.6, 332.0], [81.7, 337.0], [81.8, 337.0], [81.9, 339.0], [82.0, 339.0], [82.1, 341.0], [82.2, 346.0], [82.3, 346.0], [82.4, 350.0], [82.5, 352.0], [82.6, 354.0], [82.7, 358.0], [82.8, 359.0], [82.9, 360.0], [83.0, 363.0], [83.1, 364.0], [83.2, 368.0], [83.3, 370.0], [83.4, 374.0], [83.5, 375.0], [83.6, 376.0], [83.7, 376.0], [83.8, 380.0], [83.9, 380.0], [84.0, 380.0], [84.1, 383.0], [84.2, 384.0], [84.3, 385.0], [84.4, 387.0], [84.5, 391.0], [84.6, 396.0], [84.7, 397.0], [84.8, 398.0], [84.9, 400.0], [85.0, 402.0], [85.1, 408.0], [85.2, 410.0], [85.3, 415.0], [85.4, 415.0], [85.5, 417.0], [85.6, 420.0], [85.7, 421.0], [85.8, 425.0], [85.9, 429.0], [86.0, 432.0], [86.1, 433.0], [86.2, 436.0], [86.3, 441.0], [86.4, 446.0], [86.5, 452.0], [86.6, 452.0], [86.7, 453.0], [86.8, 454.0], [86.9, 454.0], [87.0, 455.0], [87.1, 456.0], [87.2, 459.0], [87.3, 460.0], [87.4, 465.0], [87.5, 471.0], [87.6, 472.0], [87.7, 476.0], [87.8, 480.0], [87.9, 486.0], [88.0, 487.0], [88.1, 498.0], [88.2, 499.0], [88.3, 500.0], [88.4, 502.0], [88.5, 508.0], [88.6, 509.0], [88.7, 513.0], [88.8, 517.0], [88.9, 520.0], [89.0, 526.0], [89.1, 533.0], [89.2, 539.0], [89.3, 540.0], [89.4, 546.0], [89.5, 547.0], [89.6, 555.0], [89.7, 556.0], [89.8, 558.0], [89.9, 561.0], [90.0, 567.0], [90.1, 571.0], [90.2, 579.0], [90.3, 585.0], [90.4, 587.0], [90.5, 598.0], [90.6, 603.0], [90.7, 605.0], [90.8, 611.0], [90.9, 614.0], [91.0, 617.0], [91.1, 627.0], [91.2, 632.0], [91.3, 638.0], [91.4, 639.0], [91.5, 640.0], [91.6, 644.0], [91.7, 646.0], [91.8, 655.0], [91.9, 661.0], [92.0, 661.0], [92.1, 663.0], [92.2, 683.0], [92.3, 695.0], [92.4, 700.0], [92.5, 700.0], [92.6, 722.0], [92.7, 722.0], [92.8, 727.0], [92.9, 728.0], [93.0, 735.0], [93.1, 739.0], [93.2, 746.0], [93.3, 753.0], [93.4, 757.0], [93.5, 759.0], [93.6, 766.0], [93.7, 770.0], [93.8, 772.0], [93.9, 781.0], [94.0, 782.0], [94.1, 789.0], [94.2, 793.0], [94.3, 795.0], [94.4, 798.0], [94.5, 810.0], [94.6, 810.0], [94.7, 821.0], [94.8, 822.0], [94.9, 834.0], [95.0, 839.0], [95.1, 854.0], [95.2, 860.0], [95.3, 861.0], [95.4, 885.0], [95.5, 888.0], [95.6, 894.0], [95.7, 897.0], [95.8, 914.0], [95.9, 915.0], [96.0, 924.0], [96.1, 934.0], [96.2, 936.0], [96.3, 937.0], [96.4, 973.0], [96.5, 975.0], [96.6, 993.0], [96.7, 995.0], [96.8, 1011.0], [96.9, 1016.0], [97.0, 1025.0], [97.1, 1044.0], [97.2, 1047.0], [97.3, 1077.0], [97.4, 1080.0], [97.5, 1109.0], [97.6, 1144.0], [97.7, 1184.0], [97.8, 1191.0], [97.9, 1204.0], [98.0, 1214.0], [98.1, 1258.0], [98.2, 1276.0], [98.3, 1313.0], [98.4, 1325.0], [98.5, 1340.0], [98.6, 1469.0], [98.7, 1474.0], [98.8, 1498.0], [98.9, 1501.0], [99.0, 1543.0], [99.1, 1551.0], [99.2, 1653.0], [99.3, 1686.0], [99.4, 1819.0], [99.5, 1830.0], [99.6, 1871.0], [99.7, 1882.0], [99.8, 2047.0], [99.9, 2156.0], [100.0, 2928.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1796.0, "series": [{"data": [[0.0, 1478.0], [600.0, 800.0], [700.0, 416.0], [800.0, 228.0], [900.0, 158.0], [1000.0, 236.0], [1100.0, 300.0], [1200.0, 324.0], [1300.0, 226.0], [1400.0, 204.0], [22400.0, 1.0], [1500.0, 158.0], [1600.0, 141.0], [100.0, 1767.0], [1700.0, 110.0], [1800.0, 47.0], [1900.0, 31.0], [2000.0, 40.0], [2100.0, 63.0], [2200.0, 38.0], [2300.0, 35.0], [2400.0, 23.0], [2500.0, 32.0], [2600.0, 23.0], [2800.0, 6.0], [2700.0, 11.0], [2900.0, 10.0], [3000.0, 2.0], [3100.0, 5.0], [200.0, 1756.0], [3200.0, 1.0], [3400.0, 3.0], [3500.0, 5.0], [3600.0, 2.0], [3700.0, 3.0], [3800.0, 1.0], [3900.0, 3.0], [4300.0, 1.0], [4100.0, 1.0], [300.0, 1796.0], [5400.0, 1.0], [400.0, 1645.0], [500.0, 1171.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 94.0], [600.0, 1.0], [300.0, 1.0], [800.0, 1.0], [200.0, 1.0], [100.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Test 02", "isController": false}, {"data": [[0.0, 93.0], [300.0, 6.0], [100.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 781.0], [2100.0, 1.0], [600.0, 27.0], [700.0, 30.0], [2900.0, 1.0], [200.0, 97.0], [800.0, 19.0], [900.0, 15.0], [1000.0, 11.0], [1100.0, 5.0], [300.0, 81.0], [1200.0, 7.0], [1300.0, 4.0], [1400.0, 4.0], [1500.0, 4.0], [400.0, 50.0], [100.0, 288.0], [1600.0, 3.0], [1700.0, 1.0], [1800.0, 5.0], [500.0, 33.0], [2000.0, 2.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 22400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 810.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 9947.0, "series": [{"data": [[0.0, 9947.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4214.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 810.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 18.83161512027492, "minX": 1.6172733E12, "maxY": 65.82263660017344, "series": [{"data": [[1.6172733E12, 18.83161512027492], [1.61727342E12, 65.82263660017344], [1.61727336E12, 63.82182427209486]], "isOverall": false, "label": "jp@gc - Stepping Thread Group (deprecated)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727342E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 1370.875, "series": [{"data": [[2.0, 50.0], [3.0, 70.0], [4.0, 46.0], [5.0, 58.0], [6.0, 64.0], [7.0, 77.0], [8.0, 82.0], [9.0, 51.0], [10.0, 85.06367041198514], [11.0, 103.00000000000006], [12.0, 109.48571428571428], [13.0, 221.33333333333334], [14.0, 199.0], [15.0, 164.0], [16.0, 540.0], [17.0, 615.0], [18.0, 275.0], [19.0, 871.0], [20.0, 233.10668229777252], [21.0, 138.45], [22.0, 160.83333333333331], [23.0, 197.05263157894737], [24.0, 164.63157894736844], [25.0, 173.03351955307252], [26.0, 240.41025641025638], [27.0, 209.89655172413794], [28.0, 205.84905660377362], [29.0, 345.83333333333337], [30.0, 252.64285714285714], [31.0, 304.92592592592587], [32.0, 455.64285714285717], [33.0, 245.46428571428575], [34.0, 173.0625], [35.0, 349.9411764705882], [36.0, 338.578947368421], [37.0, 234.8928571428572], [38.0, 263.0], [39.0, 478.8888888888889], [40.0, 346.6507080242755], [41.0, 517.6747967479675], [42.0, 403.0677966101695], [43.0, 712.6666666666666], [44.0, 330.91666666666663], [45.0, 292.0], [46.0, 465.06666666666666], [47.0, 360.2307692307693], [48.0, 298.9565217391305], [49.0, 350.1], [50.0, 652.3571428571428], [51.0, 678.638888888889], [52.0, 485.73333333333346], [53.0, 440.9600000000001], [54.0, 447.37499999999994], [55.0, 392.4999999999997], [56.0, 399.8034188034187], [57.0, 449.71428571428567], [58.0, 530.5454545454545], [59.0, 472.4285714285714], [60.0, 450.4627659574462], [61.0, 354.4615384615384], [62.0, 353.40540540540536], [63.0, 592.076923076923], [64.0, 625.8611111111112], [65.0, 452.0555555555556], [66.0, 404.6363636363636], [67.0, 594.1666666666667], [68.0, 454.11111111111114], [69.0, 452.3461538461539], [70.0, 590.8468992248055], [71.0, 463.33333333333326], [72.0, 500.08], [73.0, 747.5416666666667], [74.0, 764.125], [75.0, 686.5555555555555], [76.0, 621.2666666666668], [77.0, 729.1666666666667], [78.0, 861.4444444444445], [79.0, 880.9285714285716], [80.0, 733.6409550045911], [81.0, 521.25], [82.0, 513.0384615384617], [83.0, 664.074074074074], [84.0, 592.6], [85.0, 1023.7734374999993], [86.0, 930.9999999999999], [87.0, 833.7818181818182], [89.0, 577.9245283018868], [90.0, 517.8484848484849], [91.0, 631.2105263157894], [88.0, 925.75], [92.0, 724.0476190476189], [93.0, 624.1199999999999], [94.0, 836.304347826087], [95.0, 1149.142857142857], [96.0, 1035.473684210527], [97.0, 856.2500000000001], [98.0, 621.4444444444445], [99.0, 995.1333333333334], [100.0, 813.8378229796597], [1.0, 66.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[64.04863930236056, 539.2557510148855]], "isOverall": false, "label": "VNE-GET-bongda-Aggregated", "isController": false}, {"data": [[6.0, 464.83333333333337], [7.0, 139.0], [8.0, 0.0], [9.0, 1.0], [10.0, 1.0], [11.0, 0.0], [12.0, 1.0], [13.0, 1.0], [14.0, 1.0], [15.0, 0.0], [16.0, 1.0], [17.0, 0.0], [18.0, 1.0], [19.0, 1.0], [20.0, 1.0], [21.0, 3.0], [22.0, 1.0], [23.0, 0.0], [24.0, 0.0], [25.0, 1.0], [26.0, 1.0], [27.0, 0.0], [28.0, 0.0], [29.0, 0.0], [30.0, 1.0], [31.0, 0.0], [32.0, 2.0], [33.0, 1.0], [34.0, 1.0], [35.0, 1.0], [36.0, 0.0], [37.0, 1.0], [38.0, 0.0], [39.0, 0.0], [40.0, 1.0], [41.0, 1.0], [42.0, 1.0], [43.0, 0.0], [44.0, 1.0], [45.0, 1.0], [46.0, 1.0], [47.0, 1.0], [48.0, 0.0], [49.0, 1.0], [50.0, 20.0], [51.0, 1.0], [52.0, 1.0], [53.0, 1.0], [54.0, 1.0], [55.0, 1.0], [56.0, 0.0], [57.0, 1.0], [58.0, 1.0], [59.0, 0.0], [60.0, 0.0], [61.0, 1.0], [62.0, 0.0], [63.0, 1.0], [64.0, 6.0], [65.0, 0.0], [66.0, 0.0], [67.0, 1.0], [68.0, 0.0], [69.0, 0.0], [70.0, 0.0], [71.0, 1.0], [72.0, 0.0], [73.0, 0.0], [74.0, 1.0], [75.0, 0.0], [76.0, 1.0], [77.0, 0.0], [78.0, 1.0], [79.0, 1.0], [80.0, 0.0], [81.0, 1.0], [82.0, 1.0], [83.0, 1.0], [84.0, 0.0], [85.0, 1.0], [86.0, 0.0], [87.0, 1.0], [88.0, 0.0], [89.0, 1.0], [90.0, 1.0], [91.0, 1.0], [92.0, 1.0], [93.0, 0.0], [94.0, 0.0], [95.0, 1.0], [96.0, 0.0], [97.0, 0.0], [98.0, 0.0], [99.0, 1.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 02", "isController": false}, {"data": [[50.64999999999999, 30.10000000000001]], "isOverall": false, "label": "PROF - VNE - Test 02-Aggregated", "isController": false}, {"data": [[8.0, 260.5], [9.0, 3.0], [10.0, 2.0], [11.0, 2.0], [12.0, 2.0], [13.0, 1.0], [14.0, 2.0], [15.0, 3.0], [16.0, 1.0], [17.0, 1.0], [18.0, 1.0], [19.0, 7.0], [20.0, 1.0], [21.0, 2.0], [22.0, 0.0], [23.0, 1.0], [24.0, 1.0], [25.0, 0.0], [26.0, 1.0], [27.0, 1.0], [28.0, 0.0], [29.0, 1.0], [30.0, 1.0], [31.0, 0.0], [32.0, 1.0], [33.0, 1.0], [34.0, 1.0], [35.0, 0.0], [36.0, 0.0], [37.0, 1.0], [38.0, 4.0], [39.0, 1.0], [40.0, 0.0], [41.0, 1.0], [42.0, 1.0], [43.0, 1.0], [44.0, 2.0], [45.0, 2.0], [46.0, 0.0], [47.0, 1.0], [48.0, 1.0], [49.0, 1.0], [50.0, 2.0], [51.0, 0.0], [52.0, 2.0], [53.0, 1.0], [54.0, 0.0], [55.0, 1.0], [56.0, 0.0], [57.0, 7.0], [58.0, 1.0], [59.0, 1.0], [60.0, 1.0], [61.0, 1.0], [62.0, 5.0], [63.0, 1.0], [64.0, 1.0], [65.0, 0.0], [66.0, 1.0], [67.0, 1.0], [68.0, 1.0], [69.0, 0.0], [70.0, 1.0], [71.0, 1.0], [72.0, 1.0], [73.0, 0.0], [74.0, 0.0], [75.0, 1.0], [76.0, 0.0], [77.0, 0.0], [78.0, 2.0], [79.0, 1.0], [80.0, 1.0], [81.0, 1.0], [82.0, 0.0], [83.0, 0.0], [84.0, 2.0], [85.0, 2.0], [86.0, 1.0], [87.0, 0.0], [88.0, 1.0], [89.0, 2.0], [90.0, 1.0], [91.0, 1.0], [92.0, 2.0], [93.0, 0.0], [94.0, 1.0], [95.0, 0.0], [96.0, 3.0], [97.0, 1.0], [98.0, 0.0], [99.0, 0.0], [100.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[50.78, 21.91]], "isOverall": false, "label": "PROF - VNE - Random main action-Aggregated", "isController": false}, {"data": [[10.0, 51.96666666666666], [11.0, 44.14285714285714], [12.0, 37.44444444444445], [16.0, 376.0], [17.0, 781.0], [20.0, 226.90425531914892], [21.0, 49.0], [23.0, 120.8], [25.0, 113.68749999999999], [26.0, 173.0], [27.0, 62.5], [28.0, 129.5], [29.0, 29.0], [30.0, 72.33333333333333], [32.0, 63.25], [33.0, 68.0], [34.0, 76.66666666666667], [35.0, 48.333333333333336], [37.0, 152.0], [38.0, 113.33333333333333], [40.0, 219.50306748466264], [41.0, 384.64285714285717], [42.0, 244.33333333333334], [44.0, 39.0], [45.0, 42.0], [47.0, 134.8], [48.0, 256.75], [49.0, 37.666666666666664], [51.0, 109.4], [52.0, 37.0], [53.0, 50.5], [55.0, 186.63636363636363], [56.0, 181.27272727272728], [57.0, 99.0], [59.0, 51.0], [60.0, 135.82993197278918], [61.0, 109.5], [62.0, 109.87500000000001], [63.0, 57.0], [64.0, 237.5], [65.0, 63.333333333333336], [66.0, 45.5], [67.0, 49.0], [68.0, 51.0], [69.0, 78.6], [70.0, 266.3684210526315], [72.0, 153.5], [73.0, 235.75], [74.0, 158.0], [77.0, 160.5], [78.0, 184.0], [79.0, 291.5], [80.0, 470.96491228070187], [81.0, 173.4], [83.0, 222.55555555555554], [87.0, 133.5], [86.0, 33.0], [85.0, 143.44736842105263], [84.0, 179.0], [91.0, 575.0], [89.0, 185.66666666666669], [92.0, 912.6666666666666], [93.0, 486.0], [94.0, 567.0], [95.0, 331.5], [97.0, 292.6666666666667], [98.0, 100.33333333333333], [99.0, 1370.875], [100.0, 207.08333333333363]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}, {"data": [[64.06262763784879, 213.37985023825738]], "isOverall": false, "label": "VNE-GET-quansu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2535.05, "minX": 1.6172733E12, "maxY": 6137840.833333333, "series": [{"data": [[1.6172733E12, 197762.95], [1.61727342E12, 5564197.633333334], [1.61727336E12, 6137840.833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6172733E12, 2535.05], [1.61727342E12, 69542.4], [1.61727336E12, 76350.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727342E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.9124999999999998, "minX": 1.6172733E12, "maxY": 566.1384343920424, "series": [{"data": [[1.6172733E12, 355.8201754385965], [1.61727342E12, 566.1384343920424], [1.61727336E12, 520.8692982456125]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.6172733E12, 146.85000000000005], [1.61727336E12, 0.9124999999999998]], "isOverall": false, "label": "PROF - VNE - Test 02", "isController": false}, {"data": [[1.6172733E12, 105.49999999999999], [1.61727336E12, 1.0125]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.6172733E12, 383.1739130434782], [1.61727342E12, 163.9649122807016], [1.61727336E12, 252.61154855643065]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727342E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6172733E12, "maxY": 489.2913057427012, "series": [{"data": [[1.6172733E12, 276.7938596491229], [1.61727342E12, 489.2913057427012], [1.61727336E12, 440.37441520467826]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.6172733E12, 0.0], [1.61727336E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 02", "isController": false}, {"data": [[1.6172733E12, 0.0], [1.61727336E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.6172733E12, 52.52173913043478], [1.61727342E12, 33.750000000000064], [1.61727336E12, 55.59842519685042]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727342E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6172733E12, "maxY": 399.5200513314093, "series": [{"data": [[1.6172733E12, 216.58771929824562], [1.61727342E12, 399.5200513314093], [1.61727336E12, 343.48625730994206]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.6172733E12, 0.0], [1.61727336E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 02", "isController": false}, {"data": [[1.6172733E12, 0.0], [1.61727336E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.6172733E12, 0.0], [1.61727342E12, 0.0], [1.61727336E12, 0.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727342E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6172733E12, "maxY": 22418.0, "series": [{"data": [[1.6172733E12, 1666.0], [1.61727342E12, 22418.0], [1.61727336E12, 4327.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6172733E12, 575.2000000000003], [1.61727342E12, 1294.1000000000004], [1.61727336E12, 1089.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6172733E12, 1659.32], [1.61727342E12, 2486.579999999991], [1.61727336E12, 2198.329999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6172733E12, 1032.3999999999994], [1.61727342E12, 1597.0499999999993], [1.61727336E12, 1441.699999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6172733E12, 0.0], [1.61727342E12, 24.0], [1.61727336E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6172733E12, 241.0], [1.61727342E12, 333.0], [1.61727336E12, 371.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727342E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 12.0, "maxY": 1628.0, "series": [{"data": [[12.0, 1.0], [20.0, 273.0], [34.0, 511.0], [38.0, 1236.5], [50.0, 450.0], [51.0, 1396.0], [52.0, 676.0], [57.0, 458.0], [58.0, 979.5], [61.0, 901.0], [63.0, 540.0], [62.0, 972.0], [66.0, 291.0], [67.0, 1147.0], [70.0, 268.0], [69.0, 1168.0], [73.0, 110.0], [75.0, 1628.0], [72.0, 502.5], [79.0, 189.5], [76.0, 142.5], [81.0, 850.0], [82.0, 510.5], [85.0, 988.0], [91.0, 636.0], [92.0, 135.0], [94.0, 423.5], [96.0, 174.5], [102.0, 59.0], [106.0, 690.0], [111.0, 251.5], [110.0, 593.5], [113.0, 277.0], [112.0, 272.5], [118.0, 573.0], [117.0, 546.5], [116.0, 563.0], [119.0, 123.0], [123.0, 167.0], [120.0, 1282.0], [121.0, 187.0], [127.0, 335.0], [126.0, 377.5], [134.0, 224.0], [128.0, 312.5], [129.0, 463.0], [133.0, 626.0], [135.0, 244.0], [130.0, 533.0], [136.0, 149.5], [137.0, 505.0], [143.0, 466.0], [140.0, 543.0], [138.0, 647.0], [146.0, 136.5], [151.0, 304.5], [145.0, 321.0], [149.0, 410.0], [147.0, 216.0], [148.0, 61.5], [153.0, 336.0], [158.0, 261.5], [154.0, 397.0], [152.0, 102.5], [159.0, 320.0], [155.0, 452.0], [164.0, 231.0], [160.0, 255.0], [161.0, 226.0], [165.0, 534.0], [168.0, 248.0], [169.0, 437.0], [173.0, 358.5], [172.0, 575.5], [179.0, 341.0], [182.0, 488.5], [183.0, 419.0], [181.0, 246.0], [176.0, 104.0], [189.0, 467.0], [194.0, 479.5], [197.0, 556.0], [201.0, 465.0], [217.0, 406.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 217.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 12.0, "maxY": 1246.5, "series": [{"data": [[12.0, 0.0], [20.0, 0.0], [34.0, 375.0], [38.0, 1143.5], [50.0, 306.5], [51.0, 925.0], [52.0, 671.5], [57.0, 308.0], [58.0, 540.0], [61.0, 630.0], [63.0, 346.0], [62.0, 545.0], [66.0, 195.5], [67.0, 758.0], [70.0, 173.5], [69.0, 1018.0], [73.0, 82.0], [75.0, 978.0], [72.0, 314.0], [79.0, 134.0], [76.0, 132.0], [81.0, 397.0], [82.0, 316.0], [85.0, 663.0], [91.0, 457.0], [92.0, 102.5], [94.0, 344.0], [96.0, 131.5], [102.0, 54.0], [106.0, 678.5], [111.0, 185.0], [110.0, 452.5], [113.0, 189.0], [112.0, 238.0], [118.0, 450.0], [117.0, 439.0], [116.0, 553.5], [119.0, 103.0], [123.0, 131.0], [120.0, 1246.5], [121.0, 138.0], [127.0, 252.0], [126.0, 113.0], [134.0, 157.0], [128.0, 212.5], [129.0, 315.0], [133.0, 615.0], [135.0, 216.0], [130.0, 500.0], [136.0, 139.0], [137.0, 348.0], [143.0, 445.0], [140.0, 379.0], [138.0, 643.0], [146.0, 99.0], [151.0, 256.0], [145.0, 245.0], [149.0, 270.0], [147.0, 158.5], [148.0, 56.5], [153.0, 319.0], [158.0, 238.0], [154.0, 368.5], [152.0, 90.0], [159.0, 261.0], [155.0, 347.0], [164.0, 217.0], [160.0, 222.0], [161.0, 174.0], [165.0, 461.0], [168.0, 224.0], [169.0, 413.5], [173.0, 286.5], [172.0, 562.0], [179.0, 314.0], [182.0, 368.0], [183.0, 378.0], [181.0, 121.0], [176.0, 81.0], [189.0, 386.0], [194.0, 469.0], [197.0, 500.0], [201.0, 456.0], [217.0, 346.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 217.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 5.183333333333334, "minX": 1.6172733E12, "maxY": 130.7, "series": [{"data": [[1.6172733E12, 5.183333333333334], [1.61727342E12, 113.63333333333334], [1.61727336E12, 130.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727342E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 4.85, "minX": 1.6172733E12, "maxY": 129.36666666666667, "series": [{"data": [[1.6172733E12, 4.85], [1.61727342E12, 115.3], [1.61727336E12, 129.36666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727342E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.6172733E12, "maxY": 114.0, "series": [{"data": [[1.6172733E12, 0.3333333333333333], [1.61727336E12, 1.3333333333333333]], "isOverall": false, "label": "PROF - VNE - Random main action-success", "isController": false}, {"data": [[1.6172733E12, 0.38333333333333336], [1.61727342E12, 11.4], [1.61727336E12, 12.7]], "isOverall": false, "label": "VNE-GET-quansu-success", "isController": false}, {"data": [[1.6172733E12, 0.3333333333333333], [1.61727336E12, 1.3333333333333333]], "isOverall": false, "label": "PROF - VNE - Test 02-success", "isController": false}, {"data": [[1.6172733E12, 3.8], [1.61727342E12, 103.9], [1.61727336E12, 114.0]], "isOverall": false, "label": "VNE-GET-bongda-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727342E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 4.85, "minX": 1.6172733E12, "maxY": 129.36666666666667, "series": [{"data": [[1.6172733E12, 4.85], [1.61727342E12, 115.3], [1.61727336E12, 129.36666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727342E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

