/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 14349.0, "series": [{"data": [[0.0, 42.0], [0.1, 45.0], [0.2, 46.0], [0.3, 47.0], [0.4, 47.0], [0.5, 48.0], [0.6, 48.0], [0.7, 49.0], [0.8, 49.0], [0.9, 50.0], [1.0, 50.0], [1.1, 51.0], [1.2, 51.0], [1.3, 52.0], [1.4, 52.0], [1.5, 52.0], [1.6, 53.0], [1.7, 53.0], [1.8, 54.0], [1.9, 54.0], [2.0, 54.0], [2.1, 55.0], [2.2, 56.0], [2.3, 56.0], [2.4, 56.0], [2.5, 57.0], [2.6, 57.0], [2.7, 58.0], [2.8, 58.0], [2.9, 58.0], [3.0, 59.0], [3.1, 59.0], [3.2, 60.0], [3.3, 60.0], [3.4, 61.0], [3.5, 61.0], [3.6, 62.0], [3.7, 62.0], [3.8, 62.0], [3.9, 63.0], [4.0, 63.0], [4.1, 64.0], [4.2, 64.0], [4.3, 65.0], [4.4, 65.0], [4.5, 66.0], [4.6, 66.0], [4.7, 66.0], [4.8, 67.0], [4.9, 68.0], [5.0, 68.0], [5.1, 69.0], [5.2, 70.0], [5.3, 71.0], [5.4, 71.0], [5.5, 71.0], [5.6, 72.0], [5.7, 72.0], [5.8, 73.0], [5.9, 73.0], [6.0, 74.0], [6.1, 74.0], [6.2, 75.0], [6.3, 75.0], [6.4, 76.0], [6.5, 76.0], [6.6, 77.0], [6.7, 77.0], [6.8, 78.0], [6.9, 79.0], [7.0, 79.0], [7.1, 80.0], [7.2, 80.0], [7.3, 80.0], [7.4, 81.0], [7.5, 81.0], [7.6, 82.0], [7.7, 82.0], [7.8, 82.0], [7.9, 83.0], [8.0, 83.0], [8.1, 83.0], [8.2, 84.0], [8.3, 84.0], [8.4, 84.0], [8.5, 85.0], [8.6, 85.0], [8.7, 86.0], [8.8, 86.0], [8.9, 86.0], [9.0, 87.0], [9.1, 87.0], [9.2, 87.0], [9.3, 88.0], [9.4, 88.0], [9.5, 88.0], [9.6, 89.0], [9.7, 89.0], [9.8, 90.0], [9.9, 90.0], [10.0, 91.0], [10.1, 91.0], [10.2, 91.0], [10.3, 92.0], [10.4, 92.0], [10.5, 92.0], [10.6, 93.0], [10.7, 93.0], [10.8, 93.0], [10.9, 93.0], [11.0, 94.0], [11.1, 94.0], [11.2, 94.0], [11.3, 95.0], [11.4, 95.0], [11.5, 95.0], [11.6, 95.0], [11.7, 96.0], [11.8, 96.0], [11.9, 97.0], [12.0, 97.0], [12.1, 98.0], [12.2, 98.0], [12.3, 98.0], [12.4, 99.0], [12.5, 99.0], [12.6, 99.0], [12.7, 100.0], [12.8, 100.0], [12.9, 101.0], [13.0, 101.0], [13.1, 101.0], [13.2, 101.0], [13.3, 102.0], [13.4, 102.0], [13.5, 102.0], [13.6, 103.0], [13.7, 103.0], [13.8, 104.0], [13.9, 104.0], [14.0, 104.0], [14.1, 105.0], [14.2, 105.0], [14.3, 106.0], [14.4, 106.0], [14.5, 106.0], [14.6, 106.0], [14.7, 107.0], [14.8, 107.0], [14.9, 108.0], [15.0, 108.0], [15.1, 109.0], [15.2, 109.0], [15.3, 109.0], [15.4, 110.0], [15.5, 111.0], [15.6, 111.0], [15.7, 111.0], [15.8, 112.0], [15.9, 112.0], [16.0, 112.0], [16.1, 113.0], [16.2, 113.0], [16.3, 114.0], [16.4, 115.0], [16.5, 115.0], [16.6, 116.0], [16.7, 116.0], [16.8, 116.0], [16.9, 117.0], [17.0, 117.0], [17.1, 118.0], [17.2, 118.0], [17.3, 118.0], [17.4, 119.0], [17.5, 119.0], [17.6, 120.0], [17.7, 120.0], [17.8, 121.0], [17.9, 122.0], [18.0, 122.0], [18.1, 122.0], [18.2, 123.0], [18.3, 123.0], [18.4, 124.0], [18.5, 124.0], [18.6, 125.0], [18.7, 125.0], [18.8, 125.0], [18.9, 126.0], [19.0, 126.0], [19.1, 127.0], [19.2, 127.0], [19.3, 127.0], [19.4, 127.0], [19.5, 128.0], [19.6, 128.0], [19.7, 128.0], [19.8, 129.0], [19.9, 129.0], [20.0, 130.0], [20.1, 130.0], [20.2, 130.0], [20.3, 131.0], [20.4, 131.0], [20.5, 132.0], [20.6, 132.0], [20.7, 133.0], [20.8, 133.0], [20.9, 134.0], [21.0, 134.0], [21.1, 134.0], [21.2, 135.0], [21.3, 135.0], [21.4, 136.0], [21.5, 136.0], [21.6, 137.0], [21.7, 137.0], [21.8, 138.0], [21.9, 138.0], [22.0, 138.0], [22.1, 139.0], [22.2, 140.0], [22.3, 140.0], [22.4, 141.0], [22.5, 141.0], [22.6, 141.0], [22.7, 142.0], [22.8, 142.0], [22.9, 143.0], [23.0, 144.0], [23.1, 144.0], [23.2, 145.0], [23.3, 145.0], [23.4, 146.0], [23.5, 146.0], [23.6, 147.0], [23.7, 147.0], [23.8, 148.0], [23.9, 148.0], [24.0, 149.0], [24.1, 150.0], [24.2, 151.0], [24.3, 151.0], [24.4, 151.0], [24.5, 152.0], [24.6, 152.0], [24.7, 153.0], [24.8, 154.0], [24.9, 154.0], [25.0, 155.0], [25.1, 155.0], [25.2, 155.0], [25.3, 156.0], [25.4, 156.0], [25.5, 157.0], [25.6, 157.0], [25.7, 158.0], [25.8, 158.0], [25.9, 159.0], [26.0, 160.0], [26.1, 160.0], [26.2, 161.0], [26.3, 161.0], [26.4, 162.0], [26.5, 163.0], [26.6, 163.0], [26.7, 164.0], [26.8, 165.0], [26.9, 166.0], [27.0, 166.0], [27.1, 167.0], [27.2, 168.0], [27.3, 168.0], [27.4, 169.0], [27.5, 169.0], [27.6, 170.0], [27.7, 170.0], [27.8, 171.0], [27.9, 171.0], [28.0, 172.0], [28.1, 172.0], [28.2, 173.0], [28.3, 174.0], [28.4, 174.0], [28.5, 175.0], [28.6, 175.0], [28.7, 176.0], [28.8, 177.0], [28.9, 177.0], [29.0, 178.0], [29.1, 178.0], [29.2, 179.0], [29.3, 179.0], [29.4, 180.0], [29.5, 180.0], [29.6, 181.0], [29.7, 181.0], [29.8, 182.0], [29.9, 182.0], [30.0, 183.0], [30.1, 183.0], [30.2, 184.0], [30.3, 184.0], [30.4, 186.0], [30.5, 187.0], [30.6, 187.0], [30.7, 187.0], [30.8, 188.0], [30.9, 189.0], [31.0, 189.0], [31.1, 190.0], [31.2, 191.0], [31.3, 192.0], [31.4, 192.0], [31.5, 193.0], [31.6, 194.0], [31.7, 194.0], [31.8, 196.0], [31.9, 196.0], [32.0, 197.0], [32.1, 197.0], [32.2, 198.0], [32.3, 199.0], [32.4, 200.0], [32.5, 200.0], [32.6, 201.0], [32.7, 202.0], [32.8, 203.0], [32.9, 203.0], [33.0, 204.0], [33.1, 205.0], [33.2, 206.0], [33.3, 206.0], [33.4, 207.0], [33.5, 208.0], [33.6, 209.0], [33.7, 210.0], [33.8, 211.0], [33.9, 212.0], [34.0, 212.0], [34.1, 213.0], [34.2, 214.0], [34.3, 215.0], [34.4, 217.0], [34.5, 218.0], [34.6, 219.0], [34.7, 220.0], [34.8, 221.0], [34.9, 221.0], [35.0, 222.0], [35.1, 223.0], [35.2, 224.0], [35.3, 225.0], [35.4, 226.0], [35.5, 228.0], [35.6, 229.0], [35.7, 230.0], [35.8, 231.0], [35.9, 232.0], [36.0, 233.0], [36.1, 234.0], [36.2, 236.0], [36.3, 237.0], [36.4, 238.0], [36.5, 238.0], [36.6, 239.0], [36.7, 240.0], [36.8, 241.0], [36.9, 242.0], [37.0, 243.0], [37.1, 244.0], [37.2, 245.0], [37.3, 246.0], [37.4, 247.0], [37.5, 247.0], [37.6, 249.0], [37.7, 250.0], [37.8, 250.0], [37.9, 251.0], [38.0, 252.0], [38.1, 253.0], [38.2, 254.0], [38.3, 255.0], [38.4, 256.0], [38.5, 257.0], [38.6, 258.0], [38.7, 259.0], [38.8, 260.0], [38.9, 261.0], [39.0, 261.0], [39.1, 263.0], [39.2, 263.0], [39.3, 264.0], [39.4, 265.0], [39.5, 266.0], [39.6, 266.0], [39.7, 268.0], [39.8, 268.0], [39.9, 270.0], [40.0, 270.0], [40.1, 271.0], [40.2, 272.0], [40.3, 273.0], [40.4, 274.0], [40.5, 275.0], [40.6, 275.0], [40.7, 276.0], [40.8, 277.0], [40.9, 277.0], [41.0, 278.0], [41.1, 279.0], [41.2, 280.0], [41.3, 281.0], [41.4, 282.0], [41.5, 283.0], [41.6, 284.0], [41.7, 285.0], [41.8, 285.0], [41.9, 286.0], [42.0, 287.0], [42.1, 287.0], [42.2, 289.0], [42.3, 289.0], [42.4, 290.0], [42.5, 290.0], [42.6, 292.0], [42.7, 292.0], [42.8, 293.0], [42.9, 294.0], [43.0, 295.0], [43.1, 295.0], [43.2, 297.0], [43.3, 298.0], [43.4, 298.0], [43.5, 299.0], [43.6, 300.0], [43.7, 300.0], [43.8, 301.0], [43.9, 302.0], [44.0, 302.0], [44.1, 303.0], [44.2, 304.0], [44.3, 305.0], [44.4, 305.0], [44.5, 306.0], [44.6, 307.0], [44.7, 308.0], [44.8, 309.0], [44.9, 310.0], [45.0, 310.0], [45.1, 311.0], [45.2, 311.0], [45.3, 312.0], [45.4, 312.0], [45.5, 313.0], [45.6, 313.0], [45.7, 314.0], [45.8, 314.0], [45.9, 315.0], [46.0, 315.0], [46.1, 316.0], [46.2, 317.0], [46.3, 317.0], [46.4, 318.0], [46.5, 319.0], [46.6, 320.0], [46.7, 320.0], [46.8, 321.0], [46.9, 322.0], [47.0, 322.0], [47.1, 323.0], [47.2, 324.0], [47.3, 324.0], [47.4, 324.0], [47.5, 325.0], [47.6, 326.0], [47.7, 327.0], [47.8, 327.0], [47.9, 328.0], [48.0, 329.0], [48.1, 329.0], [48.2, 330.0], [48.3, 330.0], [48.4, 331.0], [48.5, 331.0], [48.6, 332.0], [48.7, 333.0], [48.8, 334.0], [48.9, 335.0], [49.0, 335.0], [49.1, 336.0], [49.2, 337.0], [49.3, 337.0], [49.4, 338.0], [49.5, 339.0], [49.6, 339.0], [49.7, 340.0], [49.8, 341.0], [49.9, 342.0], [50.0, 343.0], [50.1, 343.0], [50.2, 344.0], [50.3, 345.0], [50.4, 346.0], [50.5, 346.0], [50.6, 347.0], [50.7, 347.0], [50.8, 347.0], [50.9, 348.0], [51.0, 348.0], [51.1, 348.0], [51.2, 349.0], [51.3, 350.0], [51.4, 351.0], [51.5, 351.0], [51.6, 352.0], [51.7, 353.0], [51.8, 353.0], [51.9, 354.0], [52.0, 355.0], [52.1, 355.0], [52.2, 356.0], [52.3, 357.0], [52.4, 358.0], [52.5, 359.0], [52.6, 360.0], [52.7, 360.0], [52.8, 361.0], [52.9, 361.0], [53.0, 362.0], [53.1, 363.0], [53.2, 364.0], [53.3, 364.0], [53.4, 365.0], [53.5, 365.0], [53.6, 366.0], [53.7, 367.0], [53.8, 367.0], [53.9, 368.0], [54.0, 370.0], [54.1, 370.0], [54.2, 371.0], [54.3, 372.0], [54.4, 373.0], [54.5, 374.0], [54.6, 376.0], [54.7, 376.0], [54.8, 377.0], [54.9, 378.0], [55.0, 379.0], [55.1, 380.0], [55.2, 380.0], [55.3, 381.0], [55.4, 383.0], [55.5, 383.0], [55.6, 384.0], [55.7, 385.0], [55.8, 387.0], [55.9, 388.0], [56.0, 389.0], [56.1, 390.0], [56.2, 391.0], [56.3, 392.0], [56.4, 393.0], [56.5, 394.0], [56.6, 395.0], [56.7, 396.0], [56.8, 397.0], [56.9, 398.0], [57.0, 399.0], [57.1, 400.0], [57.2, 402.0], [57.3, 403.0], [57.4, 404.0], [57.5, 405.0], [57.6, 405.0], [57.7, 406.0], [57.8, 407.0], [57.9, 408.0], [58.0, 409.0], [58.1, 410.0], [58.2, 411.0], [58.3, 413.0], [58.4, 413.0], [58.5, 415.0], [58.6, 416.0], [58.7, 418.0], [58.8, 419.0], [58.9, 420.0], [59.0, 421.0], [59.1, 422.0], [59.2, 423.0], [59.3, 424.0], [59.4, 426.0], [59.5, 427.0], [59.6, 428.0], [59.7, 429.0], [59.8, 430.0], [59.9, 432.0], [60.0, 433.0], [60.1, 434.0], [60.2, 435.0], [60.3, 436.0], [60.4, 437.0], [60.5, 439.0], [60.6, 440.0], [60.7, 441.0], [60.8, 441.0], [60.9, 443.0], [61.0, 443.0], [61.1, 444.0], [61.2, 445.0], [61.3, 446.0], [61.4, 447.0], [61.5, 448.0], [61.6, 449.0], [61.7, 450.0], [61.8, 452.0], [61.9, 453.0], [62.0, 454.0], [62.1, 455.0], [62.2, 456.0], [62.3, 458.0], [62.4, 459.0], [62.5, 461.0], [62.6, 462.0], [62.7, 462.0], [62.8, 464.0], [62.9, 465.0], [63.0, 466.0], [63.1, 468.0], [63.2, 469.0], [63.3, 470.0], [63.4, 471.0], [63.5, 472.0], [63.6, 473.0], [63.7, 474.0], [63.8, 475.0], [63.9, 477.0], [64.0, 479.0], [64.1, 480.0], [64.2, 482.0], [64.3, 484.0], [64.4, 486.0], [64.5, 487.0], [64.6, 489.0], [64.7, 491.0], [64.8, 493.0], [64.9, 494.0], [65.0, 496.0], [65.1, 498.0], [65.2, 498.0], [65.3, 500.0], [65.4, 502.0], [65.5, 504.0], [65.6, 506.0], [65.7, 506.0], [65.8, 508.0], [65.9, 510.0], [66.0, 511.0], [66.1, 513.0], [66.2, 514.0], [66.3, 515.0], [66.4, 518.0], [66.5, 519.0], [66.6, 520.0], [66.7, 521.0], [66.8, 522.0], [66.9, 524.0], [67.0, 526.0], [67.1, 527.0], [67.2, 528.0], [67.3, 529.0], [67.4, 530.0], [67.5, 531.0], [67.6, 532.0], [67.7, 533.0], [67.8, 534.0], [67.9, 535.0], [68.0, 536.0], [68.1, 538.0], [68.2, 539.0], [68.3, 540.0], [68.4, 541.0], [68.5, 542.0], [68.6, 544.0], [68.7, 544.0], [68.8, 545.0], [68.9, 547.0], [69.0, 548.0], [69.1, 549.0], [69.2, 550.0], [69.3, 552.0], [69.4, 553.0], [69.5, 555.0], [69.6, 557.0], [69.7, 558.0], [69.8, 560.0], [69.9, 561.0], [70.0, 562.0], [70.1, 564.0], [70.2, 565.0], [70.3, 566.0], [70.4, 568.0], [70.5, 569.0], [70.6, 570.0], [70.7, 571.0], [70.8, 572.0], [70.9, 573.0], [71.0, 574.0], [71.1, 576.0], [71.2, 576.0], [71.3, 578.0], [71.4, 579.0], [71.5, 580.0], [71.6, 581.0], [71.7, 582.0], [71.8, 583.0], [71.9, 583.0], [72.0, 585.0], [72.1, 587.0], [72.2, 588.0], [72.3, 590.0], [72.4, 591.0], [72.5, 593.0], [72.6, 594.0], [72.7, 595.0], [72.8, 596.0], [72.9, 597.0], [73.0, 599.0], [73.1, 600.0], [73.2, 601.0], [73.3, 602.0], [73.4, 604.0], [73.5, 606.0], [73.6, 607.0], [73.7, 608.0], [73.8, 610.0], [73.9, 612.0], [74.0, 613.0], [74.1, 614.0], [74.2, 616.0], [74.3, 618.0], [74.4, 619.0], [74.5, 619.0], [74.6, 621.0], [74.7, 625.0], [74.8, 625.0], [74.9, 627.0], [75.0, 628.0], [75.1, 629.0], [75.2, 632.0], [75.3, 633.0], [75.4, 635.0], [75.5, 636.0], [75.6, 637.0], [75.7, 640.0], [75.8, 642.0], [75.9, 645.0], [76.0, 647.0], [76.1, 648.0], [76.2, 650.0], [76.3, 653.0], [76.4, 654.0], [76.5, 656.0], [76.6, 661.0], [76.7, 662.0], [76.8, 664.0], [76.9, 667.0], [77.0, 669.0], [77.1, 672.0], [77.2, 675.0], [77.3, 680.0], [77.4, 682.0], [77.5, 685.0], [77.6, 687.0], [77.7, 690.0], [77.8, 693.0], [77.9, 698.0], [78.0, 701.0], [78.1, 705.0], [78.2, 707.0], [78.3, 709.0], [78.4, 715.0], [78.5, 718.0], [78.6, 724.0], [78.7, 727.0], [78.8, 731.0], [78.9, 733.0], [79.0, 736.0], [79.1, 741.0], [79.2, 745.0], [79.3, 747.0], [79.4, 749.0], [79.5, 752.0], [79.6, 756.0], [79.7, 759.0], [79.8, 761.0], [79.9, 765.0], [80.0, 770.0], [80.1, 773.0], [80.2, 777.0], [80.3, 783.0], [80.4, 786.0], [80.5, 790.0], [80.6, 796.0], [80.7, 800.0], [80.8, 803.0], [80.9, 806.0], [81.0, 812.0], [81.1, 814.0], [81.2, 826.0], [81.3, 832.0], [81.4, 836.0], [81.5, 842.0], [81.6, 848.0], [81.7, 853.0], [81.8, 859.0], [81.9, 864.0], [82.0, 871.0], [82.1, 875.0], [82.2, 882.0], [82.3, 887.0], [82.4, 891.0], [82.5, 898.0], [82.6, 907.0], [82.7, 913.0], [82.8, 923.0], [82.9, 932.0], [83.0, 938.0], [83.1, 946.0], [83.2, 951.0], [83.3, 955.0], [83.4, 961.0], [83.5, 966.0], [83.6, 969.0], [83.7, 973.0], [83.8, 978.0], [83.9, 982.0], [84.0, 987.0], [84.1, 989.0], [84.2, 994.0], [84.3, 1000.0], [84.4, 1006.0], [84.5, 1012.0], [84.6, 1019.0], [84.7, 1025.0], [84.8, 1034.0], [84.9, 1043.0], [85.0, 1047.0], [85.1, 1049.0], [85.2, 1057.0], [85.3, 1061.0], [85.4, 1066.0], [85.5, 1069.0], [85.6, 1074.0], [85.7, 1076.0], [85.8, 1079.0], [85.9, 1083.0], [86.0, 1086.0], [86.1, 1089.0], [86.2, 1093.0], [86.3, 1096.0], [86.4, 1099.0], [86.5, 1102.0], [86.6, 1106.0], [86.7, 1110.0], [86.8, 1116.0], [86.9, 1118.0], [87.0, 1122.0], [87.1, 1128.0], [87.2, 1132.0], [87.3, 1136.0], [87.4, 1141.0], [87.5, 1145.0], [87.6, 1149.0], [87.7, 1152.0], [87.8, 1158.0], [87.9, 1163.0], [88.0, 1164.0], [88.1, 1168.0], [88.2, 1170.0], [88.3, 1175.0], [88.4, 1179.0], [88.5, 1183.0], [88.6, 1188.0], [88.7, 1195.0], [88.8, 1201.0], [88.9, 1204.0], [89.0, 1214.0], [89.1, 1220.0], [89.2, 1231.0], [89.3, 1235.0], [89.4, 1239.0], [89.5, 1244.0], [89.6, 1251.0], [89.7, 1256.0], [89.8, 1260.0], [89.9, 1265.0], [90.0, 1272.0], [90.1, 1277.0], [90.2, 1285.0], [90.3, 1290.0], [90.4, 1297.0], [90.5, 1306.0], [90.6, 1314.0], [90.7, 1319.0], [90.8, 1328.0], [90.9, 1336.0], [91.0, 1339.0], [91.1, 1348.0], [91.2, 1355.0], [91.3, 1360.0], [91.4, 1365.0], [91.5, 1370.0], [91.6, 1376.0], [91.7, 1379.0], [91.8, 1385.0], [91.9, 1393.0], [92.0, 1399.0], [92.1, 1405.0], [92.2, 1412.0], [92.3, 1417.0], [92.4, 1422.0], [92.5, 1429.0], [92.6, 1433.0], [92.7, 1441.0], [92.8, 1446.0], [92.9, 1456.0], [93.0, 1471.0], [93.1, 1475.0], [93.2, 1481.0], [93.3, 1486.0], [93.4, 1493.0], [93.5, 1498.0], [93.6, 1506.0], [93.7, 1513.0], [93.8, 1521.0], [93.9, 1528.0], [94.0, 1535.0], [94.1, 1539.0], [94.2, 1543.0], [94.3, 1547.0], [94.4, 1552.0], [94.5, 1559.0], [94.6, 1566.0], [94.7, 1571.0], [94.8, 1588.0], [94.9, 1595.0], [95.0, 1599.0], [95.1, 1605.0], [95.2, 1618.0], [95.3, 1637.0], [95.4, 1661.0], [95.5, 1685.0], [95.6, 1699.0], [95.7, 1715.0], [95.8, 1736.0], [95.9, 1756.0], [96.0, 1771.0], [96.1, 1784.0], [96.2, 1794.0], [96.3, 1806.0], [96.4, 1819.0], [96.5, 1831.0], [96.6, 1843.0], [96.7, 1855.0], [96.8, 1876.0], [96.9, 1894.0], [97.0, 1918.0], [97.1, 1938.0], [97.2, 1965.0], [97.3, 1986.0], [97.4, 2011.0], [97.5, 2036.0], [97.6, 2055.0], [97.7, 2074.0], [97.8, 2106.0], [97.9, 2142.0], [98.0, 2183.0], [98.1, 2208.0], [98.2, 2244.0], [98.3, 2267.0], [98.4, 2306.0], [98.5, 2352.0], [98.6, 2419.0], [98.7, 2477.0], [98.8, 2588.0], [98.9, 2643.0], [99.0, 2750.0], [99.1, 2856.0], [99.2, 2894.0], [99.3, 2921.0], [99.4, 3067.0], [99.5, 3313.0], [99.6, 3369.0], [99.7, 5816.0], [99.8, 7394.0], [99.9, 7602.0], [100.0, 14349.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 2.0], [84.1, 2.0], [84.2, 2.0], [84.3, 2.0], [84.4, 2.0], [84.5, 2.0], [84.6, 2.0], [84.7, 2.0], [84.8, 2.0], [84.9, 2.0], [85.0, 2.0], [85.1, 2.0], [85.2, 2.0], [85.3, 2.0], [85.4, 2.0], [85.5, 2.0], [85.6, 2.0], [85.7, 2.0], [85.8, 2.0], [85.9, 2.0], [86.0, 3.0], [86.1, 3.0], [86.2, 3.0], [86.3, 3.0], [86.4, 3.0], [86.5, 3.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 4.0], [87.1, 4.0], [87.2, 4.0], [87.3, 4.0], [87.4, 4.0], [87.5, 4.0], [87.6, 4.0], [87.7, 4.0], [87.8, 4.0], [87.9, 4.0], [88.0, 4.0], [88.1, 4.0], [88.2, 4.0], [88.3, 4.0], [88.4, 4.0], [88.5, 4.0], [88.6, 4.0], [88.7, 4.0], [88.8, 4.0], [88.9, 4.0], [89.0, 4.0], [89.1, 4.0], [89.2, 4.0], [89.3, 4.0], [89.4, 4.0], [89.5, 4.0], [89.6, 4.0], [89.7, 4.0], [89.8, 4.0], [89.9, 4.0], [90.0, 5.0], [90.1, 5.0], [90.2, 5.0], [90.3, 5.0], [90.4, 5.0], [90.5, 5.0], [90.6, 5.0], [90.7, 5.0], [90.8, 5.0], [90.9, 5.0], [91.0, 6.0], [91.1, 6.0], [91.2, 6.0], [91.3, 6.0], [91.4, 6.0], [91.5, 6.0], [91.6, 6.0], [91.7, 6.0], [91.8, 6.0], [91.9, 6.0], [92.0, 78.0], [92.1, 78.0], [92.2, 78.0], [92.3, 78.0], [92.4, 78.0], [92.5, 78.0], [92.6, 78.0], [92.7, 78.0], [92.8, 78.0], [92.9, 78.0], [93.0, 92.0], [93.1, 92.0], [93.2, 92.0], [93.3, 92.0], [93.4, 92.0], [93.5, 92.0], [93.6, 92.0], [93.7, 92.0], [93.8, 92.0], [93.9, 92.0], [94.0, 224.0], [94.1, 224.0], [94.2, 224.0], [94.3, 224.0], [94.4, 224.0], [94.5, 224.0], [94.6, 224.0], [94.7, 224.0], [94.8, 224.0], [94.9, 224.0], [95.0, 374.0], [95.1, 374.0], [95.2, 374.0], [95.3, 374.0], [95.4, 374.0], [95.5, 374.0], [95.6, 374.0], [95.7, 374.0], [95.8, 374.0], [95.9, 374.0], [96.0, 505.0], [96.1, 505.0], [96.2, 505.0], [96.3, 505.0], [96.4, 505.0], [96.5, 505.0], [96.6, 505.0], [96.7, 505.0], [96.8, 505.0], [96.9, 505.0], [97.0, 663.0], [97.1, 663.0], [97.2, 663.0], [97.3, 663.0], [97.4, 663.0], [97.5, 663.0], [97.6, 663.0], [97.7, 663.0], [97.8, 663.0], [97.9, 663.0], [98.0, 825.0], [98.1, 825.0], [98.2, 825.0], [98.3, 825.0], [98.4, 825.0], [98.5, 825.0], [98.6, 825.0], [98.7, 825.0], [98.8, 825.0], [98.9, 825.0], [99.0, 961.0], [99.1, 961.0], [99.2, 961.0], [99.3, 961.0], [99.4, 961.0], [99.5, 961.0], [99.6, 961.0], [99.7, 961.0], [99.8, 961.0], [99.9, 961.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 3.0], [80.1, 3.0], [80.2, 3.0], [80.3, 3.0], [80.4, 3.0], [80.5, 3.0], [80.6, 3.0], [80.7, 3.0], [80.8, 3.0], [80.9, 3.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 3.0], [82.1, 3.0], [82.2, 3.0], [82.3, 3.0], [82.4, 3.0], [82.5, 3.0], [82.6, 3.0], [82.7, 3.0], [82.8, 3.0], [82.9, 3.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 5.0], [85.1, 5.0], [85.2, 5.0], [85.3, 5.0], [85.4, 5.0], [85.5, 5.0], [85.6, 5.0], [85.7, 5.0], [85.8, 5.0], [85.9, 5.0], [86.0, 5.0], [86.1, 5.0], [86.2, 5.0], [86.3, 5.0], [86.4, 5.0], [86.5, 5.0], [86.6, 5.0], [86.7, 5.0], [86.8, 5.0], [86.9, 5.0], [87.0, 6.0], [87.1, 6.0], [87.2, 6.0], [87.3, 6.0], [87.4, 6.0], [87.5, 6.0], [87.6, 6.0], [87.7, 6.0], [87.8, 6.0], [87.9, 6.0], [88.0, 6.0], [88.1, 6.0], [88.2, 6.0], [88.3, 6.0], [88.4, 6.0], [88.5, 6.0], [88.6, 6.0], [88.7, 6.0], [88.8, 6.0], [88.9, 6.0], [89.0, 7.0], [89.1, 7.0], [89.2, 7.0], [89.3, 7.0], [89.4, 7.0], [89.5, 7.0], [89.6, 7.0], [89.7, 7.0], [89.8, 7.0], [89.9, 7.0], [90.0, 8.0], [90.1, 8.0], [90.2, 8.0], [90.3, 8.0], [90.4, 8.0], [90.5, 8.0], [90.6, 8.0], [90.7, 8.0], [90.8, 8.0], [90.9, 8.0], [91.0, 55.0], [91.1, 55.0], [91.2, 55.0], [91.3, 55.0], [91.4, 55.0], [91.5, 55.0], [91.6, 55.0], [91.7, 55.0], [91.8, 55.0], [91.9, 55.0], [92.0, 105.0], [92.1, 105.0], [92.2, 105.0], [92.3, 105.0], [92.4, 105.0], [92.5, 105.0], [92.6, 105.0], [92.7, 105.0], [92.8, 105.0], [92.9, 105.0], [93.0, 261.0], [93.1, 261.0], [93.2, 261.0], [93.3, 261.0], [93.4, 261.0], [93.5, 261.0], [93.6, 261.0], [93.7, 261.0], [93.8, 261.0], [93.9, 261.0], [94.0, 268.0], [94.1, 268.0], [94.2, 268.0], [94.3, 268.0], [94.4, 268.0], [94.5, 268.0], [94.6, 268.0], [94.7, 268.0], [94.8, 268.0], [94.9, 268.0], [95.0, 270.0], [95.1, 270.0], [95.2, 270.0], [95.3, 270.0], [95.4, 270.0], [95.5, 270.0], [95.6, 270.0], [95.7, 270.0], [95.8, 270.0], [95.9, 270.0], [96.0, 275.0], [96.1, 275.0], [96.2, 275.0], [96.3, 275.0], [96.4, 275.0], [96.5, 275.0], [96.6, 275.0], [96.7, 275.0], [96.8, 275.0], [96.9, 275.0], [97.0, 276.0], [97.1, 276.0], [97.2, 276.0], [97.3, 276.0], [97.4, 276.0], [97.5, 276.0], [97.6, 276.0], [97.7, 276.0], [97.8, 276.0], [97.9, 276.0], [98.0, 284.0], [98.1, 284.0], [98.2, 284.0], [98.3, 284.0], [98.4, 284.0], [98.5, 284.0], [98.6, 284.0], [98.7, 284.0], [98.8, 284.0], [98.9, 284.0], [99.0, 287.0], [99.1, 287.0], [99.2, 287.0], [99.3, 287.0], [99.4, 287.0], [99.5, 287.0], [99.6, 287.0], [99.7, 287.0], [99.8, 287.0], [99.9, 287.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 23.0], [0.1, 27.0], [0.2, 28.0], [0.3, 29.0], [0.4, 29.0], [0.5, 30.0], [0.6, 30.0], [0.7, 30.0], [0.8, 30.0], [0.9, 31.0], [1.0, 31.0], [1.1, 32.0], [1.2, 32.0], [1.3, 32.0], [1.4, 32.0], [1.5, 32.0], [1.6, 33.0], [1.7, 33.0], [1.8, 33.0], [1.9, 34.0], [2.0, 34.0], [2.1, 34.0], [2.2, 34.0], [2.3, 34.0], [2.4, 35.0], [2.5, 35.0], [2.6, 35.0], [2.7, 35.0], [2.8, 36.0], [2.9, 36.0], [3.0, 36.0], [3.1, 36.0], [3.2, 36.0], [3.3, 37.0], [3.4, 37.0], [3.5, 37.0], [3.6, 37.0], [3.7, 37.0], [3.8, 38.0], [3.9, 38.0], [4.0, 38.0], [4.1, 38.0], [4.2, 39.0], [4.3, 39.0], [4.4, 39.0], [4.5, 39.0], [4.6, 40.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 41.0], [5.1, 41.0], [5.2, 42.0], [5.3, 42.0], [5.4, 43.0], [5.5, 43.0], [5.6, 43.0], [5.7, 43.0], [5.8, 44.0], [5.9, 44.0], [6.0, 44.0], [6.1, 45.0], [6.2, 45.0], [6.3, 45.0], [6.4, 46.0], [6.5, 46.0], [6.6, 47.0], [6.7, 47.0], [6.8, 48.0], [6.9, 48.0], [7.0, 49.0], [7.1, 49.0], [7.2, 50.0], [7.3, 50.0], [7.4, 50.0], [7.5, 51.0], [7.6, 52.0], [7.7, 52.0], [7.8, 52.0], [7.9, 53.0], [8.0, 53.0], [8.1, 54.0], [8.2, 54.0], [8.3, 55.0], [8.4, 55.0], [8.5, 55.0], [8.6, 56.0], [8.7, 56.0], [8.8, 57.0], [8.9, 57.0], [9.0, 58.0], [9.1, 58.0], [9.2, 58.0], [9.3, 59.0], [9.4, 59.0], [9.5, 60.0], [9.6, 60.0], [9.7, 60.0], [9.8, 60.0], [9.9, 60.0], [10.0, 61.0], [10.1, 61.0], [10.2, 61.0], [10.3, 61.0], [10.4, 62.0], [10.5, 62.0], [10.6, 62.0], [10.7, 62.0], [10.8, 63.0], [10.9, 63.0], [11.0, 63.0], [11.1, 63.0], [11.2, 64.0], [11.3, 65.0], [11.4, 65.0], [11.5, 66.0], [11.6, 66.0], [11.7, 67.0], [11.8, 67.0], [11.9, 67.0], [12.0, 68.0], [12.1, 68.0], [12.2, 69.0], [12.3, 69.0], [12.4, 70.0], [12.5, 71.0], [12.6, 71.0], [12.7, 72.0], [12.8, 72.0], [12.9, 72.0], [13.0, 73.0], [13.1, 74.0], [13.2, 74.0], [13.3, 74.0], [13.4, 75.0], [13.5, 75.0], [13.6, 75.0], [13.7, 76.0], [13.8, 76.0], [13.9, 77.0], [14.0, 77.0], [14.1, 77.0], [14.2, 78.0], [14.3, 78.0], [14.4, 78.0], [14.5, 79.0], [14.6, 80.0], [14.7, 80.0], [14.8, 80.0], [14.9, 81.0], [15.0, 81.0], [15.1, 82.0], [15.2, 82.0], [15.3, 83.0], [15.4, 83.0], [15.5, 84.0], [15.6, 84.0], [15.7, 84.0], [15.8, 85.0], [15.9, 85.0], [16.0, 85.0], [16.1, 86.0], [16.2, 87.0], [16.3, 87.0], [16.4, 89.0], [16.5, 89.0], [16.6, 90.0], [16.7, 91.0], [16.8, 91.0], [16.9, 91.0], [17.0, 91.0], [17.1, 93.0], [17.2, 93.0], [17.3, 94.0], [17.4, 94.0], [17.5, 95.0], [17.6, 96.0], [17.7, 96.0], [17.8, 97.0], [17.9, 98.0], [18.0, 99.0], [18.1, 100.0], [18.2, 101.0], [18.3, 102.0], [18.4, 102.0], [18.5, 103.0], [18.6, 103.0], [18.7, 104.0], [18.8, 104.0], [18.9, 105.0], [19.0, 105.0], [19.1, 106.0], [19.2, 107.0], [19.3, 107.0], [19.4, 108.0], [19.5, 108.0], [19.6, 109.0], [19.7, 110.0], [19.8, 110.0], [19.9, 111.0], [20.0, 111.0], [20.1, 112.0], [20.2, 113.0], [20.3, 114.0], [20.4, 114.0], [20.5, 116.0], [20.6, 116.0], [20.7, 117.0], [20.8, 118.0], [20.9, 119.0], [21.0, 120.0], [21.1, 121.0], [21.2, 122.0], [21.3, 122.0], [21.4, 122.0], [21.5, 122.0], [21.6, 123.0], [21.7, 124.0], [21.8, 125.0], [21.9, 126.0], [22.0, 127.0], [22.1, 127.0], [22.2, 128.0], [22.3, 128.0], [22.4, 129.0], [22.5, 129.0], [22.6, 130.0], [22.7, 131.0], [22.8, 132.0], [22.9, 132.0], [23.0, 133.0], [23.1, 133.0], [23.2, 134.0], [23.3, 135.0], [23.4, 135.0], [23.5, 136.0], [23.6, 137.0], [23.7, 138.0], [23.8, 138.0], [23.9, 139.0], [24.0, 139.0], [24.1, 140.0], [24.2, 140.0], [24.3, 140.0], [24.4, 141.0], [24.5, 143.0], [24.6, 143.0], [24.7, 144.0], [24.8, 144.0], [24.9, 145.0], [25.0, 146.0], [25.1, 148.0], [25.2, 149.0], [25.3, 149.0], [25.4, 150.0], [25.5, 151.0], [25.6, 151.0], [25.7, 153.0], [25.8, 154.0], [25.9, 154.0], [26.0, 155.0], [26.1, 155.0], [26.2, 156.0], [26.3, 157.0], [26.4, 157.0], [26.5, 158.0], [26.6, 158.0], [26.7, 159.0], [26.8, 159.0], [26.9, 160.0], [27.0, 161.0], [27.1, 162.0], [27.2, 162.0], [27.3, 163.0], [27.4, 163.0], [27.5, 164.0], [27.6, 164.0], [27.7, 166.0], [27.8, 166.0], [27.9, 167.0], [28.0, 167.0], [28.1, 168.0], [28.2, 169.0], [28.3, 170.0], [28.4, 171.0], [28.5, 172.0], [28.6, 173.0], [28.7, 174.0], [28.8, 175.0], [28.9, 176.0], [29.0, 177.0], [29.1, 178.0], [29.2, 178.0], [29.3, 179.0], [29.4, 179.0], [29.5, 180.0], [29.6, 181.0], [29.7, 182.0], [29.8, 182.0], [29.9, 183.0], [30.0, 183.0], [30.1, 184.0], [30.2, 185.0], [30.3, 186.0], [30.4, 188.0], [30.5, 188.0], [30.6, 189.0], [30.7, 190.0], [30.8, 191.0], [30.9, 191.0], [31.0, 192.0], [31.1, 193.0], [31.2, 194.0], [31.3, 195.0], [31.4, 195.0], [31.5, 196.0], [31.6, 197.0], [31.7, 198.0], [31.8, 199.0], [31.9, 200.0], [32.0, 201.0], [32.1, 202.0], [32.2, 202.0], [32.3, 203.0], [32.4, 204.0], [32.5, 204.0], [32.6, 205.0], [32.7, 205.0], [32.8, 207.0], [32.9, 207.0], [33.0, 208.0], [33.1, 209.0], [33.2, 209.0], [33.3, 210.0], [33.4, 211.0], [33.5, 212.0], [33.6, 213.0], [33.7, 213.0], [33.8, 214.0], [33.9, 215.0], [34.0, 215.0], [34.1, 217.0], [34.2, 217.0], [34.3, 219.0], [34.4, 219.0], [34.5, 220.0], [34.6, 222.0], [34.7, 223.0], [34.8, 223.0], [34.9, 224.0], [35.0, 224.0], [35.1, 225.0], [35.2, 226.0], [35.3, 227.0], [35.4, 227.0], [35.5, 228.0], [35.6, 229.0], [35.7, 230.0], [35.8, 230.0], [35.9, 232.0], [36.0, 232.0], [36.1, 233.0], [36.2, 233.0], [36.3, 234.0], [36.4, 235.0], [36.5, 236.0], [36.6, 237.0], [36.7, 238.0], [36.8, 238.0], [36.9, 239.0], [37.0, 240.0], [37.1, 242.0], [37.2, 243.0], [37.3, 244.0], [37.4, 245.0], [37.5, 246.0], [37.6, 247.0], [37.7, 248.0], [37.8, 248.0], [37.9, 250.0], [38.0, 251.0], [38.1, 252.0], [38.2, 252.0], [38.3, 253.0], [38.4, 253.0], [38.5, 254.0], [38.6, 255.0], [38.7, 257.0], [38.8, 258.0], [38.9, 258.0], [39.0, 259.0], [39.1, 260.0], [39.2, 262.0], [39.3, 262.0], [39.4, 263.0], [39.5, 264.0], [39.6, 265.0], [39.7, 266.0], [39.8, 267.0], [39.9, 268.0], [40.0, 270.0], [40.1, 270.0], [40.2, 272.0], [40.3, 273.0], [40.4, 274.0], [40.5, 275.0], [40.6, 276.0], [40.7, 278.0], [40.8, 279.0], [40.9, 279.0], [41.0, 280.0], [41.1, 281.0], [41.2, 282.0], [41.3, 283.0], [41.4, 285.0], [41.5, 286.0], [41.6, 286.0], [41.7, 288.0], [41.8, 289.0], [41.9, 290.0], [42.0, 290.0], [42.1, 291.0], [42.2, 292.0], [42.3, 294.0], [42.4, 294.0], [42.5, 295.0], [42.6, 296.0], [42.7, 297.0], [42.8, 298.0], [42.9, 299.0], [43.0, 300.0], [43.1, 301.0], [43.2, 301.0], [43.3, 302.0], [43.4, 303.0], [43.5, 303.0], [43.6, 304.0], [43.7, 306.0], [43.8, 307.0], [43.9, 308.0], [44.0, 308.0], [44.1, 310.0], [44.2, 310.0], [44.3, 311.0], [44.4, 311.0], [44.5, 313.0], [44.6, 314.0], [44.7, 315.0], [44.8, 315.0], [44.9, 316.0], [45.0, 317.0], [45.1, 317.0], [45.2, 319.0], [45.3, 321.0], [45.4, 321.0], [45.5, 322.0], [45.6, 324.0], [45.7, 325.0], [45.8, 327.0], [45.9, 329.0], [46.0, 330.0], [46.1, 330.0], [46.2, 331.0], [46.3, 332.0], [46.4, 333.0], [46.5, 334.0], [46.6, 335.0], [46.7, 336.0], [46.8, 336.0], [46.9, 338.0], [47.0, 340.0], [47.1, 341.0], [47.2, 343.0], [47.3, 345.0], [47.4, 346.0], [47.5, 346.0], [47.6, 347.0], [47.7, 348.0], [47.8, 349.0], [47.9, 350.0], [48.0, 351.0], [48.1, 352.0], [48.2, 353.0], [48.3, 353.0], [48.4, 355.0], [48.5, 355.0], [48.6, 357.0], [48.7, 359.0], [48.8, 360.0], [48.9, 360.0], [49.0, 361.0], [49.1, 363.0], [49.2, 365.0], [49.3, 366.0], [49.4, 368.0], [49.5, 370.0], [49.6, 371.0], [49.7, 372.0], [49.8, 372.0], [49.9, 373.0], [50.0, 375.0], [50.1, 376.0], [50.2, 377.0], [50.3, 378.0], [50.4, 380.0], [50.5, 381.0], [50.6, 382.0], [50.7, 383.0], [50.8, 384.0], [50.9, 386.0], [51.0, 386.0], [51.1, 387.0], [51.2, 388.0], [51.3, 388.0], [51.4, 389.0], [51.5, 390.0], [51.6, 391.0], [51.7, 391.0], [51.8, 393.0], [51.9, 393.0], [52.0, 395.0], [52.1, 396.0], [52.2, 397.0], [52.3, 398.0], [52.4, 399.0], [52.5, 401.0], [52.6, 402.0], [52.7, 403.0], [52.8, 406.0], [52.9, 407.0], [53.0, 407.0], [53.1, 408.0], [53.2, 409.0], [53.3, 409.0], [53.4, 411.0], [53.5, 413.0], [53.6, 414.0], [53.7, 415.0], [53.8, 417.0], [53.9, 417.0], [54.0, 418.0], [54.1, 420.0], [54.2, 421.0], [54.3, 423.0], [54.4, 424.0], [54.5, 425.0], [54.6, 426.0], [54.7, 427.0], [54.8, 428.0], [54.9, 429.0], [55.0, 431.0], [55.1, 434.0], [55.2, 435.0], [55.3, 436.0], [55.4, 437.0], [55.5, 438.0], [55.6, 439.0], [55.7, 440.0], [55.8, 441.0], [55.9, 441.0], [56.0, 444.0], [56.1, 446.0], [56.2, 448.0], [56.3, 450.0], [56.4, 451.0], [56.5, 452.0], [56.6, 453.0], [56.7, 454.0], [56.8, 457.0], [56.9, 458.0], [57.0, 459.0], [57.1, 460.0], [57.2, 461.0], [57.3, 462.0], [57.4, 464.0], [57.5, 465.0], [57.6, 466.0], [57.7, 467.0], [57.8, 467.0], [57.9, 469.0], [58.0, 470.0], [58.1, 471.0], [58.2, 473.0], [58.3, 474.0], [58.4, 475.0], [58.5, 477.0], [58.6, 477.0], [58.7, 479.0], [58.8, 480.0], [58.9, 481.0], [59.0, 484.0], [59.1, 485.0], [59.2, 487.0], [59.3, 488.0], [59.4, 489.0], [59.5, 490.0], [59.6, 492.0], [59.7, 493.0], [59.8, 494.0], [59.9, 495.0], [60.0, 496.0], [60.1, 500.0], [60.2, 501.0], [60.3, 502.0], [60.4, 503.0], [60.5, 504.0], [60.6, 505.0], [60.7, 507.0], [60.8, 508.0], [60.9, 509.0], [61.0, 510.0], [61.1, 512.0], [61.2, 514.0], [61.3, 516.0], [61.4, 518.0], [61.5, 518.0], [61.6, 519.0], [61.7, 520.0], [61.8, 521.0], [61.9, 523.0], [62.0, 525.0], [62.1, 527.0], [62.2, 528.0], [62.3, 529.0], [62.4, 529.0], [62.5, 530.0], [62.6, 532.0], [62.7, 534.0], [62.8, 535.0], [62.9, 537.0], [63.0, 537.0], [63.1, 538.0], [63.2, 539.0], [63.3, 541.0], [63.4, 542.0], [63.5, 544.0], [63.6, 546.0], [63.7, 548.0], [63.8, 552.0], [63.9, 553.0], [64.0, 554.0], [64.1, 555.0], [64.2, 556.0], [64.3, 559.0], [64.4, 561.0], [64.5, 561.0], [64.6, 564.0], [64.7, 566.0], [64.8, 567.0], [64.9, 569.0], [65.0, 572.0], [65.1, 573.0], [65.2, 574.0], [65.3, 575.0], [65.4, 577.0], [65.5, 577.0], [65.6, 578.0], [65.7, 581.0], [65.8, 581.0], [65.9, 583.0], [66.0, 584.0], [66.1, 585.0], [66.2, 588.0], [66.3, 588.0], [66.4, 589.0], [66.5, 590.0], [66.6, 592.0], [66.7, 593.0], [66.8, 594.0], [66.9, 596.0], [67.0, 597.0], [67.1, 598.0], [67.2, 599.0], [67.3, 602.0], [67.4, 603.0], [67.5, 606.0], [67.6, 609.0], [67.7, 612.0], [67.8, 613.0], [67.9, 614.0], [68.0, 616.0], [68.1, 618.0], [68.2, 619.0], [68.3, 623.0], [68.4, 624.0], [68.5, 627.0], [68.6, 629.0], [68.7, 630.0], [68.8, 632.0], [68.9, 635.0], [69.0, 636.0], [69.1, 639.0], [69.2, 642.0], [69.3, 644.0], [69.4, 645.0], [69.5, 649.0], [69.6, 650.0], [69.7, 651.0], [69.8, 652.0], [69.9, 654.0], [70.0, 655.0], [70.1, 658.0], [70.2, 659.0], [70.3, 661.0], [70.4, 663.0], [70.5, 667.0], [70.6, 668.0], [70.7, 669.0], [70.8, 670.0], [70.9, 672.0], [71.0, 673.0], [71.1, 676.0], [71.2, 677.0], [71.3, 680.0], [71.4, 680.0], [71.5, 684.0], [71.6, 687.0], [71.7, 689.0], [71.8, 691.0], [71.9, 692.0], [72.0, 696.0], [72.1, 697.0], [72.2, 699.0], [72.3, 703.0], [72.4, 706.0], [72.5, 707.0], [72.6, 709.0], [72.7, 710.0], [72.8, 711.0], [72.9, 714.0], [73.0, 716.0], [73.1, 720.0], [73.2, 723.0], [73.3, 725.0], [73.4, 728.0], [73.5, 732.0], [73.6, 736.0], [73.7, 738.0], [73.8, 739.0], [73.9, 741.0], [74.0, 749.0], [74.1, 751.0], [74.2, 757.0], [74.3, 759.0], [74.4, 764.0], [74.5, 766.0], [74.6, 771.0], [74.7, 776.0], [74.8, 780.0], [74.9, 781.0], [75.0, 783.0], [75.1, 785.0], [75.2, 788.0], [75.3, 793.0], [75.4, 799.0], [75.5, 803.0], [75.6, 805.0], [75.7, 811.0], [75.8, 813.0], [75.9, 821.0], [76.0, 825.0], [76.1, 827.0], [76.2, 837.0], [76.3, 844.0], [76.4, 852.0], [76.5, 859.0], [76.6, 862.0], [76.7, 865.0], [76.8, 867.0], [76.9, 869.0], [77.0, 869.0], [77.1, 872.0], [77.2, 875.0], [77.3, 882.0], [77.4, 891.0], [77.5, 896.0], [77.6, 905.0], [77.7, 915.0], [77.8, 921.0], [77.9, 923.0], [78.0, 930.0], [78.1, 935.0], [78.2, 939.0], [78.3, 941.0], [78.4, 942.0], [78.5, 947.0], [78.6, 954.0], [78.7, 960.0], [78.8, 964.0], [78.9, 969.0], [79.0, 969.0], [79.1, 973.0], [79.2, 977.0], [79.3, 987.0], [79.4, 993.0], [79.5, 997.0], [79.6, 1000.0], [79.7, 1003.0], [79.8, 1011.0], [79.9, 1019.0], [80.0, 1022.0], [80.1, 1027.0], [80.2, 1031.0], [80.3, 1034.0], [80.4, 1037.0], [80.5, 1038.0], [80.6, 1041.0], [80.7, 1045.0], [80.8, 1049.0], [80.9, 1052.0], [81.0, 1054.0], [81.1, 1056.0], [81.2, 1061.0], [81.3, 1062.0], [81.4, 1069.0], [81.5, 1071.0], [81.6, 1074.0], [81.7, 1079.0], [81.8, 1081.0], [81.9, 1085.0], [82.0, 1088.0], [82.1, 1092.0], [82.2, 1098.0], [82.3, 1102.0], [82.4, 1108.0], [82.5, 1114.0], [82.6, 1116.0], [82.7, 1128.0], [82.8, 1134.0], [82.9, 1139.0], [83.0, 1145.0], [83.1, 1150.0], [83.2, 1156.0], [83.3, 1157.0], [83.4, 1161.0], [83.5, 1168.0], [83.6, 1172.0], [83.7, 1175.0], [83.8, 1178.0], [83.9, 1179.0], [84.0, 1183.0], [84.1, 1185.0], [84.2, 1188.0], [84.3, 1191.0], [84.4, 1198.0], [84.5, 1204.0], [84.6, 1208.0], [84.7, 1210.0], [84.8, 1212.0], [84.9, 1218.0], [85.0, 1224.0], [85.1, 1226.0], [85.2, 1234.0], [85.3, 1240.0], [85.4, 1246.0], [85.5, 1250.0], [85.6, 1253.0], [85.7, 1259.0], [85.8, 1264.0], [85.9, 1269.0], [86.0, 1277.0], [86.1, 1285.0], [86.2, 1291.0], [86.3, 1297.0], [86.4, 1302.0], [86.5, 1312.0], [86.6, 1317.0], [86.7, 1323.0], [86.8, 1327.0], [86.9, 1330.0], [87.0, 1341.0], [87.1, 1349.0], [87.2, 1356.0], [87.3, 1366.0], [87.4, 1371.0], [87.5, 1377.0], [87.6, 1382.0], [87.7, 1387.0], [87.8, 1395.0], [87.9, 1398.0], [88.0, 1407.0], [88.1, 1411.0], [88.2, 1420.0], [88.3, 1422.0], [88.4, 1428.0], [88.5, 1429.0], [88.6, 1433.0], [88.7, 1435.0], [88.8, 1444.0], [88.9, 1451.0], [89.0, 1452.0], [89.1, 1457.0], [89.2, 1469.0], [89.3, 1476.0], [89.4, 1483.0], [89.5, 1488.0], [89.6, 1492.0], [89.7, 1497.0], [89.8, 1504.0], [89.9, 1509.0], [90.0, 1514.0], [90.1, 1521.0], [90.2, 1531.0], [90.3, 1533.0], [90.4, 1539.0], [90.5, 1548.0], [90.6, 1553.0], [90.7, 1562.0], [90.8, 1569.0], [90.9, 1577.0], [91.0, 1579.0], [91.1, 1582.0], [91.2, 1589.0], [91.3, 1598.0], [91.4, 1604.0], [91.5, 1613.0], [91.6, 1621.0], [91.7, 1632.0], [91.8, 1641.0], [91.9, 1648.0], [92.0, 1656.0], [92.1, 1666.0], [92.2, 1674.0], [92.3, 1687.0], [92.4, 1692.0], [92.5, 1703.0], [92.6, 1708.0], [92.7, 1716.0], [92.8, 1719.0], [92.9, 1740.0], [93.0, 1761.0], [93.1, 1771.0], [93.2, 1781.0], [93.3, 1789.0], [93.4, 1799.0], [93.5, 1808.0], [93.6, 1816.0], [93.7, 1825.0], [93.8, 1854.0], [93.9, 1865.0], [94.0, 1873.0], [94.1, 1880.0], [94.2, 1888.0], [94.3, 1901.0], [94.4, 1940.0], [94.5, 1947.0], [94.6, 1970.0], [94.7, 1974.0], [94.8, 1982.0], [94.9, 2016.0], [95.0, 2033.0], [95.1, 2045.0], [95.2, 2058.0], [95.3, 2078.0], [95.4, 2109.0], [95.5, 2121.0], [95.6, 2136.0], [95.7, 2154.0], [95.8, 2180.0], [95.9, 2196.0], [96.0, 2217.0], [96.1, 2233.0], [96.2, 2271.0], [96.3, 2279.0], [96.4, 2284.0], [96.5, 2300.0], [96.6, 2308.0], [96.7, 2337.0], [96.8, 2361.0], [96.9, 2386.0], [97.0, 2429.0], [97.1, 2457.0], [97.2, 2490.0], [97.3, 2517.0], [97.4, 2566.0], [97.5, 2591.0], [97.6, 2639.0], [97.7, 2669.0], [97.8, 2697.0], [97.9, 2741.0], [98.0, 2794.0], [98.1, 2835.0], [98.2, 2874.0], [98.3, 2919.0], [98.4, 2952.0], [98.5, 3033.0], [98.6, 3117.0], [98.7, 3196.0], [98.8, 3318.0], [98.9, 3360.0], [99.0, 3400.0], [99.1, 3535.0], [99.2, 3728.0], [99.3, 3934.0], [99.4, 4177.0], [99.5, 4301.0], [99.6, 4587.0], [99.7, 4779.0], [99.8, 7301.0], [99.9, 8842.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1837.0, "series": [{"data": [[0.0, 1182.0], [600.0, 457.0], [700.0, 254.0], [800.0, 172.0], [900.0, 163.0], [1000.0, 200.0], [1100.0, 219.0], [1200.0, 153.0], [1300.0, 150.0], [1400.0, 140.0], [1500.0, 138.0], [1600.0, 56.0], [1700.0, 60.0], [1800.0, 64.0], [1900.0, 42.0], [2000.0, 34.0], [2100.0, 27.0], [2200.0, 32.0], [2300.0, 18.0], [2400.0, 13.0], [2500.0, 10.0], [2600.0, 13.0], [2800.0, 13.0], [2700.0, 11.0], [2900.0, 14.0], [3000.0, 5.0], [3100.0, 5.0], [3300.0, 10.0], [3200.0, 2.0], [3400.0, 1.0], [3500.0, 1.0], [3600.0, 2.0], [3800.0, 1.0], [4300.0, 1.0], [4100.0, 1.0], [4700.0, 1.0], [4900.0, 1.0], [5800.0, 3.0], [6300.0, 1.0], [6600.0, 1.0], [6900.0, 1.0], [7300.0, 4.0], [7400.0, 5.0], [7500.0, 3.0], [7600.0, 2.0], [7800.0, 2.0], [8100.0, 1.0], [8700.0, 2.0], [8800.0, 1.0], [10500.0, 1.0], [14300.0, 1.0], [100.0, 1837.0], [200.0, 1044.0], [300.0, 1252.0], [400.0, 772.0], [500.0, 725.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 94.0], [600.0, 1.0], [300.0, 1.0], [200.0, 1.0], [800.0, 1.0], [900.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 92.0], [200.0, 7.0], [100.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 720.0], [600.0, 197.0], [700.0, 129.0], [800.0, 84.0], [900.0, 81.0], [1000.0, 105.0], [1100.0, 88.0], [1200.0, 77.0], [1300.0, 62.0], [1400.0, 73.0], [1500.0, 63.0], [1600.0, 46.0], [1700.0, 37.0], [1800.0, 35.0], [1900.0, 21.0], [2000.0, 20.0], [2100.0, 24.0], [2300.0, 18.0], [2200.0, 23.0], [2400.0, 11.0], [2500.0, 12.0], [2600.0, 12.0], [2800.0, 9.0], [2700.0, 8.0], [2900.0, 9.0], [3000.0, 4.0], [3100.0, 6.0], [3200.0, 2.0], [3300.0, 9.0], [3400.0, 4.0], [3500.0, 3.0], [3600.0, 1.0], [3700.0, 2.0], [3800.0, 2.0], [3900.0, 3.0], [4000.0, 1.0], [4200.0, 3.0], [4100.0, 1.0], [4300.0, 2.0], [4400.0, 2.0], [4600.0, 2.0], [4500.0, 1.0], [4700.0, 2.0], [5400.0, 1.0], [6900.0, 1.0], [6800.0, 1.0], [7300.0, 2.0], [7400.0, 1.0], [8700.0, 1.0], [8800.0, 2.0], [10600.0, 1.0], [10700.0, 1.0], [100.0, 550.0], [200.0, 444.0], [300.0, 376.0], [400.0, 305.0], [500.0, 287.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1011.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8684.0, "series": [{"data": [[0.0, 8684.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3816.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1011.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 18.897610921501688, "minX": 1.61727264E12, "maxY": 66.57765119785566, "series": [{"data": [[1.61727276E12, 66.57765119785566], [1.61727264E12, 18.897610921501688], [1.6172727E12, 61.60049662022334]], "isOverall": false, "label": "jp@gc - Stepping Thread Group (deprecated)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727276E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 2390.5, "series": [{"data": [[3.0, 74.0], [5.0, 59.0], [6.0, 65.0], [7.0, 63.0], [9.0, 58.0], [10.0, 72.25000000000003], [11.0, 167.0], [15.0, 246.0], [16.0, 130.0], [17.0, 200.0], [19.0, 184.0], [20.0, 192.85522788203733], [21.0, 118.6], [22.0, 125.10526315789473], [23.0, 131.8695652173913], [24.0, 157.0], [25.0, 261.7947976878611], [26.0, 184.0], [27.0, 229.17391304347825], [28.0, 172.35000000000002], [29.0, 157.71428571428572], [30.0, 252.409090909091], [31.0, 193.77272727272728], [32.0, 297.61538461538464], [33.0, 207.6], [34.0, 255.42105263157893], [35.0, 247.41666666666663], [36.0, 213.62500000000003], [37.0, 181.92307692307685], [38.0, 230.66666666666666], [39.0, 206.2], [40.0, 311.370804059328], [41.0, 424.75], [42.0, 351.95], [43.0, 383.9411764705883], [44.0, 380.8260869565217], [45.0, 276.46153846153845], [46.0, 585.6666666666666], [47.0, 332.86956521739137], [48.0, 193.25], [49.0, 310.0434782608695], [50.0, 1039.875], [51.0, 564.1142857142856], [52.0, 315.0], [53.0, 374.0625], [54.0, 337.9411764705883], [55.0, 787.5283018867925], [56.0, 547.5827814569536], [57.0, 511.79999999999995], [58.0, 506.8955223880599], [59.0, 445.02739726027414], [60.0, 603.2401091405183], [61.0, 356.78378378378375], [62.0, 508.25], [63.0, 332.82758620689657], [64.0, 435.05882352941177], [65.0, 444.0714285714286], [66.0, 691.5454545454546], [67.0, 704.0], [68.0, 762.6666666666666], [69.0, 769.625], [70.0, 540.6666666666666], [71.0, 553.6000000000001], [72.0, 625.9375], [73.0, 782.0], [74.0, 713.7499999999999], [75.0, 941.5769230769229], [76.0, 702.3], [78.0, 613.0], [79.0, 777.170731707317], [77.0, 989.8], [80.0, 604.4865168539326], [81.0, 964.9], [82.0, 1260.3333333333333], [83.0, 421.99999999999994], [84.0, 877.9090909090908], [85.0, 596.0320512820512], [86.0, 841.4426229508198], [87.0, 577.8139534883721], [88.0, 768.2500000000001], [89.0, 619.0833333333335], [90.0, 669.7878787878786], [91.0, 904.48], [92.0, 636.909090909091], [93.0, 479.06666666666655], [94.0, 867.7307692307693], [95.0, 651.7777777777778], [96.0, 239.0909090909091], [97.0, 363.7142857142857], [98.0, 567.2142857142858], [99.0, 1281.75], [100.0, 885.8653600340858], [1.0, 79.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[63.121514371514024, 537.4545259545298]], "isOverall": false, "label": "VNE-GET-bongda-Aggregated", "isController": false}, {"data": [[7.0, 518.5714285714286], [8.0, 92.0], [9.0, 2.0], [10.0, 5.0], [11.0, 1.0], [12.0, 1.0], [13.0, 1.0], [14.0, 4.0], [15.0, 0.0], [16.0, 1.0], [17.0, 1.0], [18.0, 1.0], [19.0, 1.0], [20.0, 1.0], [21.0, 2.0], [22.0, 0.0], [23.0, 2.0], [24.0, 3.0], [25.0, 1.0], [26.0, 1.0], [27.0, 1.0], [28.0, 1.0], [29.0, 0.0], [30.0, 1.0], [31.0, 0.0], [32.0, 2.0], [33.0, 1.0], [34.0, 0.0], [35.0, 0.0], [36.0, 0.0], [37.0, 0.0], [38.0, 1.0], [39.0, 0.0], [40.0, 2.0], [41.0, 1.0], [42.0, 0.0], [43.0, 1.0], [44.0, 2.0], [45.0, 0.0], [46.0, 0.0], [47.0, 0.0], [48.0, 0.0], [49.0, 0.0], [50.0, 2.0], [51.0, 0.0], [52.0, 0.0], [53.0, 0.0], [54.0, 0.0], [55.0, 2.0], [56.0, 0.0], [57.0, 1.0], [58.0, 0.0], [59.0, 6.0], [60.0, 4.0], [61.0, 1.0], [62.0, 0.0], [63.0, 0.0], [64.0, 0.0], [65.0, 2.0], [66.0, 1.0], [67.0, 1.0], [68.0, 0.0], [69.0, 1.0], [70.0, 1.0], [71.0, 1.0], [72.0, 0.0], [73.0, 1.0], [74.0, 1.0], [75.0, 0.0], [76.0, 0.0], [77.0, 0.0], [78.0, 0.0], [79.0, 0.0], [80.0, 0.0], [81.0, 0.0], [82.0, 1.0], [83.0, 1.0], [84.0, 0.0], [85.0, 0.0], [86.0, 4.0], [87.0, 1.0], [88.0, 0.0], [89.0, 0.0], [90.0, 1.0], [91.0, 1.0], [92.0, 0.0], [93.0, 0.0], [94.0, 1.0], [95.0, 1.0], [96.0, 0.0], [97.0, 0.0], [98.0, 1.0], [99.0, 0.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[50.709999999999994, 38.00000000000002]], "isOverall": false, "label": "PROF - VNE - Test 01-Aggregated", "isController": false}, {"data": [[9.0, 231.22222222222223], [10.0, 3.0], [11.0, 5.0], [12.0, 1.0], [13.0, 1.0], [14.0, 7.0], [15.0, 3.0], [16.0, 2.0], [17.0, 1.0], [18.0, 1.0], [19.0, 3.0], [20.0, 1.0], [21.0, 1.0], [22.0, 2.0], [23.0, 1.0], [24.0, 3.0], [25.0, 0.0], [26.0, 1.0], [27.0, 1.0], [28.0, 1.0], [29.0, 1.0], [30.0, 1.0], [31.0, 1.0], [32.0, 1.0], [33.0, 1.0], [34.0, 0.0], [35.0, 6.0], [36.0, 0.0], [37.0, 1.0], [38.0, 0.0], [39.0, 0.0], [40.0, 1.0], [41.0, 0.0], [42.0, 1.0], [43.0, 1.0], [44.0, 1.0], [45.0, 0.0], [46.0, 1.0], [47.0, 0.0], [48.0, 1.0], [49.0, 1.0], [50.0, 1.0], [51.0, 1.0], [52.0, 1.0], [53.0, 2.0], [54.0, 0.0], [55.0, 0.0], [56.0, 1.0], [57.0, 0.0], [58.0, 0.0], [59.0, 3.0], [60.0, 1.0], [61.0, 0.0], [62.0, 1.0], [63.0, 1.0], [64.0, 0.0], [65.0, 1.0], [66.0, 0.0], [67.0, 1.0], [68.0, 1.0], [69.0, 0.0], [70.0, 1.0], [71.0, 0.0], [72.0, 1.0], [73.0, 0.0], [74.0, 0.0], [75.0, 1.0], [76.0, 1.0], [77.0, 1.0], [78.0, 0.0], [79.0, 1.0], [80.0, 6.0], [81.0, 1.0], [82.0, 1.0], [83.0, 1.0], [84.0, 5.0], [85.0, 1.0], [86.0, 1.0], [87.0, 1.0], [88.0, 1.0], [89.0, 1.0], [90.0, 1.0], [91.0, 0.0], [92.0, 8.0], [93.0, 1.0], [94.0, 0.0], [95.0, 0.0], [96.0, 0.0], [97.0, 1.0], [98.0, 0.0], [99.0, 0.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[50.86, 21.88999999999999]], "isOverall": false, "label": "PROF - VNE - Random main action-Aggregated", "isController": false}, {"data": [[2.0, 87.0], [4.0, 65.0], [8.0, 85.0], [10.0, 79.04641350210973], [11.0, 193.0], [12.0, 269.0], [13.0, 226.0], [14.0, 169.0], [18.0, 266.0], [19.0, 232.0], [20.0, 246.53481012658207], [21.0, 93.28571428571429], [22.0, 126.14285714285714], [23.0, 135.14285714285714], [24.0, 231.0], [25.0, 370.4999999999999], [26.0, 264.27272727272725], [27.0, 398.22222222222223], [28.0, 208.0], [29.0, 306.6666666666667], [30.0, 376.4], [31.0, 199.9230769230769], [32.0, 240.57142857142856], [33.0, 344.00000000000006], [34.0, 261.1], [35.0, 287.2], [36.0, 266.84615384615387], [37.0, 234.16666666666669], [38.0, 166.36363636363635], [39.0, 174.0], [40.0, 345.6592592592591], [41.0, 664.0689655172414], [43.0, 929.1666666666667], [42.0, 1118.2727272727273], [44.0, 580.1666666666667], [45.0, 325.6666666666667], [46.0, 184.25], [47.0, 257.875], [48.0, 244.25], [49.0, 264.5], [50.0, 801.5], [51.0, 836.8], [52.0, 472.4117647058823], [53.0, 590.75], [54.0, 151.33333333333331], [55.0, 896.5416666666665], [57.0, 750.1818181818181], [56.0, 658.2549019607843], [58.0, 988.1666666666666], [59.0, 775.4390243902438], [60.0, 622.1522388059703], [61.0, 622.4666666666667], [62.0, 349.625], [63.0, 337.0], [64.0, 495.6666666666667], [65.0, 648.0], [66.0, 488.8000000000001], [67.0, 588.5], [68.0, 439.6666666666667], [69.0, 410.3333333333333], [70.0, 1004.0], [71.0, 901.4755244755248], [72.0, 1036.3809523809523], [73.0, 1423.0], [74.0, 703.0], [75.0, 797.6], [76.0, 1179.9], [77.0, 439.66666666666663], [78.0, 1755.0], [79.0, 553.25], [80.0, 594.3358974358976], [81.0, 921.5454545454545], [82.0, 471.33333333333337], [83.0, 2390.5], [84.0, 572.2], [85.0, 999.7421875], [86.0, 1251.4814814814815], [87.0, 634.4705882352943], [88.0, 542.6250000000001], [91.0, 627.0], [90.0, 2076.0588235294113], [89.0, 924.6153846153845], [92.0, 1073.6153846153848], [93.0, 962.0], [94.0, 887.3846153846154], [95.0, 1682.5], [96.0, 857.2], [97.0, 573.5], [98.0, 1232.6], [100.0, 943.243]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}, {"data": [[62.89917231000737, 625.9345372460491]], "isOverall": false, "label": "VNE-GET-quansu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2235.5, "minX": 1.61727264E12, "maxY": 8925892.6, "series": [{"data": [[1.61727276E12, 7521241.35], [1.61727264E12, 309943.5], [1.6172727E12, 8925892.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61727276E12, 52137.25], [1.61727264E12, 2235.5], [1.6172727E12, 61940.1]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727276E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.7374999999999997, "minX": 1.61727264E12, "maxY": 759.5767727526521, "series": [{"data": [[1.61727276E12, 563.6831019626607], [1.61727264E12, 320.6961325966847], [1.6172727E12, 523.285397784492]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727264E12, 187.04999999999995], [1.6172727E12, 0.7374999999999997]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727264E12, 105.45], [1.6172727E12, 0.9999999999999999]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727276E12, 759.5767727526521], [1.61727264E12, 418.19444444444446], [1.6172727E12, 520.2867231638417]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727276E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61727264E12, "maxY": 460.82557905337376, "series": [{"data": [[1.61727276E12, 434.20440402106226], [1.61727264E12, 252.95027624309378], [1.6172727E12, 460.82557905337376]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727264E12, 0.0], [1.6172727E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727264E12, 0.0], [1.6172727E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727276E12, 300.89558905639234], [1.61727264E12, 181.8472222222222], [1.6172727E12, 305.66054613935984]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727276E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61727264E12, "maxY": 367.7488418932532, "series": [{"data": [[1.61727276E12, 342.8046912398283], [1.61727264E12, 201.58011049723765], [1.6172727E12, 367.7488418932532]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727264E12, 0.0], [1.6172727E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727264E12, 0.0], [1.6172727E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727276E12, 230.95309882747006], [1.61727264E12, 138.22222222222229], [1.6172727E12, 234.4449152542376]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727276E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61727264E12, "maxY": 14349.0, "series": [{"data": [[1.61727276E12, 14349.0], [1.61727264E12, 1647.0], [1.6172727E12, 8165.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61727276E12, 1524.0], [1.61727264E12, 662.2], [1.6172727E12, 1231.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61727276E12, 3185.6000000000004], [1.61727264E12, 1619.14], [1.6172727E12, 2884.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61727276E12, 1983.0], [1.61727264E12, 1027.5000000000023], [1.6172727E12, 1529.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61727276E12, 28.0], [1.61727264E12, 0.0], [1.6172727E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61727276E12, 379.0], [1.61727264E12, 230.0], [1.6172727E12, 320.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727276E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 14.0, "maxY": 1239.5, "series": [{"data": [[14.0, 1.0], [20.0, 269.0], [30.0, 669.5], [32.0, 659.0], [37.0, 397.0], [39.0, 569.0], [43.0, 785.0], [46.0, 1087.5], [47.0, 868.0], [49.0, 686.0], [52.0, 1239.5], [55.0, 327.0], [54.0, 797.5], [56.0, 58.5], [58.0, 1147.0], [59.0, 1085.0], [70.0, 552.5], [77.0, 154.0], [82.0, 197.5], [83.0, 607.5], [86.0, 1127.5], [87.0, 205.0], [90.0, 191.5], [88.0, 331.0], [93.0, 184.0], [95.0, 507.0], [92.0, 545.0], [94.0, 317.5], [97.0, 441.0], [99.0, 420.0], [98.0, 390.5], [100.0, 162.0], [102.0, 310.5], [101.0, 532.0], [107.0, 345.5], [106.0, 299.5], [109.0, 256.0], [111.0, 636.5], [108.0, 324.5], [113.0, 238.0], [112.0, 771.0], [115.0, 690.0], [114.0, 298.0], [116.0, 796.5], [119.0, 690.0], [117.0, 363.0], [121.0, 329.0], [120.0, 397.5], [123.0, 238.0], [127.0, 216.0], [124.0, 73.0], [128.0, 155.0], [133.0, 362.0], [132.0, 295.0], [135.0, 330.0], [134.0, 308.0], [130.0, 486.0], [129.0, 616.0], [139.0, 104.0], [137.0, 417.0], [140.0, 574.5], [142.0, 427.0], [138.0, 614.5], [136.0, 428.5], [146.0, 143.0], [144.0, 407.0], [145.0, 276.0], [150.0, 297.0], [147.0, 135.5], [149.0, 180.5], [148.0, 85.0], [153.0, 102.0], [154.0, 325.0], [155.0, 532.0], [161.0, 424.0], [171.0, 114.0], [170.0, 180.0], [181.0, 183.0], [178.0, 611.0], [188.0, 527.5], [208.0, 545.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 208.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 14.0, "maxY": 1134.0, "series": [{"data": [[14.0, 0.0], [20.0, 0.0], [30.0, 638.0], [32.0, 502.5], [37.0, 154.0], [39.0, 539.0], [43.0, 439.0], [46.0, 1072.5], [47.0, 528.0], [49.0, 659.0], [52.0, 662.5], [55.0, 219.0], [54.0, 266.0], [56.0, 49.5], [58.0, 1134.0], [59.0, 625.0], [70.0, 277.5], [77.0, 137.0], [82.0, 128.0], [83.0, 287.5], [86.0, 552.0], [87.0, 71.0], [90.0, 131.0], [88.0, 102.0], [93.0, 115.0], [95.0, 331.0], [92.0, 295.0], [94.0, 98.5], [97.0, 257.0], [99.0, 134.5], [98.0, 135.5], [100.0, 109.5], [102.0, 81.0], [101.0, 147.0], [107.0, 166.5], [106.0, 72.5], [109.0, 190.0], [111.0, 322.0], [108.0, 79.5], [113.0, 205.0], [112.0, 350.5], [115.0, 316.0], [114.0, 73.5], [116.0, 377.0], [119.0, 288.0], [117.0, 125.0], [121.0, 217.0], [120.0, 310.0], [123.0, 232.0], [127.0, 149.0], [124.0, 54.5], [128.0, 122.5], [133.0, 297.5], [132.0, 267.5], [135.0, 260.0], [134.0, 296.5], [130.0, 365.5], [129.0, 586.0], [139.0, 75.0], [137.0, 393.0], [140.0, 549.5], [142.0, 282.5], [138.0, 572.0], [136.0, 225.0], [146.0, 111.5], [144.0, 307.0], [145.0, 184.0], [150.0, 259.0], [147.0, 79.5], [149.0, 85.5], [148.0, 68.5], [153.0, 83.0], [154.0, 304.0], [155.0, 487.0], [161.0, 392.0], [171.0, 96.0], [170.0, 161.0], [181.0, 151.0], [178.0, 439.0], [188.0, 502.0], [208.0, 512.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 208.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 5.216666666666667, "minX": 1.61727264E12, "maxY": 122.15, "series": [{"data": [[1.61727276E12, 97.81666666666666], [1.61727264E12, 5.216666666666667], [1.6172727E12, 122.15]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727276E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 4.883333333333334, "minX": 1.61727264E12, "maxY": 120.81666666666666, "series": [{"data": [[1.61727276E12, 99.48333333333333], [1.61727264E12, 4.883333333333334], [1.6172727E12, 120.81666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727276E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.61727264E12, "maxY": 82.75, "series": [{"data": [[1.61727264E12, 0.3333333333333333], [1.6172727E12, 1.3333333333333333]], "isOverall": false, "label": "PROF - VNE - Random main action-success", "isController": false}, {"data": [[1.61727276E12, 29.85], [1.61727264E12, 1.2], [1.6172727E12, 35.4]], "isOverall": false, "label": "VNE-GET-quansu-success", "isController": false}, {"data": [[1.61727264E12, 0.3333333333333333], [1.6172727E12, 1.3333333333333333]], "isOverall": false, "label": "PROF - VNE - Test 01-success", "isController": false}, {"data": [[1.61727276E12, 69.63333333333334], [1.61727264E12, 3.0166666666666666], [1.6172727E12, 82.75]], "isOverall": false, "label": "VNE-GET-bongda-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727276E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 4.883333333333334, "minX": 1.61727264E12, "maxY": 120.81666666666666, "series": [{"data": [[1.61727276E12, 99.48333333333333], [1.61727264E12, 4.883333333333334], [1.6172727E12, 120.81666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727276E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

