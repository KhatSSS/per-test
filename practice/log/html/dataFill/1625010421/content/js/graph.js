/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 13503.0, "series": [{"data": [[0.0, 44.0], [0.1, 48.0], [0.2, 50.0], [0.3, 52.0], [0.4, 53.0], [0.5, 55.0], [0.6, 56.0], [0.7, 57.0], [0.8, 58.0], [0.9, 59.0], [1.0, 60.0], [1.1, 61.0], [1.2, 62.0], [1.3, 63.0], [1.4, 64.0], [1.5, 65.0], [1.6, 66.0], [1.7, 67.0], [1.8, 68.0], [1.9, 68.0], [2.0, 69.0], [2.1, 69.0], [2.2, 70.0], [2.3, 71.0], [2.4, 72.0], [2.5, 73.0], [2.6, 74.0], [2.7, 75.0], [2.8, 75.0], [2.9, 76.0], [3.0, 77.0], [3.1, 77.0], [3.2, 78.0], [3.3, 78.0], [3.4, 78.0], [3.5, 79.0], [3.6, 79.0], [3.7, 80.0], [3.8, 80.0], [3.9, 80.0], [4.0, 81.0], [4.1, 81.0], [4.2, 81.0], [4.3, 82.0], [4.4, 82.0], [4.5, 83.0], [4.6, 83.0], [4.7, 83.0], [4.8, 84.0], [4.9, 84.0], [5.0, 84.0], [5.1, 85.0], [5.2, 85.0], [5.3, 85.0], [5.4, 85.0], [5.5, 86.0], [5.6, 86.0], [5.7, 86.0], [5.8, 86.0], [5.9, 87.0], [6.0, 87.0], [6.1, 87.0], [6.2, 88.0], [6.3, 88.0], [6.4, 88.0], [6.5, 88.0], [6.6, 89.0], [6.7, 89.0], [6.8, 89.0], [6.9, 90.0], [7.0, 90.0], [7.1, 90.0], [7.2, 91.0], [7.3, 91.0], [7.4, 91.0], [7.5, 91.0], [7.6, 92.0], [7.7, 92.0], [7.8, 92.0], [7.9, 93.0], [8.0, 93.0], [8.1, 93.0], [8.2, 93.0], [8.3, 94.0], [8.4, 94.0], [8.5, 94.0], [8.6, 95.0], [8.7, 95.0], [8.8, 95.0], [8.9, 96.0], [9.0, 96.0], [9.1, 96.0], [9.2, 96.0], [9.3, 96.0], [9.4, 97.0], [9.5, 97.0], [9.6, 97.0], [9.7, 98.0], [9.8, 98.0], [9.9, 98.0], [10.0, 98.0], [10.1, 98.0], [10.2, 99.0], [10.3, 99.0], [10.4, 99.0], [10.5, 100.0], [10.6, 100.0], [10.7, 100.0], [10.8, 100.0], [10.9, 101.0], [11.0, 101.0], [11.1, 101.0], [11.2, 101.0], [11.3, 102.0], [11.4, 102.0], [11.5, 102.0], [11.6, 103.0], [11.7, 103.0], [11.8, 103.0], [11.9, 104.0], [12.0, 104.0], [12.1, 104.0], [12.2, 104.0], [12.3, 105.0], [12.4, 105.0], [12.5, 105.0], [12.6, 106.0], [12.7, 106.0], [12.8, 106.0], [12.9, 106.0], [13.0, 107.0], [13.1, 107.0], [13.2, 107.0], [13.3, 108.0], [13.4, 108.0], [13.5, 108.0], [13.6, 109.0], [13.7, 109.0], [13.8, 110.0], [13.9, 110.0], [14.0, 110.0], [14.1, 111.0], [14.2, 111.0], [14.3, 111.0], [14.4, 111.0], [14.5, 112.0], [14.6, 112.0], [14.7, 112.0], [14.8, 113.0], [14.9, 113.0], [15.0, 113.0], [15.1, 113.0], [15.2, 114.0], [15.3, 114.0], [15.4, 114.0], [15.5, 115.0], [15.6, 115.0], [15.7, 115.0], [15.8, 115.0], [15.9, 116.0], [16.0, 116.0], [16.1, 116.0], [16.2, 117.0], [16.3, 117.0], [16.4, 117.0], [16.5, 118.0], [16.6, 118.0], [16.7, 118.0], [16.8, 119.0], [16.9, 119.0], [17.0, 119.0], [17.1, 120.0], [17.2, 120.0], [17.3, 120.0], [17.4, 120.0], [17.5, 121.0], [17.6, 122.0], [17.7, 122.0], [17.8, 122.0], [17.9, 123.0], [18.0, 123.0], [18.1, 123.0], [18.2, 124.0], [18.3, 124.0], [18.4, 124.0], [18.5, 125.0], [18.6, 125.0], [18.7, 126.0], [18.8, 126.0], [18.9, 126.0], [19.0, 127.0], [19.1, 127.0], [19.2, 127.0], [19.3, 128.0], [19.4, 128.0], [19.5, 128.0], [19.6, 129.0], [19.7, 129.0], [19.8, 130.0], [19.9, 131.0], [20.0, 131.0], [20.1, 131.0], [20.2, 132.0], [20.3, 133.0], [20.4, 133.0], [20.5, 134.0], [20.6, 134.0], [20.7, 134.0], [20.8, 135.0], [20.9, 135.0], [21.0, 136.0], [21.1, 137.0], [21.2, 137.0], [21.3, 138.0], [21.4, 138.0], [21.5, 139.0], [21.6, 139.0], [21.7, 139.0], [21.8, 140.0], [21.9, 140.0], [22.0, 141.0], [22.1, 141.0], [22.2, 142.0], [22.3, 142.0], [22.4, 142.0], [22.5, 143.0], [22.6, 143.0], [22.7, 144.0], [22.8, 145.0], [22.9, 145.0], [23.0, 146.0], [23.1, 146.0], [23.2, 146.0], [23.3, 146.0], [23.4, 147.0], [23.5, 148.0], [23.6, 148.0], [23.7, 148.0], [23.8, 149.0], [23.9, 149.0], [24.0, 150.0], [24.1, 150.0], [24.2, 151.0], [24.3, 151.0], [24.4, 152.0], [24.5, 152.0], [24.6, 152.0], [24.7, 153.0], [24.8, 153.0], [24.9, 153.0], [25.0, 154.0], [25.1, 155.0], [25.2, 155.0], [25.3, 156.0], [25.4, 157.0], [25.5, 157.0], [25.6, 158.0], [25.7, 158.0], [25.8, 159.0], [25.9, 159.0], [26.0, 160.0], [26.1, 160.0], [26.2, 160.0], [26.3, 161.0], [26.4, 161.0], [26.5, 161.0], [26.6, 162.0], [26.7, 162.0], [26.8, 163.0], [26.9, 164.0], [27.0, 164.0], [27.1, 165.0], [27.2, 165.0], [27.3, 166.0], [27.4, 166.0], [27.5, 167.0], [27.6, 168.0], [27.7, 168.0], [27.8, 169.0], [27.9, 169.0], [28.0, 169.0], [28.1, 170.0], [28.2, 171.0], [28.3, 172.0], [28.4, 173.0], [28.5, 173.0], [28.6, 174.0], [28.7, 174.0], [28.8, 175.0], [28.9, 175.0], [29.0, 175.0], [29.1, 176.0], [29.2, 176.0], [29.3, 177.0], [29.4, 177.0], [29.5, 178.0], [29.6, 179.0], [29.7, 179.0], [29.8, 180.0], [29.9, 181.0], [30.0, 181.0], [30.1, 182.0], [30.2, 182.0], [30.3, 183.0], [30.4, 184.0], [30.5, 184.0], [30.6, 185.0], [30.7, 185.0], [30.8, 186.0], [30.9, 186.0], [31.0, 187.0], [31.1, 188.0], [31.2, 188.0], [31.3, 189.0], [31.4, 189.0], [31.5, 190.0], [31.6, 191.0], [31.7, 191.0], [31.8, 192.0], [31.9, 193.0], [32.0, 193.0], [32.1, 194.0], [32.2, 195.0], [32.3, 197.0], [32.4, 197.0], [32.5, 198.0], [32.6, 198.0], [32.7, 199.0], [32.8, 200.0], [32.9, 201.0], [33.0, 202.0], [33.1, 203.0], [33.2, 203.0], [33.3, 204.0], [33.4, 205.0], [33.5, 206.0], [33.6, 206.0], [33.7, 207.0], [33.8, 208.0], [33.9, 208.0], [34.0, 209.0], [34.1, 210.0], [34.2, 211.0], [34.3, 212.0], [34.4, 213.0], [34.5, 214.0], [34.6, 215.0], [34.7, 216.0], [34.8, 216.0], [34.9, 217.0], [35.0, 218.0], [35.1, 219.0], [35.2, 220.0], [35.3, 220.0], [35.4, 221.0], [35.5, 222.0], [35.6, 223.0], [35.7, 224.0], [35.8, 224.0], [35.9, 225.0], [36.0, 225.0], [36.1, 226.0], [36.2, 227.0], [36.3, 227.0], [36.4, 229.0], [36.5, 230.0], [36.6, 231.0], [36.7, 232.0], [36.8, 233.0], [36.9, 233.0], [37.0, 235.0], [37.1, 236.0], [37.2, 237.0], [37.3, 238.0], [37.4, 238.0], [37.5, 239.0], [37.6, 240.0], [37.7, 240.0], [37.8, 241.0], [37.9, 243.0], [38.0, 244.0], [38.1, 245.0], [38.2, 246.0], [38.3, 246.0], [38.4, 247.0], [38.5, 248.0], [38.6, 249.0], [38.7, 250.0], [38.8, 251.0], [38.9, 252.0], [39.0, 254.0], [39.1, 255.0], [39.2, 256.0], [39.3, 257.0], [39.4, 258.0], [39.5, 259.0], [39.6, 260.0], [39.7, 260.0], [39.8, 261.0], [39.9, 262.0], [40.0, 264.0], [40.1, 264.0], [40.2, 265.0], [40.3, 266.0], [40.4, 266.0], [40.5, 268.0], [40.6, 269.0], [40.7, 270.0], [40.8, 272.0], [40.9, 273.0], [41.0, 274.0], [41.1, 275.0], [41.2, 275.0], [41.3, 277.0], [41.4, 278.0], [41.5, 279.0], [41.6, 279.0], [41.7, 280.0], [41.8, 281.0], [41.9, 282.0], [42.0, 283.0], [42.1, 284.0], [42.2, 285.0], [42.3, 287.0], [42.4, 287.0], [42.5, 288.0], [42.6, 289.0], [42.7, 291.0], [42.8, 292.0], [42.9, 293.0], [43.0, 294.0], [43.1, 294.0], [43.2, 295.0], [43.3, 296.0], [43.4, 297.0], [43.5, 298.0], [43.6, 298.0], [43.7, 299.0], [43.8, 300.0], [43.9, 301.0], [44.0, 302.0], [44.1, 302.0], [44.2, 304.0], [44.3, 305.0], [44.4, 306.0], [44.5, 307.0], [44.6, 308.0], [44.7, 308.0], [44.8, 309.0], [44.9, 310.0], [45.0, 310.0], [45.1, 311.0], [45.2, 312.0], [45.3, 313.0], [45.4, 314.0], [45.5, 315.0], [45.6, 316.0], [45.7, 317.0], [45.8, 317.0], [45.9, 318.0], [46.0, 319.0], [46.1, 319.0], [46.2, 320.0], [46.3, 320.0], [46.4, 321.0], [46.5, 322.0], [46.6, 322.0], [46.7, 323.0], [46.8, 323.0], [46.9, 324.0], [47.0, 325.0], [47.1, 326.0], [47.2, 327.0], [47.3, 327.0], [47.4, 328.0], [47.5, 328.0], [47.6, 329.0], [47.7, 330.0], [47.8, 330.0], [47.9, 331.0], [48.0, 332.0], [48.1, 332.0], [48.2, 333.0], [48.3, 333.0], [48.4, 334.0], [48.5, 335.0], [48.6, 336.0], [48.7, 337.0], [48.8, 337.0], [48.9, 339.0], [49.0, 340.0], [49.1, 340.0], [49.2, 341.0], [49.3, 341.0], [49.4, 342.0], [49.5, 343.0], [49.6, 344.0], [49.7, 345.0], [49.8, 346.0], [49.9, 346.0], [50.0, 347.0], [50.1, 348.0], [50.2, 348.0], [50.3, 349.0], [50.4, 350.0], [50.5, 350.0], [50.6, 352.0], [50.7, 353.0], [50.8, 353.0], [50.9, 354.0], [51.0, 355.0], [51.1, 356.0], [51.2, 357.0], [51.3, 358.0], [51.4, 358.0], [51.5, 359.0], [51.6, 359.0], [51.7, 360.0], [51.8, 361.0], [51.9, 362.0], [52.0, 363.0], [52.1, 364.0], [52.2, 365.0], [52.3, 366.0], [52.4, 367.0], [52.5, 367.0], [52.6, 368.0], [52.7, 369.0], [52.8, 369.0], [52.9, 370.0], [53.0, 371.0], [53.1, 372.0], [53.2, 373.0], [53.3, 375.0], [53.4, 376.0], [53.5, 376.0], [53.6, 378.0], [53.7, 379.0], [53.8, 380.0], [53.9, 381.0], [54.0, 381.0], [54.1, 382.0], [54.2, 383.0], [54.3, 384.0], [54.4, 385.0], [54.5, 386.0], [54.6, 387.0], [54.7, 388.0], [54.8, 389.0], [54.9, 390.0], [55.0, 391.0], [55.1, 392.0], [55.2, 393.0], [55.3, 394.0], [55.4, 394.0], [55.5, 395.0], [55.6, 396.0], [55.7, 397.0], [55.8, 398.0], [55.9, 399.0], [56.0, 400.0], [56.1, 401.0], [56.2, 402.0], [56.3, 403.0], [56.4, 404.0], [56.5, 406.0], [56.6, 407.0], [56.7, 407.0], [56.8, 408.0], [56.9, 409.0], [57.0, 410.0], [57.1, 411.0], [57.2, 412.0], [57.3, 412.0], [57.4, 413.0], [57.5, 414.0], [57.6, 415.0], [57.7, 416.0], [57.8, 417.0], [57.9, 418.0], [58.0, 419.0], [58.1, 420.0], [58.2, 421.0], [58.3, 422.0], [58.4, 423.0], [58.5, 424.0], [58.6, 425.0], [58.7, 426.0], [58.8, 427.0], [58.9, 428.0], [59.0, 430.0], [59.1, 432.0], [59.2, 433.0], [59.3, 434.0], [59.4, 435.0], [59.5, 436.0], [59.6, 437.0], [59.7, 438.0], [59.8, 439.0], [59.9, 441.0], [60.0, 442.0], [60.1, 444.0], [60.2, 445.0], [60.3, 447.0], [60.4, 448.0], [60.5, 449.0], [60.6, 450.0], [60.7, 452.0], [60.8, 454.0], [60.9, 455.0], [61.0, 456.0], [61.1, 458.0], [61.2, 460.0], [61.3, 461.0], [61.4, 462.0], [61.5, 464.0], [61.6, 465.0], [61.7, 466.0], [61.8, 468.0], [61.9, 470.0], [62.0, 472.0], [62.1, 473.0], [62.2, 475.0], [62.3, 477.0], [62.4, 479.0], [62.5, 480.0], [62.6, 482.0], [62.7, 483.0], [62.8, 484.0], [62.9, 486.0], [63.0, 487.0], [63.1, 489.0], [63.2, 490.0], [63.3, 492.0], [63.4, 493.0], [63.5, 494.0], [63.6, 495.0], [63.7, 497.0], [63.8, 498.0], [63.9, 499.0], [64.0, 502.0], [64.1, 504.0], [64.2, 506.0], [64.3, 508.0], [64.4, 510.0], [64.5, 512.0], [64.6, 512.0], [64.7, 514.0], [64.8, 515.0], [64.9, 518.0], [65.0, 519.0], [65.1, 520.0], [65.2, 522.0], [65.3, 523.0], [65.4, 525.0], [65.5, 527.0], [65.6, 529.0], [65.7, 530.0], [65.8, 531.0], [65.9, 534.0], [66.0, 535.0], [66.1, 536.0], [66.2, 537.0], [66.3, 538.0], [66.4, 539.0], [66.5, 541.0], [66.6, 542.0], [66.7, 543.0], [66.8, 545.0], [66.9, 546.0], [67.0, 548.0], [67.1, 548.0], [67.2, 549.0], [67.3, 550.0], [67.4, 551.0], [67.5, 552.0], [67.6, 554.0], [67.7, 554.0], [67.8, 555.0], [67.9, 557.0], [68.0, 559.0], [68.1, 560.0], [68.2, 562.0], [68.3, 563.0], [68.4, 565.0], [68.5, 566.0], [68.6, 567.0], [68.7, 568.0], [68.8, 569.0], [68.9, 570.0], [69.0, 572.0], [69.1, 573.0], [69.2, 574.0], [69.3, 576.0], [69.4, 577.0], [69.5, 578.0], [69.6, 579.0], [69.7, 581.0], [69.8, 584.0], [69.9, 585.0], [70.0, 585.0], [70.1, 587.0], [70.2, 588.0], [70.3, 589.0], [70.4, 592.0], [70.5, 592.0], [70.6, 594.0], [70.7, 595.0], [70.8, 597.0], [70.9, 598.0], [71.0, 599.0], [71.1, 600.0], [71.2, 601.0], [71.3, 602.0], [71.4, 603.0], [71.5, 604.0], [71.6, 605.0], [71.7, 606.0], [71.8, 607.0], [71.9, 608.0], [72.0, 609.0], [72.1, 611.0], [72.2, 611.0], [72.3, 612.0], [72.4, 614.0], [72.5, 615.0], [72.6, 616.0], [72.7, 618.0], [72.8, 619.0], [72.9, 621.0], [73.0, 621.0], [73.1, 623.0], [73.2, 625.0], [73.3, 626.0], [73.4, 628.0], [73.5, 629.0], [73.6, 631.0], [73.7, 632.0], [73.8, 633.0], [73.9, 633.0], [74.0, 634.0], [74.1, 636.0], [74.2, 638.0], [74.3, 639.0], [74.4, 640.0], [74.5, 642.0], [74.6, 643.0], [74.7, 645.0], [74.8, 646.0], [74.9, 649.0], [75.0, 650.0], [75.1, 652.0], [75.2, 653.0], [75.3, 654.0], [75.4, 656.0], [75.5, 658.0], [75.6, 659.0], [75.7, 662.0], [75.8, 664.0], [75.9, 664.0], [76.0, 665.0], [76.1, 669.0], [76.2, 672.0], [76.3, 675.0], [76.4, 677.0], [76.5, 678.0], [76.6, 682.0], [76.7, 684.0], [76.8, 686.0], [76.9, 687.0], [77.0, 691.0], [77.1, 694.0], [77.2, 696.0], [77.3, 697.0], [77.4, 701.0], [77.5, 704.0], [77.6, 708.0], [77.7, 711.0], [77.8, 713.0], [77.9, 716.0], [78.0, 718.0], [78.1, 720.0], [78.2, 722.0], [78.3, 724.0], [78.4, 725.0], [78.5, 728.0], [78.6, 729.0], [78.7, 732.0], [78.8, 734.0], [78.9, 735.0], [79.0, 738.0], [79.1, 742.0], [79.2, 745.0], [79.3, 748.0], [79.4, 750.0], [79.5, 753.0], [79.6, 756.0], [79.7, 757.0], [79.8, 761.0], [79.9, 764.0], [80.0, 768.0], [80.1, 771.0], [80.2, 775.0], [80.3, 777.0], [80.4, 779.0], [80.5, 783.0], [80.6, 786.0], [80.7, 792.0], [80.8, 795.0], [80.9, 797.0], [81.0, 801.0], [81.1, 803.0], [81.2, 806.0], [81.3, 809.0], [81.4, 812.0], [81.5, 817.0], [81.6, 822.0], [81.7, 826.0], [81.8, 831.0], [81.9, 835.0], [82.0, 839.0], [82.1, 843.0], [82.2, 849.0], [82.3, 856.0], [82.4, 864.0], [82.5, 869.0], [82.6, 878.0], [82.7, 884.0], [82.8, 890.0], [82.9, 896.0], [83.0, 902.0], [83.1, 909.0], [83.2, 915.0], [83.3, 922.0], [83.4, 930.0], [83.5, 940.0], [83.6, 952.0], [83.7, 957.0], [83.8, 965.0], [83.9, 973.0], [84.0, 977.0], [84.1, 981.0], [84.2, 987.0], [84.3, 991.0], [84.4, 998.0], [84.5, 1002.0], [84.6, 1014.0], [84.7, 1020.0], [84.8, 1028.0], [84.9, 1041.0], [85.0, 1050.0], [85.1, 1055.0], [85.2, 1064.0], [85.3, 1068.0], [85.4, 1072.0], [85.5, 1082.0], [85.6, 1087.0], [85.7, 1091.0], [85.8, 1097.0], [85.9, 1101.0], [86.0, 1105.0], [86.1, 1107.0], [86.2, 1110.0], [86.3, 1114.0], [86.4, 1116.0], [86.5, 1119.0], [86.6, 1125.0], [86.7, 1130.0], [86.8, 1133.0], [86.9, 1136.0], [87.0, 1141.0], [87.1, 1146.0], [87.2, 1149.0], [87.3, 1154.0], [87.4, 1158.0], [87.5, 1162.0], [87.6, 1169.0], [87.7, 1172.0], [87.8, 1177.0], [87.9, 1179.0], [88.0, 1188.0], [88.1, 1194.0], [88.2, 1199.0], [88.3, 1206.0], [88.4, 1213.0], [88.5, 1218.0], [88.6, 1221.0], [88.7, 1230.0], [88.8, 1238.0], [88.9, 1247.0], [89.0, 1258.0], [89.1, 1264.0], [89.2, 1270.0], [89.3, 1275.0], [89.4, 1282.0], [89.5, 1292.0], [89.6, 1297.0], [89.7, 1301.0], [89.8, 1309.0], [89.9, 1314.0], [90.0, 1317.0], [90.1, 1322.0], [90.2, 1328.0], [90.3, 1332.0], [90.4, 1335.0], [90.5, 1339.0], [90.6, 1345.0], [90.7, 1353.0], [90.8, 1357.0], [90.9, 1361.0], [91.0, 1366.0], [91.1, 1372.0], [91.2, 1376.0], [91.3, 1383.0], [91.4, 1390.0], [91.5, 1393.0], [91.6, 1398.0], [91.7, 1403.0], [91.8, 1409.0], [91.9, 1416.0], [92.0, 1423.0], [92.1, 1427.0], [92.2, 1434.0], [92.3, 1438.0], [92.4, 1442.0], [92.5, 1451.0], [92.6, 1461.0], [92.7, 1468.0], [92.8, 1474.0], [92.9, 1479.0], [93.0, 1484.0], [93.1, 1489.0], [93.2, 1497.0], [93.3, 1502.0], [93.4, 1510.0], [93.5, 1523.0], [93.6, 1532.0], [93.7, 1541.0], [93.8, 1548.0], [93.9, 1553.0], [94.0, 1559.0], [94.1, 1567.0], [94.2, 1575.0], [94.3, 1579.0], [94.4, 1585.0], [94.5, 1593.0], [94.6, 1601.0], [94.7, 1606.0], [94.8, 1615.0], [94.9, 1616.0], [95.0, 1620.0], [95.1, 1626.0], [95.2, 1635.0], [95.3, 1644.0], [95.4, 1652.0], [95.5, 1660.0], [95.6, 1677.0], [95.7, 1689.0], [95.8, 1704.0], [95.9, 1718.0], [96.0, 1733.0], [96.1, 1750.0], [96.2, 1768.0], [96.3, 1789.0], [96.4, 1809.0], [96.5, 1822.0], [96.6, 1842.0], [96.7, 1855.0], [96.8, 1871.0], [96.9, 1895.0], [97.0, 1932.0], [97.1, 1958.0], [97.2, 1994.0], [97.3, 2023.0], [97.4, 2067.0], [97.5, 2097.0], [97.6, 2158.0], [97.7, 2204.0], [97.8, 2253.0], [97.9, 2275.0], [98.0, 2305.0], [98.1, 2320.0], [98.2, 2338.0], [98.3, 2364.0], [98.4, 2400.0], [98.5, 2454.0], [98.6, 2473.0], [98.7, 2539.0], [98.8, 2635.0], [98.9, 2709.0], [99.0, 2790.0], [99.1, 2866.0], [99.2, 2952.0], [99.3, 3089.0], [99.4, 3287.0], [99.5, 3380.0], [99.6, 3585.0], [99.7, 3765.0], [99.8, 4082.0], [99.9, 4526.0], [100.0, 13503.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 2.0], [84.1, 2.0], [84.2, 2.0], [84.3, 2.0], [84.4, 2.0], [84.5, 2.0], [84.6, 2.0], [84.7, 2.0], [84.8, 2.0], [84.9, 2.0], [85.0, 2.0], [85.1, 2.0], [85.2, 2.0], [85.3, 2.0], [85.4, 2.0], [85.5, 2.0], [85.6, 2.0], [85.7, 2.0], [85.8, 2.0], [85.9, 2.0], [86.0, 3.0], [86.1, 3.0], [86.2, 3.0], [86.3, 3.0], [86.4, 3.0], [86.5, 3.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 3.0], [87.4, 3.0], [87.5, 3.0], [87.6, 3.0], [87.7, 3.0], [87.8, 3.0], [87.9, 3.0], [88.0, 3.0], [88.1, 3.0], [88.2, 3.0], [88.3, 3.0], [88.4, 3.0], [88.5, 3.0], [88.6, 3.0], [88.7, 3.0], [88.8, 3.0], [88.9, 3.0], [89.0, 3.0], [89.1, 3.0], [89.2, 3.0], [89.3, 3.0], [89.4, 3.0], [89.5, 3.0], [89.6, 3.0], [89.7, 3.0], [89.8, 3.0], [89.9, 3.0], [90.0, 4.0], [90.1, 4.0], [90.2, 4.0], [90.3, 4.0], [90.4, 4.0], [90.5, 4.0], [90.6, 4.0], [90.7, 4.0], [90.8, 4.0], [90.9, 4.0], [91.0, 6.0], [91.1, 6.0], [91.2, 6.0], [91.3, 6.0], [91.4, 6.0], [91.5, 6.0], [91.6, 6.0], [91.7, 6.0], [91.8, 6.0], [91.9, 6.0], [92.0, 64.0], [92.1, 64.0], [92.2, 64.0], [92.3, 64.0], [92.4, 64.0], [92.5, 64.0], [92.6, 64.0], [92.7, 64.0], [92.8, 64.0], [92.9, 64.0], [93.0, 65.0], [93.1, 65.0], [93.2, 65.0], [93.3, 65.0], [93.4, 65.0], [93.5, 65.0], [93.6, 65.0], [93.7, 65.0], [93.8, 65.0], [93.9, 65.0], [94.0, 214.0], [94.1, 214.0], [94.2, 214.0], [94.3, 214.0], [94.4, 214.0], [94.5, 214.0], [94.6, 214.0], [94.7, 214.0], [94.8, 214.0], [94.9, 214.0], [95.0, 364.0], [95.1, 364.0], [95.2, 364.0], [95.3, 364.0], [95.4, 364.0], [95.5, 364.0], [95.6, 364.0], [95.7, 364.0], [95.8, 364.0], [95.9, 364.0], [96.0, 503.0], [96.1, 503.0], [96.2, 503.0], [96.3, 503.0], [96.4, 503.0], [96.5, 503.0], [96.6, 503.0], [96.7, 503.0], [96.8, 503.0], [96.9, 503.0], [97.0, 664.0], [97.1, 664.0], [97.2, 664.0], [97.3, 664.0], [97.4, 664.0], [97.5, 664.0], [97.6, 664.0], [97.7, 664.0], [97.8, 664.0], [97.9, 664.0], [98.0, 815.0], [98.1, 815.0], [98.2, 815.0], [98.3, 815.0], [98.4, 815.0], [98.5, 815.0], [98.6, 815.0], [98.7, 815.0], [98.8, 815.0], [98.9, 815.0], [99.0, 957.0], [99.1, 957.0], [99.2, 957.0], [99.3, 957.0], [99.4, 957.0], [99.5, 957.0], [99.6, 957.0], [99.7, 957.0], [99.8, 957.0], [99.9, 957.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 3.0], [82.1, 3.0], [82.2, 3.0], [82.3, 3.0], [82.4, 3.0], [82.5, 3.0], [82.6, 3.0], [82.7, 3.0], [82.8, 3.0], [82.9, 3.0], [83.0, 4.0], [83.1, 4.0], [83.2, 4.0], [83.3, 4.0], [83.4, 4.0], [83.5, 4.0], [83.6, 4.0], [83.7, 4.0], [83.8, 4.0], [83.9, 4.0], [84.0, 4.0], [84.1, 4.0], [84.2, 4.0], [84.3, 4.0], [84.4, 4.0], [84.5, 4.0], [84.6, 4.0], [84.7, 4.0], [84.8, 4.0], [84.9, 4.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 4.0], [85.4, 4.0], [85.5, 4.0], [85.6, 4.0], [85.7, 4.0], [85.8, 4.0], [85.9, 4.0], [86.0, 4.0], [86.1, 4.0], [86.2, 4.0], [86.3, 4.0], [86.4, 4.0], [86.5, 4.0], [86.6, 4.0], [86.7, 4.0], [86.8, 4.0], [86.9, 4.0], [87.0, 5.0], [87.1, 5.0], [87.2, 5.0], [87.3, 5.0], [87.4, 5.0], [87.5, 5.0], [87.6, 5.0], [87.7, 5.0], [87.8, 5.0], [87.9, 5.0], [88.0, 9.0], [88.1, 9.0], [88.2, 9.0], [88.3, 9.0], [88.4, 9.0], [88.5, 9.0], [88.6, 9.0], [88.7, 9.0], [88.8, 9.0], [88.9, 9.0], [89.0, 11.0], [89.1, 11.0], [89.2, 11.0], [89.3, 11.0], [89.4, 11.0], [89.5, 11.0], [89.6, 11.0], [89.7, 11.0], [89.8, 11.0], [89.9, 11.0], [90.0, 12.0], [90.1, 12.0], [90.2, 12.0], [90.3, 12.0], [90.4, 12.0], [90.5, 12.0], [90.6, 12.0], [90.7, 12.0], [90.8, 12.0], [90.9, 12.0], [91.0, 19.0], [91.1, 19.0], [91.2, 19.0], [91.3, 19.0], [91.4, 19.0], [91.5, 19.0], [91.6, 19.0], [91.7, 19.0], [91.8, 19.0], [91.9, 19.0], [92.0, 111.0], [92.1, 111.0], [92.2, 111.0], [92.3, 111.0], [92.4, 111.0], [92.5, 111.0], [92.6, 111.0], [92.7, 111.0], [92.8, 111.0], [92.9, 111.0], [93.0, 244.0], [93.1, 244.0], [93.2, 244.0], [93.3, 244.0], [93.4, 244.0], [93.5, 244.0], [93.6, 244.0], [93.7, 244.0], [93.8, 244.0], [93.9, 244.0], [94.0, 244.0], [94.1, 244.0], [94.2, 244.0], [94.3, 244.0], [94.4, 244.0], [94.5, 244.0], [94.6, 244.0], [94.7, 244.0], [94.8, 244.0], [94.9, 244.0], [95.0, 248.0], [95.1, 248.0], [95.2, 248.0], [95.3, 248.0], [95.4, 248.0], [95.5, 248.0], [95.6, 248.0], [95.7, 248.0], [95.8, 248.0], [95.9, 248.0], [96.0, 249.0], [96.1, 249.0], [96.2, 249.0], [96.3, 249.0], [96.4, 249.0], [96.5, 249.0], [96.6, 249.0], [96.7, 249.0], [96.8, 249.0], [96.9, 249.0], [97.0, 252.0], [97.1, 252.0], [97.2, 252.0], [97.3, 252.0], [97.4, 252.0], [97.5, 252.0], [97.6, 252.0], [97.7, 252.0], [97.8, 252.0], [97.9, 252.0], [98.0, 253.0], [98.1, 253.0], [98.2, 253.0], [98.3, 253.0], [98.4, 253.0], [98.5, 253.0], [98.6, 253.0], [98.7, 253.0], [98.8, 253.0], [98.9, 253.0], [99.0, 265.0], [99.1, 265.0], [99.2, 265.0], [99.3, 265.0], [99.4, 265.0], [99.5, 265.0], [99.6, 265.0], [99.7, 265.0], [99.8, 265.0], [99.9, 265.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 28.0], [0.1, 28.0], [0.2, 29.0], [0.3, 29.0], [0.4, 30.0], [0.5, 31.0], [0.6, 31.0], [0.7, 32.0], [0.8, 32.0], [0.9, 32.0], [1.0, 33.0], [1.1, 33.0], [1.2, 33.0], [1.3, 34.0], [1.4, 34.0], [1.5, 34.0], [1.6, 35.0], [1.7, 35.0], [1.8, 35.0], [1.9, 36.0], [2.0, 36.0], [2.1, 36.0], [2.2, 36.0], [2.3, 36.0], [2.4, 36.0], [2.5, 37.0], [2.6, 37.0], [2.7, 37.0], [2.8, 38.0], [2.9, 38.0], [3.0, 38.0], [3.1, 38.0], [3.2, 39.0], [3.3, 39.0], [3.4, 40.0], [3.5, 40.0], [3.6, 40.0], [3.7, 41.0], [3.8, 41.0], [3.9, 42.0], [4.0, 42.0], [4.1, 43.0], [4.2, 43.0], [4.3, 44.0], [4.4, 44.0], [4.5, 45.0], [4.6, 45.0], [4.7, 46.0], [4.8, 46.0], [4.9, 46.0], [5.0, 46.0], [5.1, 47.0], [5.2, 47.0], [5.3, 49.0], [5.4, 49.0], [5.5, 49.0], [5.6, 50.0], [5.7, 50.0], [5.8, 51.0], [5.9, 51.0], [6.0, 52.0], [6.1, 52.0], [6.2, 52.0], [6.3, 53.0], [6.4, 53.0], [6.5, 54.0], [6.6, 55.0], [6.7, 55.0], [6.8, 56.0], [6.9, 56.0], [7.0, 56.0], [7.1, 56.0], [7.2, 57.0], [7.3, 58.0], [7.4, 58.0], [7.5, 58.0], [7.6, 59.0], [7.7, 59.0], [7.8, 59.0], [7.9, 60.0], [8.0, 60.0], [8.1, 61.0], [8.2, 62.0], [8.3, 62.0], [8.4, 63.0], [8.5, 63.0], [8.6, 65.0], [8.7, 65.0], [8.8, 66.0], [8.9, 66.0], [9.0, 67.0], [9.1, 68.0], [9.2, 69.0], [9.3, 69.0], [9.4, 69.0], [9.5, 70.0], [9.6, 70.0], [9.7, 72.0], [9.8, 72.0], [9.9, 73.0], [10.0, 73.0], [10.1, 74.0], [10.2, 74.0], [10.3, 75.0], [10.4, 75.0], [10.5, 76.0], [10.6, 76.0], [10.7, 76.0], [10.8, 77.0], [10.9, 77.0], [11.0, 78.0], [11.1, 78.0], [11.2, 79.0], [11.3, 80.0], [11.4, 81.0], [11.5, 82.0], [11.6, 83.0], [11.7, 83.0], [11.8, 84.0], [11.9, 84.0], [12.0, 85.0], [12.1, 86.0], [12.2, 86.0], [12.3, 87.0], [12.4, 89.0], [12.5, 90.0], [12.6, 91.0], [12.7, 93.0], [12.8, 94.0], [12.9, 94.0], [13.0, 95.0], [13.1, 95.0], [13.2, 96.0], [13.3, 97.0], [13.4, 98.0], [13.5, 99.0], [13.6, 100.0], [13.7, 101.0], [13.8, 101.0], [13.9, 102.0], [14.0, 103.0], [14.1, 104.0], [14.2, 105.0], [14.3, 105.0], [14.4, 106.0], [14.5, 106.0], [14.6, 107.0], [14.7, 107.0], [14.8, 108.0], [14.9, 108.0], [15.0, 109.0], [15.1, 109.0], [15.2, 110.0], [15.3, 111.0], [15.4, 112.0], [15.5, 113.0], [15.6, 114.0], [15.7, 114.0], [15.8, 116.0], [15.9, 117.0], [16.0, 118.0], [16.1, 119.0], [16.2, 120.0], [16.3, 120.0], [16.4, 121.0], [16.5, 123.0], [16.6, 124.0], [16.7, 124.0], [16.8, 125.0], [16.9, 126.0], [17.0, 126.0], [17.1, 127.0], [17.2, 128.0], [17.3, 129.0], [17.4, 130.0], [17.5, 130.0], [17.6, 131.0], [17.7, 132.0], [17.8, 133.0], [17.9, 133.0], [18.0, 134.0], [18.1, 135.0], [18.2, 135.0], [18.3, 136.0], [18.4, 137.0], [18.5, 137.0], [18.6, 138.0], [18.7, 138.0], [18.8, 139.0], [18.9, 139.0], [19.0, 140.0], [19.1, 140.0], [19.2, 141.0], [19.3, 142.0], [19.4, 143.0], [19.5, 143.0], [19.6, 144.0], [19.7, 145.0], [19.8, 146.0], [19.9, 147.0], [20.0, 147.0], [20.1, 149.0], [20.2, 149.0], [20.3, 150.0], [20.4, 150.0], [20.5, 151.0], [20.6, 151.0], [20.7, 152.0], [20.8, 152.0], [20.9, 153.0], [21.0, 154.0], [21.1, 154.0], [21.2, 155.0], [21.3, 156.0], [21.4, 156.0], [21.5, 157.0], [21.6, 157.0], [21.7, 158.0], [21.8, 158.0], [21.9, 159.0], [22.0, 159.0], [22.1, 160.0], [22.2, 160.0], [22.3, 161.0], [22.4, 161.0], [22.5, 161.0], [22.6, 162.0], [22.7, 163.0], [22.8, 165.0], [22.9, 165.0], [23.0, 166.0], [23.1, 167.0], [23.2, 167.0], [23.3, 168.0], [23.4, 168.0], [23.5, 169.0], [23.6, 169.0], [23.7, 170.0], [23.8, 171.0], [23.9, 171.0], [24.0, 172.0], [24.1, 174.0], [24.2, 174.0], [24.3, 175.0], [24.4, 176.0], [24.5, 176.0], [24.6, 177.0], [24.7, 177.0], [24.8, 177.0], [24.9, 178.0], [25.0, 179.0], [25.1, 180.0], [25.2, 181.0], [25.3, 183.0], [25.4, 183.0], [25.5, 184.0], [25.6, 184.0], [25.7, 185.0], [25.8, 185.0], [25.9, 186.0], [26.0, 186.0], [26.1, 187.0], [26.2, 187.0], [26.3, 188.0], [26.4, 188.0], [26.5, 188.0], [26.6, 189.0], [26.7, 190.0], [26.8, 190.0], [26.9, 191.0], [27.0, 192.0], [27.1, 193.0], [27.2, 193.0], [27.3, 194.0], [27.4, 196.0], [27.5, 197.0], [27.6, 197.0], [27.7, 198.0], [27.8, 199.0], [27.9, 200.0], [28.0, 201.0], [28.1, 201.0], [28.2, 202.0], [28.3, 202.0], [28.4, 203.0], [28.5, 204.0], [28.6, 204.0], [28.7, 205.0], [28.8, 205.0], [28.9, 206.0], [29.0, 207.0], [29.1, 207.0], [29.2, 207.0], [29.3, 208.0], [29.4, 208.0], [29.5, 209.0], [29.6, 210.0], [29.7, 210.0], [29.8, 211.0], [29.9, 211.0], [30.0, 212.0], [30.1, 212.0], [30.2, 213.0], [30.3, 213.0], [30.4, 214.0], [30.5, 214.0], [30.6, 215.0], [30.7, 216.0], [30.8, 217.0], [30.9, 217.0], [31.0, 218.0], [31.1, 219.0], [31.2, 220.0], [31.3, 220.0], [31.4, 221.0], [31.5, 221.0], [31.6, 222.0], [31.7, 223.0], [31.8, 223.0], [31.9, 224.0], [32.0, 225.0], [32.1, 226.0], [32.2, 226.0], [32.3, 227.0], [32.4, 227.0], [32.5, 228.0], [32.6, 229.0], [32.7, 229.0], [32.8, 230.0], [32.9, 231.0], [33.0, 232.0], [33.1, 233.0], [33.2, 233.0], [33.3, 234.0], [33.4, 235.0], [33.5, 235.0], [33.6, 236.0], [33.7, 236.0], [33.8, 237.0], [33.9, 237.0], [34.0, 237.0], [34.1, 238.0], [34.2, 238.0], [34.3, 240.0], [34.4, 240.0], [34.5, 241.0], [34.6, 241.0], [34.7, 242.0], [34.8, 243.0], [34.9, 245.0], [35.0, 245.0], [35.1, 246.0], [35.2, 247.0], [35.3, 248.0], [35.4, 249.0], [35.5, 250.0], [35.6, 251.0], [35.7, 251.0], [35.8, 252.0], [35.9, 252.0], [36.0, 253.0], [36.1, 254.0], [36.2, 255.0], [36.3, 256.0], [36.4, 256.0], [36.5, 257.0], [36.6, 257.0], [36.7, 259.0], [36.8, 259.0], [36.9, 261.0], [37.0, 262.0], [37.1, 263.0], [37.2, 263.0], [37.3, 263.0], [37.4, 264.0], [37.5, 265.0], [37.6, 266.0], [37.7, 266.0], [37.8, 267.0], [37.9, 267.0], [38.0, 269.0], [38.1, 270.0], [38.2, 270.0], [38.3, 271.0], [38.4, 271.0], [38.5, 272.0], [38.6, 272.0], [38.7, 272.0], [38.8, 274.0], [38.9, 274.0], [39.0, 275.0], [39.1, 276.0], [39.2, 277.0], [39.3, 278.0], [39.4, 279.0], [39.5, 279.0], [39.6, 280.0], [39.7, 281.0], [39.8, 282.0], [39.9, 282.0], [40.0, 284.0], [40.1, 285.0], [40.2, 286.0], [40.3, 286.0], [40.4, 287.0], [40.5, 288.0], [40.6, 289.0], [40.7, 289.0], [40.8, 291.0], [40.9, 292.0], [41.0, 292.0], [41.1, 293.0], [41.2, 294.0], [41.3, 295.0], [41.4, 296.0], [41.5, 296.0], [41.6, 297.0], [41.7, 299.0], [41.8, 299.0], [41.9, 300.0], [42.0, 301.0], [42.1, 302.0], [42.2, 303.0], [42.3, 304.0], [42.4, 305.0], [42.5, 306.0], [42.6, 307.0], [42.7, 307.0], [42.8, 308.0], [42.9, 309.0], [43.0, 311.0], [43.1, 311.0], [43.2, 312.0], [43.3, 314.0], [43.4, 314.0], [43.5, 315.0], [43.6, 316.0], [43.7, 316.0], [43.8, 317.0], [43.9, 317.0], [44.0, 319.0], [44.1, 319.0], [44.2, 320.0], [44.3, 320.0], [44.4, 321.0], [44.5, 322.0], [44.6, 322.0], [44.7, 323.0], [44.8, 323.0], [44.9, 326.0], [45.0, 326.0], [45.1, 327.0], [45.2, 329.0], [45.3, 330.0], [45.4, 331.0], [45.5, 332.0], [45.6, 333.0], [45.7, 335.0], [45.8, 336.0], [45.9, 338.0], [46.0, 339.0], [46.1, 340.0], [46.2, 341.0], [46.3, 341.0], [46.4, 342.0], [46.5, 343.0], [46.6, 344.0], [46.7, 345.0], [46.8, 345.0], [46.9, 346.0], [47.0, 347.0], [47.1, 349.0], [47.2, 350.0], [47.3, 351.0], [47.4, 352.0], [47.5, 353.0], [47.6, 353.0], [47.7, 355.0], [47.8, 356.0], [47.9, 358.0], [48.0, 359.0], [48.1, 359.0], [48.2, 361.0], [48.3, 361.0], [48.4, 362.0], [48.5, 363.0], [48.6, 364.0], [48.7, 365.0], [48.8, 367.0], [48.9, 368.0], [49.0, 369.0], [49.1, 370.0], [49.2, 372.0], [49.3, 373.0], [49.4, 374.0], [49.5, 375.0], [49.6, 376.0], [49.7, 377.0], [49.8, 378.0], [49.9, 378.0], [50.0, 379.0], [50.1, 381.0], [50.2, 382.0], [50.3, 384.0], [50.4, 384.0], [50.5, 385.0], [50.6, 386.0], [50.7, 387.0], [50.8, 389.0], [50.9, 389.0], [51.0, 391.0], [51.1, 392.0], [51.2, 393.0], [51.3, 394.0], [51.4, 395.0], [51.5, 396.0], [51.6, 397.0], [51.7, 398.0], [51.8, 400.0], [51.9, 402.0], [52.0, 403.0], [52.1, 404.0], [52.2, 406.0], [52.3, 409.0], [52.4, 409.0], [52.5, 410.0], [52.6, 411.0], [52.7, 414.0], [52.8, 414.0], [52.9, 414.0], [53.0, 416.0], [53.1, 417.0], [53.2, 418.0], [53.3, 419.0], [53.4, 421.0], [53.5, 423.0], [53.6, 423.0], [53.7, 424.0], [53.8, 426.0], [53.9, 427.0], [54.0, 428.0], [54.1, 428.0], [54.2, 429.0], [54.3, 430.0], [54.4, 431.0], [54.5, 432.0], [54.6, 433.0], [54.7, 436.0], [54.8, 437.0], [54.9, 438.0], [55.0, 438.0], [55.1, 439.0], [55.2, 440.0], [55.3, 443.0], [55.4, 443.0], [55.5, 444.0], [55.6, 445.0], [55.7, 446.0], [55.8, 447.0], [55.9, 448.0], [56.0, 449.0], [56.1, 450.0], [56.2, 452.0], [56.3, 453.0], [56.4, 454.0], [56.5, 455.0], [56.6, 457.0], [56.7, 457.0], [56.8, 458.0], [56.9, 458.0], [57.0, 459.0], [57.1, 460.0], [57.2, 462.0], [57.3, 463.0], [57.4, 464.0], [57.5, 466.0], [57.6, 468.0], [57.7, 470.0], [57.8, 472.0], [57.9, 473.0], [58.0, 476.0], [58.1, 477.0], [58.2, 478.0], [58.3, 479.0], [58.4, 481.0], [58.5, 483.0], [58.6, 484.0], [58.7, 485.0], [58.8, 487.0], [58.9, 487.0], [59.0, 488.0], [59.1, 489.0], [59.2, 491.0], [59.3, 493.0], [59.4, 494.0], [59.5, 496.0], [59.6, 497.0], [59.7, 499.0], [59.8, 501.0], [59.9, 501.0], [60.0, 502.0], [60.1, 504.0], [60.2, 505.0], [60.3, 506.0], [60.4, 506.0], [60.5, 507.0], [60.6, 508.0], [60.7, 509.0], [60.8, 511.0], [60.9, 513.0], [61.0, 514.0], [61.1, 516.0], [61.2, 517.0], [61.3, 518.0], [61.4, 520.0], [61.5, 521.0], [61.6, 522.0], [61.7, 523.0], [61.8, 523.0], [61.9, 526.0], [62.0, 528.0], [62.1, 529.0], [62.2, 530.0], [62.3, 531.0], [62.4, 532.0], [62.5, 533.0], [62.6, 535.0], [62.7, 537.0], [62.8, 540.0], [62.9, 541.0], [63.0, 542.0], [63.1, 543.0], [63.2, 544.0], [63.3, 545.0], [63.4, 547.0], [63.5, 548.0], [63.6, 550.0], [63.7, 551.0], [63.8, 552.0], [63.9, 554.0], [64.0, 555.0], [64.1, 558.0], [64.2, 559.0], [64.3, 560.0], [64.4, 562.0], [64.5, 563.0], [64.6, 566.0], [64.7, 567.0], [64.8, 568.0], [64.9, 569.0], [65.0, 570.0], [65.1, 571.0], [65.2, 572.0], [65.3, 573.0], [65.4, 574.0], [65.5, 576.0], [65.6, 578.0], [65.7, 579.0], [65.8, 580.0], [65.9, 582.0], [66.0, 586.0], [66.1, 587.0], [66.2, 590.0], [66.3, 591.0], [66.4, 592.0], [66.5, 593.0], [66.6, 595.0], [66.7, 596.0], [66.8, 599.0], [66.9, 600.0], [67.0, 602.0], [67.1, 603.0], [67.2, 604.0], [67.3, 605.0], [67.4, 606.0], [67.5, 608.0], [67.6, 610.0], [67.7, 612.0], [67.8, 613.0], [67.9, 614.0], [68.0, 614.0], [68.1, 617.0], [68.2, 619.0], [68.3, 619.0], [68.4, 620.0], [68.5, 622.0], [68.6, 623.0], [68.7, 624.0], [68.8, 625.0], [68.9, 627.0], [69.0, 627.0], [69.1, 628.0], [69.2, 630.0], [69.3, 630.0], [69.4, 633.0], [69.5, 635.0], [69.6, 635.0], [69.7, 636.0], [69.8, 640.0], [69.9, 640.0], [70.0, 643.0], [70.1, 645.0], [70.2, 649.0], [70.3, 651.0], [70.4, 653.0], [70.5, 655.0], [70.6, 656.0], [70.7, 657.0], [70.8, 658.0], [70.9, 659.0], [71.0, 661.0], [71.1, 662.0], [71.2, 663.0], [71.3, 664.0], [71.4, 664.0], [71.5, 666.0], [71.6, 668.0], [71.7, 670.0], [71.8, 671.0], [71.9, 671.0], [72.0, 674.0], [72.1, 676.0], [72.2, 678.0], [72.3, 681.0], [72.4, 683.0], [72.5, 684.0], [72.6, 685.0], [72.7, 686.0], [72.8, 686.0], [72.9, 689.0], [73.0, 690.0], [73.1, 692.0], [73.2, 695.0], [73.3, 697.0], [73.4, 699.0], [73.5, 703.0], [73.6, 706.0], [73.7, 708.0], [73.8, 710.0], [73.9, 714.0], [74.0, 717.0], [74.1, 718.0], [74.2, 721.0], [74.3, 724.0], [74.4, 727.0], [74.5, 731.0], [74.6, 733.0], [74.7, 735.0], [74.8, 738.0], [74.9, 739.0], [75.0, 742.0], [75.1, 744.0], [75.2, 745.0], [75.3, 748.0], [75.4, 749.0], [75.5, 754.0], [75.6, 756.0], [75.7, 762.0], [75.8, 764.0], [75.9, 765.0], [76.0, 766.0], [76.1, 770.0], [76.2, 776.0], [76.3, 778.0], [76.4, 779.0], [76.5, 782.0], [76.6, 783.0], [76.7, 788.0], [76.8, 790.0], [76.9, 794.0], [77.0, 799.0], [77.1, 801.0], [77.2, 805.0], [77.3, 807.0], [77.4, 809.0], [77.5, 810.0], [77.6, 812.0], [77.7, 814.0], [77.8, 816.0], [77.9, 818.0], [78.0, 820.0], [78.1, 821.0], [78.2, 824.0], [78.3, 825.0], [78.4, 827.0], [78.5, 830.0], [78.6, 834.0], [78.7, 838.0], [78.8, 841.0], [78.9, 845.0], [79.0, 847.0], [79.1, 849.0], [79.2, 851.0], [79.3, 856.0], [79.4, 858.0], [79.5, 861.0], [79.6, 863.0], [79.7, 865.0], [79.8, 869.0], [79.9, 871.0], [80.0, 874.0], [80.1, 877.0], [80.2, 880.0], [80.3, 887.0], [80.4, 892.0], [80.5, 899.0], [80.6, 901.0], [80.7, 906.0], [80.8, 909.0], [80.9, 912.0], [81.0, 914.0], [81.1, 919.0], [81.2, 922.0], [81.3, 928.0], [81.4, 932.0], [81.5, 936.0], [81.6, 942.0], [81.7, 945.0], [81.8, 949.0], [81.9, 952.0], [82.0, 953.0], [82.1, 957.0], [82.2, 965.0], [82.3, 975.0], [82.4, 982.0], [82.5, 986.0], [82.6, 989.0], [82.7, 993.0], [82.8, 995.0], [82.9, 1001.0], [83.0, 1004.0], [83.1, 1010.0], [83.2, 1013.0], [83.3, 1019.0], [83.4, 1024.0], [83.5, 1031.0], [83.6, 1038.0], [83.7, 1048.0], [83.8, 1057.0], [83.9, 1062.0], [84.0, 1069.0], [84.1, 1076.0], [84.2, 1080.0], [84.3, 1086.0], [84.4, 1089.0], [84.5, 1096.0], [84.6, 1102.0], [84.7, 1111.0], [84.8, 1118.0], [84.9, 1121.0], [85.0, 1129.0], [85.1, 1133.0], [85.2, 1136.0], [85.3, 1140.0], [85.4, 1150.0], [85.5, 1152.0], [85.6, 1156.0], [85.7, 1165.0], [85.8, 1168.0], [85.9, 1170.0], [86.0, 1175.0], [86.1, 1182.0], [86.2, 1188.0], [86.3, 1192.0], [86.4, 1197.0], [86.5, 1201.0], [86.6, 1207.0], [86.7, 1213.0], [86.8, 1215.0], [86.9, 1224.0], [87.0, 1227.0], [87.1, 1234.0], [87.2, 1236.0], [87.3, 1240.0], [87.4, 1248.0], [87.5, 1257.0], [87.6, 1265.0], [87.7, 1268.0], [87.8, 1273.0], [87.9, 1275.0], [88.0, 1281.0], [88.1, 1285.0], [88.2, 1291.0], [88.3, 1294.0], [88.4, 1299.0], [88.5, 1305.0], [88.6, 1308.0], [88.7, 1314.0], [88.8, 1318.0], [88.9, 1324.0], [89.0, 1331.0], [89.1, 1337.0], [89.2, 1342.0], [89.3, 1344.0], [89.4, 1357.0], [89.5, 1361.0], [89.6, 1369.0], [89.7, 1374.0], [89.8, 1377.0], [89.9, 1381.0], [90.0, 1391.0], [90.1, 1395.0], [90.2, 1402.0], [90.3, 1407.0], [90.4, 1410.0], [90.5, 1414.0], [90.6, 1418.0], [90.7, 1424.0], [90.8, 1426.0], [90.9, 1434.0], [91.0, 1440.0], [91.1, 1444.0], [91.2, 1449.0], [91.3, 1454.0], [91.4, 1460.0], [91.5, 1466.0], [91.6, 1470.0], [91.7, 1476.0], [91.8, 1485.0], [91.9, 1492.0], [92.0, 1499.0], [92.1, 1501.0], [92.2, 1519.0], [92.3, 1525.0], [92.4, 1537.0], [92.5, 1544.0], [92.6, 1548.0], [92.7, 1556.0], [92.8, 1559.0], [92.9, 1565.0], [93.0, 1591.0], [93.1, 1609.0], [93.2, 1619.0], [93.3, 1626.0], [93.4, 1631.0], [93.5, 1640.0], [93.6, 1648.0], [93.7, 1650.0], [93.8, 1665.0], [93.9, 1678.0], [94.0, 1693.0], [94.1, 1703.0], [94.2, 1711.0], [94.3, 1722.0], [94.4, 1731.0], [94.5, 1741.0], [94.6, 1757.0], [94.7, 1769.0], [94.8, 1775.0], [94.9, 1787.0], [95.0, 1796.0], [95.1, 1811.0], [95.2, 1821.0], [95.3, 1830.0], [95.4, 1853.0], [95.5, 1861.0], [95.6, 1871.0], [95.7, 1877.0], [95.8, 1891.0], [95.9, 1918.0], [96.0, 1929.0], [96.1, 1952.0], [96.2, 1969.0], [96.3, 1998.0], [96.4, 2025.0], [96.5, 2048.0], [96.6, 2061.0], [96.7, 2083.0], [96.8, 2098.0], [96.9, 2130.0], [97.0, 2153.0], [97.1, 2193.0], [97.2, 2233.0], [97.3, 2252.0], [97.4, 2278.0], [97.5, 2315.0], [97.6, 2384.0], [97.7, 2404.0], [97.8, 2438.0], [97.9, 2477.0], [98.0, 2514.0], [98.1, 2534.0], [98.2, 2555.0], [98.3, 2570.0], [98.4, 2630.0], [98.5, 2696.0], [98.6, 2774.0], [98.7, 2843.0], [98.8, 2903.0], [98.9, 2942.0], [99.0, 3041.0], [99.1, 3162.0], [99.2, 3219.0], [99.3, 3400.0], [99.4, 3516.0], [99.5, 3597.0], [99.6, 3670.0], [99.7, 3692.0], [99.8, 3736.0], [99.9, 4050.0], [100.0, 4756.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2125.0, "series": [{"data": [[0.0, 999.0], [600.0, 600.0], [700.0, 346.0], [800.0, 188.0], [900.0, 143.0], [1000.0, 135.0], [1100.0, 226.0], [1200.0, 138.0], [1300.0, 187.0], [1400.0, 152.0], [1500.0, 127.0], [1600.0, 116.0], [1700.0, 54.0], [1800.0, 54.0], [1900.0, 32.0], [2000.0, 25.0], [2100.0, 15.0], [2200.0, 31.0], [2300.0, 37.0], [2400.0, 24.0], [2500.0, 12.0], [2600.0, 11.0], [2700.0, 12.0], [2800.0, 13.0], [2900.0, 10.0], [3000.0, 6.0], [3100.0, 4.0], [3200.0, 7.0], [3300.0, 10.0], [3400.0, 3.0], [3500.0, 6.0], [3600.0, 5.0], [3700.0, 4.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 2.0], [4200.0, 2.0], [4300.0, 6.0], [4100.0, 1.0], [4500.0, 1.0], [5000.0, 2.0], [5100.0, 1.0], [4900.0, 1.0], [5600.0, 1.0], [6100.0, 1.0], [6600.0, 1.0], [7600.0, 1.0], [13500.0, 1.0], [100.0, 2125.0], [200.0, 1043.0], [300.0, 1168.0], [400.0, 759.0], [500.0, 679.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 94.0], [300.0, 1.0], [600.0, 1.0], [800.0, 1.0], [200.0, 1.0], [900.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 92.0], [200.0, 7.0], [100.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 553.0], [600.0, 266.0], [700.0, 147.0], [800.0, 143.0], [900.0, 96.0], [1000.0, 67.0], [1100.0, 80.0], [1200.0, 79.0], [1300.0, 72.0], [1400.0, 75.0], [1500.0, 43.0], [1600.0, 42.0], [100.0, 584.0], [1700.0, 39.0], [1800.0, 31.0], [1900.0, 21.0], [2000.0, 20.0], [2100.0, 12.0], [2200.0, 14.0], [2300.0, 8.0], [2400.0, 13.0], [2500.0, 16.0], [2600.0, 6.0], [2800.0, 6.0], [2700.0, 6.0], [2900.0, 7.0], [3000.0, 2.0], [3100.0, 6.0], [200.0, 569.0], [3200.0, 4.0], [3300.0, 1.0], [3400.0, 4.0], [3500.0, 5.0], [3600.0, 8.0], [3700.0, 5.0], [3800.0, 2.0], [4000.0, 1.0], [4100.0, 1.0], [4200.0, 1.0], [4300.0, 1.0], [300.0, 406.0], [4700.0, 1.0], [400.0, 325.0], [500.0, 291.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 967.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8731.0, "series": [{"data": [[0.0, 8731.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4114.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 967.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 35.895468445927186, "minX": 1.61726916E12, "maxY": 88.32886379675361, "series": [{"data": [[1.61726922E12, 88.32886379675361], [1.61726928E12, 43.33162939297127], [1.61726916E12, 35.895468445927186]], "isOverall": false, "label": "jp@gc - Stepping Thread Group (deprecated)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61726928E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 1852.0, "series": [{"data": [[5.0, 163.0], [6.0, 200.0], [7.0, 204.0], [10.0, 140.064], [11.0, 265.5], [12.0, 385.0], [13.0, 425.0], [14.0, 456.0], [15.0, 664.0], [16.0, 854.5], [17.0, 1846.0], [18.0, 1852.0], [19.0, 795.0], [20.0, 199.8641304347825], [21.0, 214.64285714285714], [22.0, 145.55555555555554], [23.0, 118.46153846153845], [24.0, 168.57894736842104], [25.0, 208.12672176308544], [26.0, 168.8076923076923], [27.0, 217.23255813953483], [28.0, 145.10526315789477], [29.0, 183.25806451612905], [30.0, 272.99999999999994], [31.0, 221.3125], [32.0, 208.29166666666669], [33.0, 271.8], [34.0, 319.42105263157896], [35.0, 280.9285714285714], [36.0, 198.2608695652174], [37.0, 200.53571428571433], [38.0, 293.0], [39.0, 315.7272727272727], [40.0, 321.2345864661653], [41.0, 311.6808510638298], [42.0, 256.77272727272725], [43.0, 391.27272727272725], [44.0, 215.80000000000004], [45.0, 270.52631578947364], [46.0, 292.1578947368421], [47.0, 249.61111111111111], [48.0, 324.6153846153846], [49.0, 280.2857142857142], [50.0, 243.42857142857142], [51.0, 348.35714285714295], [52.0, 264.2222222222222], [53.0, 245.11111111111111], [54.0, 329.66666666666663], [55.0, 395.95983935742987], [56.0, 388.5837563451775], [57.0, 474.44], [58.0, 385.5833333333333], [59.0, 335.65], [60.0, 414.5454545454544], [61.0, 351.69999999999993], [62.0, 630.047619047619], [63.0, 363.0499999999999], [64.0, 667.0833333333334], [65.0, 590.4285714285714], [66.0, 307.4444444444444], [67.0, 495.62500000000006], [68.0, 541.5999999999999], [69.0, 982.5833333333331], [70.0, 507.2124999999999], [71.0, 493.0473684210527], [72.0, 630.7727272727271], [73.0, 376.75], [74.0, 573.5757575757577], [75.0, 821.7826086956522], [76.0, 600.3793103448277], [77.0, 374.6], [78.0, 476.21428571428567], [79.0, 388.92307692307696], [80.0, 661.1147959183677], [82.0, 876.6666666666666], [83.0, 1206.0], [81.0, 526.5], [84.0, 863.3783783783784], [85.0, 555.6349693251533], [86.0, 689.3888888888888], [87.0, 1012.5909090909091], [88.0, 1095.6153846153848], [89.0, 759.0975609756101], [91.0, 715.35], [90.0, 862.875], [92.0, 991.2727272727273], [95.0, 992.1515151515157], [94.0, 570.4666666666667], [93.0, 654.5], [96.0, 945.6842105263157], [97.0, 599.6923076923077], [98.0, 1106.4444444444443], [99.0, 1153.3749999999998], [100.0, 902.7133036797413]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[64.69915031994145, 538.3920067135186]], "isOverall": false, "label": "VNE-GET-bongda-Aggregated", "isController": false}, {"data": [[7.0, 511.57142857142856], [8.0, 65.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 3.0], [13.0, 1.0], [14.0, 1.0], [15.0, 1.0], [16.0, 1.0], [17.0, 1.0], [18.0, 1.0], [19.0, 1.0], [20.0, 2.0], [21.0, 3.0], [22.0, 1.0], [23.0, 1.0], [24.0, 1.0], [25.0, 1.0], [26.0, 1.0], [27.0, 1.0], [28.0, 2.0], [29.0, 1.0], [30.0, 1.0], [31.0, 1.0], [32.0, 2.0], [33.0, 0.0], [34.0, 1.0], [35.0, 4.0], [36.0, 0.0], [37.0, 0.0], [38.0, 0.0], [39.0, 1.0], [40.0, 1.0], [41.0, 0.0], [42.0, 3.0], [43.0, 1.0], [44.0, 1.0], [45.0, 0.0], [46.0, 1.0], [47.0, 1.0], [48.0, 1.0], [49.0, 1.0], [50.0, 0.0], [51.0, 0.0], [52.0, 1.0], [53.0, 1.0], [54.0, 1.0], [55.0, 0.0], [56.0, 1.0], [57.0, 0.0], [58.0, 1.0], [59.0, 0.0], [60.0, 1.0], [61.0, 1.0], [62.0, 0.0], [63.0, 1.0], [64.0, 1.0], [65.0, 1.0], [66.0, 1.0], [67.0, 1.0], [68.0, 1.0], [69.0, 1.0], [70.0, 0.0], [71.0, 1.0], [72.0, 0.0], [73.0, 0.0], [74.0, 1.0], [75.0, 1.0], [76.0, 0.0], [77.0, 1.0], [78.0, 1.0], [79.0, 1.0], [80.0, 1.0], [81.0, 1.0], [82.0, 1.0], [83.0, 1.0], [84.0, 1.0], [85.0, 0.0], [86.0, 1.0], [87.0, 3.0], [88.0, 0.0], [89.0, 1.0], [90.0, 0.0], [91.0, 1.0], [92.0, 1.0], [93.0, 6.0], [94.0, 0.0], [95.0, 1.0], [96.0, 0.0], [97.0, 0.0], [98.0, 0.0], [99.0, 1.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[50.709999999999994, 37.29999999999998]], "isOverall": false, "label": "PROF - VNE - Test 01-Aggregated", "isController": false}, {"data": [[9.0, 209.44444444444446], [10.0, 5.0], [11.0, 1.0], [12.0, 3.0], [13.0, 1.0], [14.0, 1.0], [15.0, 4.0], [16.0, 1.0], [17.0, 1.0], [18.0, 2.0], [19.0, 2.0], [20.0, 1.0], [21.0, 1.0], [22.0, 1.0], [23.0, 1.0], [24.0, 2.0], [25.0, 1.0], [26.0, 0.0], [27.0, 4.0], [28.0, 1.0], [29.0, 1.0], [30.0, 1.0], [31.0, 2.0], [32.0, 1.0], [33.0, 1.0], [34.0, 1.0], [35.0, 4.0], [36.0, 0.0], [37.0, 1.0], [38.0, 1.0], [39.0, 1.0], [40.0, 0.0], [41.0, 12.0], [42.0, 1.0], [43.0, 1.0], [44.0, 0.0], [45.0, 1.0], [46.0, 1.0], [47.0, 2.0], [48.0, 9.0], [49.0, 0.0], [50.0, 1.0], [51.0, 1.0], [52.0, 1.0], [53.0, 0.0], [54.0, 0.0], [55.0, 1.0], [56.0, 0.0], [57.0, 0.0], [58.0, 1.0], [59.0, 1.0], [60.0, 3.0], [61.0, 1.0], [62.0, 1.0], [63.0, 1.0], [64.0, 2.0], [65.0, 1.0], [66.0, 0.0], [67.0, 0.0], [68.0, 0.0], [69.0, 0.0], [70.0, 1.0], [71.0, 0.0], [72.0, 2.0], [73.0, 1.0], [74.0, 0.0], [75.0, 0.0], [76.0, 0.0], [77.0, 0.0], [78.0, 2.0], [79.0, 0.0], [80.0, 1.0], [81.0, 1.0], [82.0, 0.0], [83.0, 0.0], [84.0, 0.0], [85.0, 1.0], [86.0, 2.0], [87.0, 2.0], [88.0, 1.0], [89.0, 1.0], [90.0, 2.0], [91.0, 4.0], [92.0, 0.0], [93.0, 11.0], [94.0, 1.0], [95.0, 1.0], [96.0, 0.0], [97.0, 1.0], [98.0, 1.0], [99.0, 0.0], [100.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[50.86, 20.110000000000003]], "isOverall": false, "label": "PROF - VNE - Random main action-Aggregated", "isController": false}, {"data": [[2.0, 262.0], [3.0, 199.0], [4.0, 404.0], [8.0, 393.0], [9.0, 299.0], [10.0, 154.79245283018875], [11.0, 1678.0], [12.0, 1255.0], [13.0, 1257.0], [14.0, 1432.0], [15.0, 1376.0], [16.0, 1269.5], [19.0, 1207.0], [20.0, 248.19032258064527], [21.0, 282.5], [22.0, 153.55555555555554], [23.0, 132.20000000000002], [24.0, 100.25], [25.0, 252.49999999999991], [26.0, 313.0], [27.0, 377.59090909090907], [28.0, 217.60000000000002], [29.0, 345.5], [30.0, 228.66666666666666], [31.0, 256.16666666666663], [32.0, 184.0909090909091], [33.0, 168.14285714285714], [34.0, 223.88888888888889], [35.0, 302.75], [36.0, 209.125], [37.0, 172.22222222222223], [38.0, 387.44444444444446], [40.0, 354.5307557117752], [41.0, 508.5500000000001], [42.0, 451.61538461538464], [43.0, 366.0], [44.0, 483.77777777777777], [45.0, 212.54545454545456], [46.0, 400.3333333333333], [47.0, 317.0], [48.0, 345.8], [49.0, 538.0], [50.0, 555.7777777777777], [51.0, 292.2727272727273], [52.0, 447.0], [53.0, 1150.0], [54.0, 598.5], [55.0, 573.2688172043012], [56.0, 511.6931818181817], [57.0, 458.33333333333326], [58.0, 693.7142857142858], [59.0, 693.5384615384617], [60.0, 639.1889763779521], [61.0, 975.5999999999999], [62.0, 731.6666666666669], [63.0, 670.7777777777778], [64.0, 533.3749999999999], [65.0, 486.3333333333333], [66.0, 659.25], [67.0, 700.3333333333334], [68.0, 551.6249999999999], [70.0, 879.8125000000001], [71.0, 783.1882352941175], [69.0, 479.0], [72.0, 877.5], [73.0, 1179.6], [74.0, 1182.5555555555554], [75.0, 857.0769230769231], [76.0, 771.2666666666668], [77.0, 928.25], [78.0, 675.75], [79.0, 1068.25], [80.0, 800.7520661157026], [82.0, 1185.0], [83.0, 669.0], [81.0, 912.0], [84.0, 589.4444444444445], [85.0, 780.9568345323742], [86.0, 797.4], [87.0, 1218.625], [88.0, 1393.0], [89.0, 572.3076923076923], [90.0, 775.6666666666667], [91.0, 777.8000000000001], [92.0, 385.7142857142858], [95.0, 435.25], [94.0, 236.44444444444446], [93.0, 792.6666666666666], [96.0, 1242.875], [98.0, 1556.6666666666667], [99.0, 842.8181818181819], [97.0, 519.5], [100.0, 745.0764925373129], [1.0, 214.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}, {"data": [[64.62858543760726, 582.7783770531989]], "isOverall": false, "label": "VNE-GET-quansu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 27275.05, "minX": 1.61726916E12, "maxY": 8829647.1, "series": [{"data": [[1.61726922E12, 8829647.1], [1.61726928E12, 3966395.216666667], [1.61726916E12, 4344483.25]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61726922E12, 61178.85], [1.61726928E12, 27275.05], [1.61726916E12, 30477.05]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61726928E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.8500000000000001, "minX": 1.61726916E12, "maxY": 757.0732354141193, "series": [{"data": [[1.61726922E12, 757.0732354141193], [1.61726928E12, 337.89821182943615], [1.61726916E12, 279.3314285714279]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61726922E12, 0.8500000000000001], [1.61726916E12, 61.59999999999998]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61726922E12, 1.0750000000000002], [1.61726916E12, 32.800000000000004]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61726922E12, 746.752734189254], [1.61726928E12, 492.7839831401477], [1.61726916E12, 330.16553067186027]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61726928E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61726916E12, "maxY": 649.9683802529592, "series": [{"data": [[1.61726922E12, 649.9683802529592], [1.61726928E12, 225.5309491059143], [1.61726916E12, 222.13020408163243]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61726922E12, 0.0], [1.61726916E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61726922E12, 0.0], [1.61726916E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61726922E12, 444.54018069424603], [1.61726928E12, 156.7386722866174], [1.61726916E12, 146.6971762414801]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61726928E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61726916E12, "maxY": 533.325989392085, "series": [{"data": [[1.61726922E12, 533.325989392085], [1.61726928E12, 171.85327831270058], [1.61726916E12, 167.12734693877536]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61726922E12, 0.0], [1.61726916E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61726922E12, 0.0], [1.61726916E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61726922E12, 361.86733238231], [1.61726928E12, 115.82086406743942], [1.61726916E12, 108.92794547224923]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61726928E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61726916E12, "maxY": 13503.0, "series": [{"data": [[1.61726922E12, 7642.0], [1.61726928E12, 13503.0], [1.61726916E12, 3863.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61726922E12, 1582.0], [1.61726928E12, 955.0], [1.61726916E12, 538.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61726922E12, 3374.2800000000007], [1.61726928E12, 2279.7000000000016], [1.61726916E12, 1492.3799999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61726922E12, 2037.7999999999993], [1.61726928E12, 1315.8999999999996], [1.61726916E12, 843.1999999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61726922E12, 0.0], [1.61726928E12, 33.0], [1.61726916E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61726922E12, 565.0], [1.61726928E12, 206.0], [1.61726916E12, 212.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61726928E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.5, "minX": 8.0, "maxY": 2513.0, "series": [{"data": [[8.0, 433.5], [16.0, 1711.0], [22.0, 3.5], [25.0, 655.0], [29.0, 1179.0], [37.0, 528.0], [39.0, 834.0], [38.0, 753.5], [41.0, 98.0], [43.0, 290.0], [44.0, 724.5], [49.0, 2338.0], [57.0, 331.0], [58.0, 644.0], [63.0, 767.0], [67.0, 297.0], [66.0, 819.0], [68.0, 608.0], [73.0, 264.0], [77.0, 302.0], [76.0, 639.0], [79.0, 2513.0], [82.0, 415.0], [84.0, 171.0], [91.0, 236.0], [90.0, 1380.5], [94.0, 182.0], [93.0, 167.0], [97.0, 432.0], [98.0, 482.0], [96.0, 537.0], [101.0, 314.0], [102.0, 671.5], [105.0, 433.0], [106.0, 221.0], [109.0, 412.0], [111.0, 730.0], [110.0, 91.0], [115.0, 395.0], [113.0, 367.0], [114.0, 367.0], [118.0, 148.0], [117.0, 336.5], [120.0, 142.0], [121.0, 1151.0], [122.0, 140.5], [127.0, 273.5], [126.0, 364.5], [125.0, 380.5], [124.0, 310.5], [130.0, 114.0], [133.0, 309.0], [132.0, 421.5], [134.0, 310.0], [131.0, 155.0], [140.0, 168.0], [138.0, 335.0], [136.0, 331.0], [142.0, 414.5], [137.0, 539.5], [139.0, 399.0], [141.0, 348.5], [143.0, 255.0], [148.0, 395.5], [145.0, 207.0], [150.0, 283.0], [147.0, 197.0], [144.0, 274.5], [151.0, 661.0], [149.0, 735.0], [146.0, 395.5], [152.0, 251.0], [159.0, 208.0], [156.0, 241.0], [153.0, 488.0], [167.0, 611.0], [162.0, 707.0], [169.0, 238.0], [171.0, 534.0], [175.0, 1085.0], [182.0, 416.5], [186.0, 116.5], [184.0, 577.5], [192.0, 585.0], [197.0, 501.0], [193.0, 604.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 197.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 8.0, "maxY": 1820.0, "series": [{"data": [[8.0, 0.0], [16.0, 1388.5], [22.0, 0.0], [25.0, 600.0], [29.0, 1168.0], [37.0, 502.0], [39.0, 815.0], [38.0, 384.0], [41.0, 57.0], [43.0, 131.0], [44.0, 628.5], [49.0, 1820.0], [57.0, 214.0], [58.0, 377.0], [63.0, 725.0], [67.0, 156.0], [66.0, 764.0], [68.0, 490.0], [73.0, 159.0], [77.0, 211.0], [76.0, 626.5], [79.0, 1557.0], [82.0, 345.5], [84.0, 107.0], [91.0, 142.0], [90.0, 1278.5], [94.0, 125.5], [93.0, 87.0], [97.0, 108.0], [98.0, 420.0], [96.0, 332.0], [101.0, 215.0], [102.0, 463.0], [105.0, 100.0], [106.0, 90.0], [109.0, 141.0], [111.0, 371.0], [110.0, 59.5], [115.0, 251.0], [113.0, 136.0], [114.0, 125.0], [118.0, 95.0], [117.0, 105.0], [120.0, 99.5], [121.0, 822.0], [122.0, 70.0], [127.0, 194.5], [126.0, 125.5], [125.0, 129.0], [124.0, 155.5], [130.0, 79.5], [133.0, 98.0], [132.0, 330.0], [134.0, 111.0], [131.0, 100.0], [140.0, 130.5], [138.0, 117.0], [136.0, 128.0], [142.0, 268.5], [137.0, 329.0], [139.0, 131.0], [141.0, 133.5], [143.0, 89.0], [148.0, 347.0], [145.0, 180.0], [150.0, 253.0], [147.0, 121.0], [144.0, 150.0], [151.0, 489.0], [149.0, 706.0], [146.0, 143.5], [152.0, 217.0], [159.0, 176.0], [156.0, 208.0], [153.0, 422.0], [167.0, 591.0], [162.0, 636.5], [169.0, 193.0], [171.0, 494.0], [175.0, 1062.0], [182.0, 320.0], [186.0, 84.5], [184.0, 538.5], [192.0, 487.0], [197.0, 486.0], [193.0, 593.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 197.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.93333333333333, "minX": 1.61726916E12, "maxY": 118.31666666666666, "series": [{"data": [[1.61726922E12, 118.31666666666666], [1.61726928E12, 50.93333333333333], [1.61726916E12, 60.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61726928E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 52.166666666666664, "minX": 1.61726916E12, "maxY": 118.08333333333333, "series": [{"data": [[1.61726922E12, 118.08333333333333], [1.61726928E12, 52.166666666666664], [1.61726916E12, 59.95]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61726928E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.6666666666666666, "minX": 1.61726916E12, "maxY": 81.7, "series": [{"data": [[1.61726922E12, 0.6666666666666666], [1.61726916E12, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action-success", "isController": false}, {"data": [[1.61726922E12, 35.05], [1.61726928E12, 15.816666666666666], [1.61726916E12, 17.116666666666667]], "isOverall": false, "label": "VNE-GET-quansu-success", "isController": false}, {"data": [[1.61726922E12, 0.6666666666666666], [1.61726916E12, 1.0]], "isOverall": false, "label": "PROF - VNE - Test 01-success", "isController": false}, {"data": [[1.61726922E12, 81.7], [1.61726928E12, 36.35], [1.61726916E12, 40.833333333333336]], "isOverall": false, "label": "VNE-GET-bongda-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61726928E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 52.166666666666664, "minX": 1.61726916E12, "maxY": 118.08333333333333, "series": [{"data": [[1.61726922E12, 118.08333333333333], [1.61726928E12, 52.166666666666664], [1.61726916E12, 59.95]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61726928E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

