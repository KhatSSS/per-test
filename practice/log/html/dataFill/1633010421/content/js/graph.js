/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 22214.0, "series": [{"data": [[0.0, 36.0], [0.1, 44.0], [0.2, 45.0], [0.3, 46.0], [0.4, 47.0], [0.5, 47.0], [0.6, 48.0], [0.7, 48.0], [0.8, 49.0], [0.9, 49.0], [1.0, 49.0], [1.1, 50.0], [1.2, 50.0], [1.3, 51.0], [1.4, 51.0], [1.5, 51.0], [1.6, 52.0], [1.7, 52.0], [1.8, 52.0], [1.9, 52.0], [2.0, 53.0], [2.1, 53.0], [2.2, 54.0], [2.3, 54.0], [2.4, 55.0], [2.5, 56.0], [2.6, 56.0], [2.7, 57.0], [2.8, 57.0], [2.9, 57.0], [3.0, 58.0], [3.1, 59.0], [3.2, 59.0], [3.3, 60.0], [3.4, 61.0], [3.5, 61.0], [3.6, 62.0], [3.7, 63.0], [3.8, 64.0], [3.9, 65.0], [4.0, 65.0], [4.1, 65.0], [4.2, 66.0], [4.3, 66.0], [4.4, 67.0], [4.5, 68.0], [4.6, 69.0], [4.7, 70.0], [4.8, 70.0], [4.9, 71.0], [5.0, 72.0], [5.1, 73.0], [5.2, 74.0], [5.3, 74.0], [5.4, 75.0], [5.5, 76.0], [5.6, 77.0], [5.7, 77.0], [5.8, 78.0], [5.9, 79.0], [6.0, 80.0], [6.1, 80.0], [6.2, 81.0], [6.3, 82.0], [6.4, 82.0], [6.5, 83.0], [6.6, 83.0], [6.7, 84.0], [6.8, 85.0], [6.9, 85.0], [7.0, 86.0], [7.1, 86.0], [7.2, 86.0], [7.3, 87.0], [7.4, 87.0], [7.5, 87.0], [7.6, 88.0], [7.7, 88.0], [7.8, 89.0], [7.9, 89.0], [8.0, 90.0], [8.1, 90.0], [8.2, 91.0], [8.3, 91.0], [8.4, 91.0], [8.5, 92.0], [8.6, 93.0], [8.7, 93.0], [8.8, 93.0], [8.9, 94.0], [9.0, 94.0], [9.1, 94.0], [9.2, 95.0], [9.3, 95.0], [9.4, 96.0], [9.5, 96.0], [9.6, 96.0], [9.7, 96.0], [9.8, 97.0], [9.9, 97.0], [10.0, 98.0], [10.1, 98.0], [10.2, 99.0], [10.3, 99.0], [10.4, 99.0], [10.5, 100.0], [10.6, 100.0], [10.7, 100.0], [10.8, 101.0], [10.9, 101.0], [11.0, 101.0], [11.1, 102.0], [11.2, 102.0], [11.3, 102.0], [11.4, 103.0], [11.5, 103.0], [11.6, 103.0], [11.7, 104.0], [11.8, 104.0], [11.9, 104.0], [12.0, 105.0], [12.1, 105.0], [12.2, 105.0], [12.3, 105.0], [12.4, 106.0], [12.5, 106.0], [12.6, 106.0], [12.7, 106.0], [12.8, 107.0], [12.9, 107.0], [13.0, 108.0], [13.1, 108.0], [13.2, 108.0], [13.3, 109.0], [13.4, 109.0], [13.5, 109.0], [13.6, 109.0], [13.7, 110.0], [13.8, 110.0], [13.9, 110.0], [14.0, 111.0], [14.1, 111.0], [14.2, 111.0], [14.3, 111.0], [14.4, 112.0], [14.5, 112.0], [14.6, 112.0], [14.7, 113.0], [14.8, 113.0], [14.9, 113.0], [15.0, 114.0], [15.1, 114.0], [15.2, 115.0], [15.3, 115.0], [15.4, 116.0], [15.5, 116.0], [15.6, 116.0], [15.7, 117.0], [15.8, 117.0], [15.9, 117.0], [16.0, 118.0], [16.1, 118.0], [16.2, 118.0], [16.3, 118.0], [16.4, 119.0], [16.5, 119.0], [16.6, 120.0], [16.7, 120.0], [16.8, 120.0], [16.9, 121.0], [17.0, 121.0], [17.1, 122.0], [17.2, 122.0], [17.3, 122.0], [17.4, 123.0], [17.5, 124.0], [17.6, 124.0], [17.7, 124.0], [17.8, 125.0], [17.9, 125.0], [18.0, 125.0], [18.1, 126.0], [18.2, 126.0], [18.3, 126.0], [18.4, 127.0], [18.5, 127.0], [18.6, 127.0], [18.7, 128.0], [18.8, 128.0], [18.9, 129.0], [19.0, 129.0], [19.1, 129.0], [19.2, 130.0], [19.3, 130.0], [19.4, 131.0], [19.5, 131.0], [19.6, 131.0], [19.7, 132.0], [19.8, 132.0], [19.9, 132.0], [20.0, 133.0], [20.1, 133.0], [20.2, 134.0], [20.3, 134.0], [20.4, 135.0], [20.5, 135.0], [20.6, 135.0], [20.7, 136.0], [20.8, 136.0], [20.9, 136.0], [21.0, 137.0], [21.1, 137.0], [21.2, 138.0], [21.3, 138.0], [21.4, 138.0], [21.5, 139.0], [21.6, 140.0], [21.7, 140.0], [21.8, 140.0], [21.9, 141.0], [22.0, 141.0], [22.1, 141.0], [22.2, 142.0], [22.3, 142.0], [22.4, 142.0], [22.5, 143.0], [22.6, 143.0], [22.7, 144.0], [22.8, 144.0], [22.9, 145.0], [23.0, 145.0], [23.1, 146.0], [23.2, 146.0], [23.3, 147.0], [23.4, 147.0], [23.5, 148.0], [23.6, 148.0], [23.7, 149.0], [23.8, 149.0], [23.9, 149.0], [24.0, 150.0], [24.1, 151.0], [24.2, 151.0], [24.3, 152.0], [24.4, 152.0], [24.5, 153.0], [24.6, 153.0], [24.7, 154.0], [24.8, 154.0], [24.9, 155.0], [25.0, 156.0], [25.1, 156.0], [25.2, 157.0], [25.3, 157.0], [25.4, 158.0], [25.5, 158.0], [25.6, 158.0], [25.7, 159.0], [25.8, 160.0], [25.9, 160.0], [26.0, 160.0], [26.1, 161.0], [26.2, 161.0], [26.3, 162.0], [26.4, 162.0], [26.5, 163.0], [26.6, 163.0], [26.7, 164.0], [26.8, 164.0], [26.9, 165.0], [27.0, 165.0], [27.1, 166.0], [27.2, 166.0], [27.3, 167.0], [27.4, 168.0], [27.5, 168.0], [27.6, 168.0], [27.7, 169.0], [27.8, 169.0], [27.9, 170.0], [28.0, 170.0], [28.1, 171.0], [28.2, 172.0], [28.3, 172.0], [28.4, 173.0], [28.5, 173.0], [28.6, 174.0], [28.7, 174.0], [28.8, 175.0], [28.9, 175.0], [29.0, 176.0], [29.1, 176.0], [29.2, 177.0], [29.3, 177.0], [29.4, 178.0], [29.5, 178.0], [29.6, 178.0], [29.7, 179.0], [29.8, 180.0], [29.9, 180.0], [30.0, 181.0], [30.1, 182.0], [30.2, 182.0], [30.3, 183.0], [30.4, 183.0], [30.5, 184.0], [30.6, 184.0], [30.7, 185.0], [30.8, 185.0], [30.9, 186.0], [31.0, 186.0], [31.1, 187.0], [31.2, 188.0], [31.3, 188.0], [31.4, 188.0], [31.5, 189.0], [31.6, 189.0], [31.7, 190.0], [31.8, 190.0], [31.9, 191.0], [32.0, 192.0], [32.1, 192.0], [32.2, 193.0], [32.3, 194.0], [32.4, 194.0], [32.5, 195.0], [32.6, 195.0], [32.7, 196.0], [32.8, 196.0], [32.9, 197.0], [33.0, 197.0], [33.1, 198.0], [33.2, 198.0], [33.3, 199.0], [33.4, 199.0], [33.5, 200.0], [33.6, 201.0], [33.7, 202.0], [33.8, 203.0], [33.9, 204.0], [34.0, 204.0], [34.1, 205.0], [34.2, 205.0], [34.3, 206.0], [34.4, 207.0], [34.5, 207.0], [34.6, 207.0], [34.7, 208.0], [34.8, 209.0], [34.9, 209.0], [35.0, 210.0], [35.1, 210.0], [35.2, 211.0], [35.3, 212.0], [35.4, 212.0], [35.5, 213.0], [35.6, 213.0], [35.7, 214.0], [35.8, 215.0], [35.9, 215.0], [36.0, 216.0], [36.1, 216.0], [36.2, 217.0], [36.3, 217.0], [36.4, 218.0], [36.5, 218.0], [36.6, 219.0], [36.7, 219.0], [36.8, 220.0], [36.9, 221.0], [37.0, 221.0], [37.1, 222.0], [37.2, 223.0], [37.3, 223.0], [37.4, 224.0], [37.5, 225.0], [37.6, 225.0], [37.7, 226.0], [37.8, 227.0], [37.9, 227.0], [38.0, 228.0], [38.1, 229.0], [38.2, 229.0], [38.3, 230.0], [38.4, 231.0], [38.5, 231.0], [38.6, 232.0], [38.7, 232.0], [38.8, 233.0], [38.9, 234.0], [39.0, 234.0], [39.1, 235.0], [39.2, 236.0], [39.3, 237.0], [39.4, 237.0], [39.5, 238.0], [39.6, 239.0], [39.7, 239.0], [39.8, 240.0], [39.9, 240.0], [40.0, 241.0], [40.1, 242.0], [40.2, 243.0], [40.3, 243.0], [40.4, 244.0], [40.5, 244.0], [40.6, 245.0], [40.7, 246.0], [40.8, 246.0], [40.9, 247.0], [41.0, 248.0], [41.1, 249.0], [41.2, 249.0], [41.3, 251.0], [41.4, 251.0], [41.5, 252.0], [41.6, 252.0], [41.7, 253.0], [41.8, 253.0], [41.9, 254.0], [42.0, 255.0], [42.1, 256.0], [42.2, 256.0], [42.3, 257.0], [42.4, 258.0], [42.5, 259.0], [42.6, 260.0], [42.7, 260.0], [42.8, 261.0], [42.9, 262.0], [43.0, 263.0], [43.1, 263.0], [43.2, 264.0], [43.3, 265.0], [43.4, 266.0], [43.5, 267.0], [43.6, 267.0], [43.7, 268.0], [43.8, 268.0], [43.9, 269.0], [44.0, 269.0], [44.1, 270.0], [44.2, 271.0], [44.3, 272.0], [44.4, 273.0], [44.5, 273.0], [44.6, 274.0], [44.7, 274.0], [44.8, 275.0], [44.9, 276.0], [45.0, 276.0], [45.1, 277.0], [45.2, 278.0], [45.3, 279.0], [45.4, 279.0], [45.5, 280.0], [45.6, 281.0], [45.7, 282.0], [45.8, 283.0], [45.9, 284.0], [46.0, 285.0], [46.1, 285.0], [46.2, 286.0], [46.3, 287.0], [46.4, 288.0], [46.5, 289.0], [46.6, 289.0], [46.7, 290.0], [46.8, 291.0], [46.9, 291.0], [47.0, 292.0], [47.1, 293.0], [47.2, 294.0], [47.3, 294.0], [47.4, 295.0], [47.5, 295.0], [47.6, 296.0], [47.7, 297.0], [47.8, 297.0], [47.9, 298.0], [48.0, 298.0], [48.1, 299.0], [48.2, 300.0], [48.3, 300.0], [48.4, 301.0], [48.5, 302.0], [48.6, 302.0], [48.7, 302.0], [48.8, 304.0], [48.9, 304.0], [49.0, 305.0], [49.1, 305.0], [49.2, 306.0], [49.3, 307.0], [49.4, 307.0], [49.5, 308.0], [49.6, 308.0], [49.7, 309.0], [49.8, 309.0], [49.9, 310.0], [50.0, 310.0], [50.1, 311.0], [50.2, 312.0], [50.3, 312.0], [50.4, 312.0], [50.5, 313.0], [50.6, 313.0], [50.7, 314.0], [50.8, 315.0], [50.9, 315.0], [51.0, 316.0], [51.1, 316.0], [51.2, 317.0], [51.3, 318.0], [51.4, 318.0], [51.5, 319.0], [51.6, 319.0], [51.7, 320.0], [51.8, 321.0], [51.9, 321.0], [52.0, 322.0], [52.1, 322.0], [52.2, 323.0], [52.3, 323.0], [52.4, 323.0], [52.5, 324.0], [52.6, 324.0], [52.7, 325.0], [52.8, 325.0], [52.9, 326.0], [53.0, 326.0], [53.1, 327.0], [53.2, 327.0], [53.3, 328.0], [53.4, 328.0], [53.5, 329.0], [53.6, 329.0], [53.7, 330.0], [53.8, 330.0], [53.9, 331.0], [54.0, 331.0], [54.1, 332.0], [54.2, 332.0], [54.3, 333.0], [54.4, 333.0], [54.5, 334.0], [54.6, 334.0], [54.7, 335.0], [54.8, 336.0], [54.9, 336.0], [55.0, 337.0], [55.1, 338.0], [55.2, 338.0], [55.3, 339.0], [55.4, 340.0], [55.5, 340.0], [55.6, 341.0], [55.7, 342.0], [55.8, 342.0], [55.9, 342.0], [56.0, 343.0], [56.1, 344.0], [56.2, 345.0], [56.3, 346.0], [56.4, 346.0], [56.5, 347.0], [56.6, 347.0], [56.7, 348.0], [56.8, 349.0], [56.9, 350.0], [57.0, 350.0], [57.1, 351.0], [57.2, 352.0], [57.3, 352.0], [57.4, 353.0], [57.5, 353.0], [57.6, 354.0], [57.7, 355.0], [57.8, 355.0], [57.9, 355.0], [58.0, 356.0], [58.1, 357.0], [58.2, 358.0], [58.3, 358.0], [58.4, 359.0], [58.5, 359.0], [58.6, 360.0], [58.7, 361.0], [58.8, 361.0], [58.9, 361.0], [59.0, 362.0], [59.1, 363.0], [59.2, 363.0], [59.3, 364.0], [59.4, 365.0], [59.5, 365.0], [59.6, 366.0], [59.7, 367.0], [59.8, 368.0], [59.9, 368.0], [60.0, 369.0], [60.1, 369.0], [60.2, 370.0], [60.3, 371.0], [60.4, 372.0], [60.5, 373.0], [60.6, 374.0], [60.7, 374.0], [60.8, 375.0], [60.9, 376.0], [61.0, 377.0], [61.1, 377.0], [61.2, 378.0], [61.3, 379.0], [61.4, 379.0], [61.5, 380.0], [61.6, 381.0], [61.7, 382.0], [61.8, 383.0], [61.9, 384.0], [62.0, 385.0], [62.1, 386.0], [62.2, 387.0], [62.3, 388.0], [62.4, 388.0], [62.5, 390.0], [62.6, 391.0], [62.7, 392.0], [62.8, 393.0], [62.9, 394.0], [63.0, 395.0], [63.1, 395.0], [63.2, 396.0], [63.3, 397.0], [63.4, 398.0], [63.5, 399.0], [63.6, 400.0], [63.7, 401.0], [63.8, 402.0], [63.9, 403.0], [64.0, 404.0], [64.1, 405.0], [64.2, 406.0], [64.3, 407.0], [64.4, 409.0], [64.5, 409.0], [64.6, 410.0], [64.7, 411.0], [64.8, 412.0], [64.9, 413.0], [65.0, 414.0], [65.1, 416.0], [65.2, 417.0], [65.3, 418.0], [65.4, 419.0], [65.5, 420.0], [65.6, 421.0], [65.7, 422.0], [65.8, 424.0], [65.9, 426.0], [66.0, 427.0], [66.1, 428.0], [66.2, 429.0], [66.3, 430.0], [66.4, 431.0], [66.5, 433.0], [66.6, 435.0], [66.7, 436.0], [66.8, 437.0], [66.9, 439.0], [67.0, 440.0], [67.1, 440.0], [67.2, 442.0], [67.3, 443.0], [67.4, 444.0], [67.5, 445.0], [67.6, 446.0], [67.7, 447.0], [67.8, 448.0], [67.9, 449.0], [68.0, 450.0], [68.1, 452.0], [68.2, 453.0], [68.3, 454.0], [68.4, 455.0], [68.5, 456.0], [68.6, 457.0], [68.7, 459.0], [68.8, 460.0], [68.9, 461.0], [69.0, 462.0], [69.1, 463.0], [69.2, 464.0], [69.3, 465.0], [69.4, 466.0], [69.5, 467.0], [69.6, 468.0], [69.7, 469.0], [69.8, 470.0], [69.9, 471.0], [70.0, 472.0], [70.1, 473.0], [70.2, 474.0], [70.3, 475.0], [70.4, 476.0], [70.5, 477.0], [70.6, 478.0], [70.7, 479.0], [70.8, 480.0], [70.9, 481.0], [71.0, 482.0], [71.1, 483.0], [71.2, 485.0], [71.3, 487.0], [71.4, 488.0], [71.5, 490.0], [71.6, 491.0], [71.7, 492.0], [71.8, 493.0], [71.9, 496.0], [72.0, 497.0], [72.1, 498.0], [72.2, 500.0], [72.3, 502.0], [72.4, 504.0], [72.5, 505.0], [72.6, 506.0], [72.7, 508.0], [72.8, 510.0], [72.9, 511.0], [73.0, 513.0], [73.1, 514.0], [73.2, 517.0], [73.3, 518.0], [73.4, 520.0], [73.5, 522.0], [73.6, 524.0], [73.7, 525.0], [73.8, 526.0], [73.9, 527.0], [74.0, 529.0], [74.1, 531.0], [74.2, 532.0], [74.3, 533.0], [74.4, 535.0], [74.5, 536.0], [74.6, 538.0], [74.7, 539.0], [74.8, 540.0], [74.9, 541.0], [75.0, 542.0], [75.1, 544.0], [75.2, 545.0], [75.3, 547.0], [75.4, 548.0], [75.5, 549.0], [75.6, 551.0], [75.7, 553.0], [75.8, 554.0], [75.9, 556.0], [76.0, 559.0], [76.1, 561.0], [76.2, 562.0], [76.3, 563.0], [76.4, 565.0], [76.5, 568.0], [76.6, 570.0], [76.7, 571.0], [76.8, 573.0], [76.9, 575.0], [77.0, 577.0], [77.1, 579.0], [77.2, 582.0], [77.3, 584.0], [77.4, 586.0], [77.5, 588.0], [77.6, 591.0], [77.7, 593.0], [77.8, 596.0], [77.9, 599.0], [78.0, 602.0], [78.1, 605.0], [78.2, 607.0], [78.3, 609.0], [78.4, 612.0], [78.5, 615.0], [78.6, 615.0], [78.7, 618.0], [78.8, 619.0], [78.9, 621.0], [79.0, 622.0], [79.1, 625.0], [79.2, 628.0], [79.3, 631.0], [79.4, 635.0], [79.5, 637.0], [79.6, 640.0], [79.7, 645.0], [79.8, 649.0], [79.9, 652.0], [80.0, 658.0], [80.1, 662.0], [80.2, 664.0], [80.3, 667.0], [80.4, 670.0], [80.5, 674.0], [80.6, 677.0], [80.7, 681.0], [80.8, 689.0], [80.9, 693.0], [81.0, 695.0], [81.1, 700.0], [81.2, 706.0], [81.3, 710.0], [81.4, 714.0], [81.5, 717.0], [81.6, 723.0], [81.7, 727.0], [81.8, 730.0], [81.9, 733.0], [82.0, 736.0], [82.1, 741.0], [82.2, 744.0], [82.3, 746.0], [82.4, 749.0], [82.5, 752.0], [82.6, 755.0], [82.7, 758.0], [82.8, 761.0], [82.9, 765.0], [83.0, 768.0], [83.1, 771.0], [83.2, 774.0], [83.3, 776.0], [83.4, 780.0], [83.5, 782.0], [83.6, 787.0], [83.7, 790.0], [83.8, 794.0], [83.9, 798.0], [84.0, 803.0], [84.1, 808.0], [84.2, 811.0], [84.3, 818.0], [84.4, 821.0], [84.5, 824.0], [84.6, 832.0], [84.7, 839.0], [84.8, 844.0], [84.9, 849.0], [85.0, 852.0], [85.1, 855.0], [85.2, 859.0], [85.3, 866.0], [85.4, 871.0], [85.5, 878.0], [85.6, 885.0], [85.7, 890.0], [85.8, 894.0], [85.9, 899.0], [86.0, 904.0], [86.1, 910.0], [86.2, 917.0], [86.3, 924.0], [86.4, 931.0], [86.5, 937.0], [86.6, 943.0], [86.7, 951.0], [86.8, 957.0], [86.9, 968.0], [87.0, 976.0], [87.1, 980.0], [87.2, 985.0], [87.3, 993.0], [87.4, 998.0], [87.5, 1004.0], [87.6, 1011.0], [87.7, 1023.0], [87.8, 1032.0], [87.9, 1041.0], [88.0, 1048.0], [88.1, 1054.0], [88.2, 1060.0], [88.3, 1064.0], [88.4, 1069.0], [88.5, 1073.0], [88.6, 1081.0], [88.7, 1088.0], [88.8, 1093.0], [88.9, 1097.0], [89.0, 1104.0], [89.1, 1106.0], [89.2, 1110.0], [89.3, 1114.0], [89.4, 1121.0], [89.5, 1126.0], [89.6, 1131.0], [89.7, 1138.0], [89.8, 1142.0], [89.9, 1149.0], [90.0, 1154.0], [90.1, 1160.0], [90.2, 1167.0], [90.3, 1174.0], [90.4, 1182.0], [90.5, 1187.0], [90.6, 1193.0], [90.7, 1201.0], [90.8, 1209.0], [90.9, 1216.0], [91.0, 1221.0], [91.1, 1226.0], [91.2, 1229.0], [91.3, 1236.0], [91.4, 1243.0], [91.5, 1246.0], [91.6, 1251.0], [91.7, 1258.0], [91.8, 1265.0], [91.9, 1270.0], [92.0, 1275.0], [92.1, 1280.0], [92.2, 1285.0], [92.3, 1290.0], [92.4, 1296.0], [92.5, 1302.0], [92.6, 1308.0], [92.7, 1316.0], [92.8, 1320.0], [92.9, 1327.0], [93.0, 1333.0], [93.1, 1337.0], [93.2, 1344.0], [93.3, 1352.0], [93.4, 1362.0], [93.5, 1369.0], [93.6, 1381.0], [93.7, 1386.0], [93.8, 1390.0], [93.9, 1396.0], [94.0, 1400.0], [94.1, 1406.0], [94.2, 1412.0], [94.3, 1418.0], [94.4, 1423.0], [94.5, 1428.0], [94.6, 1434.0], [94.7, 1445.0], [94.8, 1452.0], [94.9, 1464.0], [95.0, 1470.0], [95.1, 1481.0], [95.2, 1491.0], [95.3, 1499.0], [95.4, 1511.0], [95.5, 1523.0], [95.6, 1531.0], [95.7, 1544.0], [95.8, 1554.0], [95.9, 1564.0], [96.0, 1574.0], [96.1, 1582.0], [96.2, 1592.0], [96.3, 1610.0], [96.4, 1631.0], [96.5, 1647.0], [96.6, 1664.0], [96.7, 1683.0], [96.8, 1700.0], [96.9, 1711.0], [97.0, 1735.0], [97.1, 1749.0], [97.2, 1762.0], [97.3, 1784.0], [97.4, 1797.0], [97.5, 1820.0], [97.6, 1847.0], [97.7, 1879.0], [97.8, 1907.0], [97.9, 1943.0], [98.0, 1978.0], [98.1, 2016.0], [98.2, 2060.0], [98.3, 2090.0], [98.4, 2132.0], [98.5, 2171.0], [98.6, 2223.0], [98.7, 2290.0], [98.8, 2343.0], [98.9, 2392.0], [99.0, 2419.0], [99.1, 2525.0], [99.2, 2565.0], [99.3, 2604.0], [99.4, 2709.0], [99.5, 2858.0], [99.6, 3148.0], [99.7, 3384.0], [99.8, 3603.0], [99.9, 4515.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 2.0], [84.1, 2.0], [84.2, 2.0], [84.3, 2.0], [84.4, 2.0], [84.5, 2.0], [84.6, 2.0], [84.7, 2.0], [84.8, 2.0], [84.9, 2.0], [85.0, 2.0], [85.1, 2.0], [85.2, 2.0], [85.3, 2.0], [85.4, 2.0], [85.5, 2.0], [85.6, 2.0], [85.7, 2.0], [85.8, 2.0], [85.9, 2.0], [86.0, 2.0], [86.1, 2.0], [86.2, 2.0], [86.3, 2.0], [86.4, 2.0], [86.5, 2.0], [86.6, 2.0], [86.7, 2.0], [86.8, 2.0], [86.9, 2.0], [87.0, 2.0], [87.1, 2.0], [87.2, 2.0], [87.3, 2.0], [87.4, 2.0], [87.5, 2.0], [87.6, 2.0], [87.7, 2.0], [87.8, 2.0], [87.9, 2.0], [88.0, 3.0], [88.1, 3.0], [88.2, 3.0], [88.3, 3.0], [88.4, 3.0], [88.5, 3.0], [88.6, 3.0], [88.7, 3.0], [88.8, 3.0], [88.9, 3.0], [89.0, 3.0], [89.1, 3.0], [89.2, 3.0], [89.3, 3.0], [89.4, 3.0], [89.5, 3.0], [89.6, 3.0], [89.7, 3.0], [89.8, 3.0], [89.9, 3.0], [90.0, 4.0], [90.1, 4.0], [90.2, 4.0], [90.3, 4.0], [90.4, 4.0], [90.5, 4.0], [90.6, 4.0], [90.7, 4.0], [90.8, 4.0], [90.9, 4.0], [91.0, 4.0], [91.1, 4.0], [91.2, 4.0], [91.3, 4.0], [91.4, 4.0], [91.5, 4.0], [91.6, 4.0], [91.7, 4.0], [91.8, 4.0], [91.9, 4.0], [92.0, 5.0], [92.1, 5.0], [92.2, 5.0], [92.3, 5.0], [92.4, 5.0], [92.5, 5.0], [92.6, 5.0], [92.7, 5.0], [92.8, 5.0], [92.9, 5.0], [93.0, 36.0], [93.1, 36.0], [93.2, 36.0], [93.3, 36.0], [93.4, 36.0], [93.5, 36.0], [93.6, 36.0], [93.7, 36.0], [93.8, 36.0], [93.9, 36.0], [94.0, 121.0], [94.1, 121.0], [94.2, 121.0], [94.3, 121.0], [94.4, 121.0], [94.5, 121.0], [94.6, 121.0], [94.7, 121.0], [94.8, 121.0], [94.9, 121.0], [95.0, 201.0], [95.1, 201.0], [95.2, 201.0], [95.3, 201.0], [95.4, 201.0], [95.5, 201.0], [95.6, 201.0], [95.7, 201.0], [95.8, 201.0], [95.9, 201.0], [96.0, 349.0], [96.1, 349.0], [96.2, 349.0], [96.3, 349.0], [96.4, 349.0], [96.5, 349.0], [96.6, 349.0], [96.7, 349.0], [96.8, 349.0], [96.9, 349.0], [97.0, 502.0], [97.1, 502.0], [97.2, 502.0], [97.3, 502.0], [97.4, 502.0], [97.5, 502.0], [97.6, 502.0], [97.7, 502.0], [97.8, 502.0], [97.9, 502.0], [98.0, 651.0], [98.1, 651.0], [98.2, 651.0], [98.3, 651.0], [98.4, 651.0], [98.5, 651.0], [98.6, 651.0], [98.7, 651.0], [98.8, 651.0], [98.9, 651.0], [99.0, 791.0], [99.1, 791.0], [99.2, 791.0], [99.3, 791.0], [99.4, 791.0], [99.5, 791.0], [99.6, 791.0], [99.7, 791.0], [99.8, 791.0], [99.9, 791.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 3.0], [79.1, 3.0], [79.2, 3.0], [79.3, 3.0], [79.4, 3.0], [79.5, 3.0], [79.6, 3.0], [79.7, 3.0], [79.8, 3.0], [79.9, 3.0], [80.0, 3.0], [80.1, 3.0], [80.2, 3.0], [80.3, 3.0], [80.4, 3.0], [80.5, 3.0], [80.6, 3.0], [80.7, 3.0], [80.8, 3.0], [80.9, 3.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 3.0], [82.1, 3.0], [82.2, 3.0], [82.3, 3.0], [82.4, 3.0], [82.5, 3.0], [82.6, 3.0], [82.7, 3.0], [82.8, 3.0], [82.9, 3.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 4.0], [84.1, 4.0], [84.2, 4.0], [84.3, 4.0], [84.4, 4.0], [84.5, 4.0], [84.6, 4.0], [84.7, 4.0], [84.8, 4.0], [84.9, 4.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 4.0], [85.4, 4.0], [85.5, 4.0], [85.6, 4.0], [85.7, 4.0], [85.8, 4.0], [85.9, 4.0], [86.0, 5.0], [86.1, 5.0], [86.2, 5.0], [86.3, 5.0], [86.4, 5.0], [86.5, 5.0], [86.6, 5.0], [86.7, 5.0], [86.8, 5.0], [86.9, 5.0], [87.0, 7.0], [87.1, 7.0], [87.2, 7.0], [87.3, 7.0], [87.4, 7.0], [87.5, 7.0], [87.6, 7.0], [87.7, 7.0], [87.8, 7.0], [87.9, 7.0], [88.0, 7.0], [88.1, 7.0], [88.2, 7.0], [88.3, 7.0], [88.4, 7.0], [88.5, 7.0], [88.6, 7.0], [88.7, 7.0], [88.8, 7.0], [88.9, 7.0], [89.0, 8.0], [89.1, 8.0], [89.2, 8.0], [89.3, 8.0], [89.4, 8.0], [89.5, 8.0], [89.6, 8.0], [89.7, 8.0], [89.8, 8.0], [89.9, 8.0], [90.0, 14.0], [90.1, 14.0], [90.2, 14.0], [90.3, 14.0], [90.4, 14.0], [90.5, 14.0], [90.6, 14.0], [90.7, 14.0], [90.8, 14.0], [90.9, 14.0], [91.0, 27.0], [91.1, 27.0], [91.2, 27.0], [91.3, 27.0], [91.4, 27.0], [91.5, 27.0], [91.6, 27.0], [91.7, 27.0], [91.8, 27.0], [91.9, 27.0], [92.0, 72.0], [92.1, 72.0], [92.2, 72.0], [92.3, 72.0], [92.4, 72.0], [92.5, 72.0], [92.6, 72.0], [92.7, 72.0], [92.8, 72.0], [92.9, 72.0], [93.0, 111.0], [93.1, 111.0], [93.2, 111.0], [93.3, 111.0], [93.4, 111.0], [93.5, 111.0], [93.6, 111.0], [93.7, 111.0], [93.8, 111.0], [93.9, 111.0], [94.0, 327.0], [94.1, 327.0], [94.2, 327.0], [94.3, 327.0], [94.4, 327.0], [94.5, 327.0], [94.6, 327.0], [94.7, 327.0], [94.8, 327.0], [94.9, 327.0], [95.0, 330.0], [95.1, 330.0], [95.2, 330.0], [95.3, 330.0], [95.4, 330.0], [95.5, 330.0], [95.6, 330.0], [95.7, 330.0], [95.8, 330.0], [95.9, 330.0], [96.0, 331.0], [96.1, 331.0], [96.2, 331.0], [96.3, 331.0], [96.4, 331.0], [96.5, 331.0], [96.6, 331.0], [96.7, 331.0], [96.8, 331.0], [96.9, 331.0], [97.0, 334.0], [97.1, 334.0], [97.2, 334.0], [97.3, 334.0], [97.4, 334.0], [97.5, 334.0], [97.6, 334.0], [97.7, 334.0], [97.8, 334.0], [97.9, 334.0], [98.0, 335.0], [98.1, 335.0], [98.2, 335.0], [98.3, 335.0], [98.4, 335.0], [98.5, 335.0], [98.6, 335.0], [98.7, 335.0], [98.8, 335.0], [98.9, 335.0], [99.0, 336.0], [99.1, 336.0], [99.2, 336.0], [99.3, 336.0], [99.4, 336.0], [99.5, 336.0], [99.6, 336.0], [99.7, 336.0], [99.8, 336.0], [99.9, 336.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 24.0], [0.1, 26.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 28.0], [0.6, 28.0], [0.7, 28.0], [0.8, 29.0], [0.9, 29.0], [1.0, 29.0], [1.1, 29.0], [1.2, 29.0], [1.3, 29.0], [1.4, 29.0], [1.5, 30.0], [1.6, 30.0], [1.7, 30.0], [1.8, 30.0], [1.9, 30.0], [2.0, 30.0], [2.1, 30.0], [2.2, 30.0], [2.3, 30.0], [2.4, 30.0], [2.5, 30.0], [2.6, 30.0], [2.7, 30.0], [2.8, 31.0], [2.9, 31.0], [3.0, 31.0], [3.1, 31.0], [3.2, 31.0], [3.3, 31.0], [3.4, 31.0], [3.5, 31.0], [3.6, 31.0], [3.7, 31.0], [3.8, 31.0], [3.9, 32.0], [4.0, 32.0], [4.1, 32.0], [4.2, 32.0], [4.3, 32.0], [4.4, 32.0], [4.5, 32.0], [4.6, 32.0], [4.7, 32.0], [4.8, 32.0], [4.9, 32.0], [5.0, 32.0], [5.1, 32.0], [5.2, 32.0], [5.3, 33.0], [5.4, 33.0], [5.5, 33.0], [5.6, 33.0], [5.7, 33.0], [5.8, 33.0], [5.9, 33.0], [6.0, 33.0], [6.1, 33.0], [6.2, 33.0], [6.3, 33.0], [6.4, 33.0], [6.5, 34.0], [6.6, 34.0], [6.7, 34.0], [6.8, 34.0], [6.9, 34.0], [7.0, 34.0], [7.1, 34.0], [7.2, 34.0], [7.3, 34.0], [7.4, 34.0], [7.5, 34.0], [7.6, 34.0], [7.7, 34.0], [7.8, 34.0], [7.9, 34.0], [8.0, 35.0], [8.1, 35.0], [8.2, 35.0], [8.3, 35.0], [8.4, 35.0], [8.5, 35.0], [8.6, 35.0], [8.7, 35.0], [8.8, 35.0], [8.9, 35.0], [9.0, 35.0], [9.1, 35.0], [9.2, 35.0], [9.3, 35.0], [9.4, 36.0], [9.5, 36.0], [9.6, 36.0], [9.7, 36.0], [9.8, 36.0], [9.9, 36.0], [10.0, 36.0], [10.1, 36.0], [10.2, 36.0], [10.3, 36.0], [10.4, 36.0], [10.5, 36.0], [10.6, 36.0], [10.7, 36.0], [10.8, 37.0], [10.9, 37.0], [11.0, 37.0], [11.1, 37.0], [11.2, 37.0], [11.3, 37.0], [11.4, 37.0], [11.5, 37.0], [11.6, 37.0], [11.7, 37.0], [11.8, 37.0], [11.9, 38.0], [12.0, 38.0], [12.1, 38.0], [12.2, 38.0], [12.3, 38.0], [12.4, 38.0], [12.5, 38.0], [12.6, 38.0], [12.7, 38.0], [12.8, 38.0], [12.9, 38.0], [13.0, 38.0], [13.1, 39.0], [13.2, 39.0], [13.3, 39.0], [13.4, 39.0], [13.5, 39.0], [13.6, 39.0], [13.7, 39.0], [13.8, 39.0], [13.9, 39.0], [14.0, 39.0], [14.1, 39.0], [14.2, 40.0], [14.3, 40.0], [14.4, 40.0], [14.5, 40.0], [14.6, 40.0], [14.7, 40.0], [14.8, 40.0], [14.9, 40.0], [15.0, 40.0], [15.1, 40.0], [15.2, 40.0], [15.3, 41.0], [15.4, 41.0], [15.5, 41.0], [15.6, 41.0], [15.7, 41.0], [15.8, 41.0], [15.9, 41.0], [16.0, 41.0], [16.1, 41.0], [16.2, 41.0], [16.3, 41.0], [16.4, 42.0], [16.5, 42.0], [16.6, 42.0], [16.7, 42.0], [16.8, 42.0], [16.9, 42.0], [17.0, 42.0], [17.1, 42.0], [17.2, 42.0], [17.3, 42.0], [17.4, 42.0], [17.5, 42.0], [17.6, 43.0], [17.7, 43.0], [17.8, 43.0], [17.9, 43.0], [18.0, 43.0], [18.1, 43.0], [18.2, 43.0], [18.3, 43.0], [18.4, 43.0], [18.5, 44.0], [18.6, 44.0], [18.7, 44.0], [18.8, 44.0], [18.9, 44.0], [19.0, 44.0], [19.1, 44.0], [19.2, 44.0], [19.3, 44.0], [19.4, 44.0], [19.5, 45.0], [19.6, 45.0], [19.7, 45.0], [19.8, 45.0], [19.9, 45.0], [20.0, 45.0], [20.1, 45.0], [20.2, 45.0], [20.3, 46.0], [20.4, 46.0], [20.5, 46.0], [20.6, 46.0], [20.7, 46.0], [20.8, 46.0], [20.9, 46.0], [21.0, 46.0], [21.1, 46.0], [21.2, 46.0], [21.3, 47.0], [21.4, 47.0], [21.5, 47.0], [21.6, 47.0], [21.7, 47.0], [21.8, 47.0], [21.9, 47.0], [22.0, 47.0], [22.1, 47.0], [22.2, 47.0], [22.3, 48.0], [22.4, 48.0], [22.5, 48.0], [22.6, 48.0], [22.7, 48.0], [22.8, 48.0], [22.9, 48.0], [23.0, 48.0], [23.1, 48.0], [23.2, 49.0], [23.3, 49.0], [23.4, 49.0], [23.5, 49.0], [23.6, 49.0], [23.7, 49.0], [23.8, 49.0], [23.9, 49.0], [24.0, 49.0], [24.1, 50.0], [24.2, 50.0], [24.3, 50.0], [24.4, 50.0], [24.5, 50.0], [24.6, 50.0], [24.7, 51.0], [24.8, 51.0], [24.9, 51.0], [25.0, 51.0], [25.1, 51.0], [25.2, 51.0], [25.3, 52.0], [25.4, 52.0], [25.5, 52.0], [25.6, 52.0], [25.7, 52.0], [25.8, 52.0], [25.9, 52.0], [26.0, 52.0], [26.1, 52.0], [26.2, 52.0], [26.3, 53.0], [26.4, 53.0], [26.5, 53.0], [26.6, 53.0], [26.7, 53.0], [26.8, 53.0], [26.9, 54.0], [27.0, 54.0], [27.1, 54.0], [27.2, 54.0], [27.3, 54.0], [27.4, 55.0], [27.5, 55.0], [27.6, 55.0], [27.7, 55.0], [27.8, 55.0], [27.9, 55.0], [28.0, 55.0], [28.1, 55.0], [28.2, 56.0], [28.3, 56.0], [28.4, 56.0], [28.5, 56.0], [28.6, 56.0], [28.7, 56.0], [28.8, 56.0], [28.9, 57.0], [29.0, 57.0], [29.1, 57.0], [29.2, 57.0], [29.3, 57.0], [29.4, 57.0], [29.5, 57.0], [29.6, 58.0], [29.7, 58.0], [29.8, 58.0], [29.9, 58.0], [30.0, 58.0], [30.1, 58.0], [30.2, 59.0], [30.3, 59.0], [30.4, 59.0], [30.5, 59.0], [30.6, 59.0], [30.7, 59.0], [30.8, 60.0], [30.9, 60.0], [31.0, 60.0], [31.1, 60.0], [31.2, 60.0], [31.3, 60.0], [31.4, 60.0], [31.5, 61.0], [31.6, 61.0], [31.7, 61.0], [31.8, 61.0], [31.9, 61.0], [32.0, 61.0], [32.1, 62.0], [32.2, 62.0], [32.3, 62.0], [32.4, 62.0], [32.5, 62.0], [32.6, 62.0], [32.7, 63.0], [32.8, 63.0], [32.9, 63.0], [33.0, 63.0], [33.1, 63.0], [33.2, 63.0], [33.3, 63.0], [33.4, 64.0], [33.5, 64.0], [33.6, 64.0], [33.7, 64.0], [33.8, 64.0], [33.9, 65.0], [34.0, 65.0], [34.1, 65.0], [34.2, 65.0], [34.3, 65.0], [34.4, 66.0], [34.5, 66.0], [34.6, 66.0], [34.7, 66.0], [34.8, 66.0], [34.9, 67.0], [35.0, 67.0], [35.1, 67.0], [35.2, 67.0], [35.3, 67.0], [35.4, 67.0], [35.5, 67.0], [35.6, 68.0], [35.7, 68.0], [35.8, 68.0], [35.9, 68.0], [36.0, 68.0], [36.1, 68.0], [36.2, 68.0], [36.3, 69.0], [36.4, 69.0], [36.5, 69.0], [36.6, 69.0], [36.7, 69.0], [36.8, 70.0], [36.9, 70.0], [37.0, 70.0], [37.1, 70.0], [37.2, 70.0], [37.3, 71.0], [37.4, 71.0], [37.5, 71.0], [37.6, 71.0], [37.7, 71.0], [37.8, 71.0], [37.9, 72.0], [38.0, 72.0], [38.1, 72.0], [38.2, 72.0], [38.3, 72.0], [38.4, 72.0], [38.5, 73.0], [38.6, 73.0], [38.7, 73.0], [38.8, 73.0], [38.9, 73.0], [39.0, 74.0], [39.1, 74.0], [39.2, 74.0], [39.3, 74.0], [39.4, 74.0], [39.5, 75.0], [39.6, 75.0], [39.7, 75.0], [39.8, 75.0], [39.9, 76.0], [40.0, 76.0], [40.1, 76.0], [40.2, 76.0], [40.3, 76.0], [40.4, 77.0], [40.5, 77.0], [40.6, 77.0], [40.7, 77.0], [40.8, 78.0], [40.9, 78.0], [41.0, 78.0], [41.1, 79.0], [41.2, 79.0], [41.3, 79.0], [41.4, 79.0], [41.5, 80.0], [41.6, 80.0], [41.7, 81.0], [41.8, 81.0], [41.9, 81.0], [42.0, 82.0], [42.1, 82.0], [42.2, 82.0], [42.3, 82.0], [42.4, 83.0], [42.5, 83.0], [42.6, 83.0], [42.7, 83.0], [42.8, 83.0], [42.9, 84.0], [43.0, 84.0], [43.1, 84.0], [43.2, 84.0], [43.3, 85.0], [43.4, 85.0], [43.5, 86.0], [43.6, 86.0], [43.7, 86.0], [43.8, 87.0], [43.9, 87.0], [44.0, 87.0], [44.1, 88.0], [44.2, 88.0], [44.3, 88.0], [44.4, 88.0], [44.5, 89.0], [44.6, 89.0], [44.7, 89.0], [44.8, 89.0], [44.9, 90.0], [45.0, 90.0], [45.1, 90.0], [45.2, 90.0], [45.3, 91.0], [45.4, 91.0], [45.5, 91.0], [45.6, 91.0], [45.7, 92.0], [45.8, 92.0], [45.9, 92.0], [46.0, 93.0], [46.1, 93.0], [46.2, 94.0], [46.3, 94.0], [46.4, 94.0], [46.5, 95.0], [46.6, 95.0], [46.7, 95.0], [46.8, 96.0], [46.9, 96.0], [47.0, 97.0], [47.1, 97.0], [47.2, 97.0], [47.3, 98.0], [47.4, 98.0], [47.5, 98.0], [47.6, 99.0], [47.7, 99.0], [47.8, 99.0], [47.9, 99.0], [48.0, 100.0], [48.1, 100.0], [48.2, 101.0], [48.3, 101.0], [48.4, 102.0], [48.5, 102.0], [48.6, 103.0], [48.7, 103.0], [48.8, 103.0], [48.9, 103.0], [49.0, 104.0], [49.1, 104.0], [49.2, 105.0], [49.3, 105.0], [49.4, 106.0], [49.5, 106.0], [49.6, 107.0], [49.7, 107.0], [49.8, 107.0], [49.9, 108.0], [50.0, 108.0], [50.1, 108.0], [50.2, 109.0], [50.3, 109.0], [50.4, 110.0], [50.5, 110.0], [50.6, 110.0], [50.7, 111.0], [50.8, 111.0], [50.9, 112.0], [51.0, 112.0], [51.1, 112.0], [51.2, 113.0], [51.3, 113.0], [51.4, 114.0], [51.5, 114.0], [51.6, 115.0], [51.7, 115.0], [51.8, 116.0], [51.9, 116.0], [52.0, 116.0], [52.1, 117.0], [52.2, 117.0], [52.3, 117.0], [52.4, 118.0], [52.5, 118.0], [52.6, 120.0], [52.7, 120.0], [52.8, 121.0], [52.9, 122.0], [53.0, 122.0], [53.1, 123.0], [53.2, 123.0], [53.3, 124.0], [53.4, 124.0], [53.5, 125.0], [53.6, 125.0], [53.7, 126.0], [53.8, 127.0], [53.9, 127.0], [54.0, 128.0], [54.1, 128.0], [54.2, 129.0], [54.3, 130.0], [54.4, 130.0], [54.5, 130.0], [54.6, 131.0], [54.7, 132.0], [54.8, 133.0], [54.9, 134.0], [55.0, 134.0], [55.1, 135.0], [55.2, 135.0], [55.3, 135.0], [55.4, 136.0], [55.5, 136.0], [55.6, 137.0], [55.7, 138.0], [55.8, 139.0], [55.9, 140.0], [56.0, 140.0], [56.1, 141.0], [56.2, 141.0], [56.3, 142.0], [56.4, 142.0], [56.5, 143.0], [56.6, 143.0], [56.7, 144.0], [56.8, 144.0], [56.9, 145.0], [57.0, 146.0], [57.1, 147.0], [57.2, 147.0], [57.3, 148.0], [57.4, 149.0], [57.5, 150.0], [57.6, 150.0], [57.7, 151.0], [57.8, 152.0], [57.9, 153.0], [58.0, 154.0], [58.1, 154.0], [58.2, 155.0], [58.3, 156.0], [58.4, 157.0], [58.5, 159.0], [58.6, 159.0], [58.7, 160.0], [58.8, 162.0], [58.9, 162.0], [59.0, 163.0], [59.1, 164.0], [59.2, 165.0], [59.3, 165.0], [59.4, 166.0], [59.5, 167.0], [59.6, 168.0], [59.7, 169.0], [59.8, 169.0], [59.9, 171.0], [60.0, 172.0], [60.1, 173.0], [60.2, 174.0], [60.3, 175.0], [60.4, 176.0], [60.5, 176.0], [60.6, 177.0], [60.7, 178.0], [60.8, 179.0], [60.9, 182.0], [61.0, 183.0], [61.1, 184.0], [61.2, 185.0], [61.3, 186.0], [61.4, 187.0], [61.5, 188.0], [61.6, 190.0], [61.7, 191.0], [61.8, 192.0], [61.9, 193.0], [62.0, 194.0], [62.1, 195.0], [62.2, 196.0], [62.3, 197.0], [62.4, 199.0], [62.5, 200.0], [62.6, 201.0], [62.7, 201.0], [62.8, 202.0], [62.9, 202.0], [63.0, 204.0], [63.1, 206.0], [63.2, 206.0], [63.3, 208.0], [63.4, 209.0], [63.5, 210.0], [63.6, 211.0], [63.7, 212.0], [63.8, 213.0], [63.9, 213.0], [64.0, 214.0], [64.1, 216.0], [64.2, 217.0], [64.3, 218.0], [64.4, 219.0], [64.5, 221.0], [64.6, 223.0], [64.7, 224.0], [64.8, 225.0], [64.9, 227.0], [65.0, 228.0], [65.1, 229.0], [65.2, 231.0], [65.3, 233.0], [65.4, 233.0], [65.5, 234.0], [65.6, 235.0], [65.7, 238.0], [65.8, 239.0], [65.9, 241.0], [66.0, 243.0], [66.1, 245.0], [66.2, 245.0], [66.3, 247.0], [66.4, 249.0], [66.5, 250.0], [66.6, 251.0], [66.7, 252.0], [66.8, 255.0], [66.9, 257.0], [67.0, 259.0], [67.1, 260.0], [67.2, 261.0], [67.3, 263.0], [67.4, 265.0], [67.5, 266.0], [67.6, 267.0], [67.7, 268.0], [67.8, 268.0], [67.9, 269.0], [68.0, 270.0], [68.1, 271.0], [68.2, 272.0], [68.3, 277.0], [68.4, 277.0], [68.5, 279.0], [68.6, 280.0], [68.7, 281.0], [68.8, 283.0], [68.9, 285.0], [69.0, 287.0], [69.1, 289.0], [69.2, 291.0], [69.3, 291.0], [69.4, 292.0], [69.5, 296.0], [69.6, 298.0], [69.7, 300.0], [69.8, 301.0], [69.9, 302.0], [70.0, 307.0], [70.1, 308.0], [70.2, 309.0], [70.3, 311.0], [70.4, 312.0], [70.5, 314.0], [70.6, 316.0], [70.7, 319.0], [70.8, 323.0], [70.9, 324.0], [71.0, 327.0], [71.1, 328.0], [71.2, 329.0], [71.3, 333.0], [71.4, 343.0], [71.5, 345.0], [71.6, 347.0], [71.7, 351.0], [71.8, 353.0], [71.9, 355.0], [72.0, 356.0], [72.1, 358.0], [72.2, 361.0], [72.3, 362.0], [72.4, 364.0], [72.5, 368.0], [72.6, 370.0], [72.7, 372.0], [72.8, 375.0], [72.9, 376.0], [73.0, 378.0], [73.1, 379.0], [73.2, 386.0], [73.3, 390.0], [73.4, 394.0], [73.5, 397.0], [73.6, 400.0], [73.7, 402.0], [73.8, 404.0], [73.9, 407.0], [74.0, 411.0], [74.1, 414.0], [74.2, 419.0], [74.3, 421.0], [74.4, 423.0], [74.5, 428.0], [74.6, 431.0], [74.7, 436.0], [74.8, 439.0], [74.9, 441.0], [75.0, 443.0], [75.1, 451.0], [75.2, 456.0], [75.3, 458.0], [75.4, 461.0], [75.5, 464.0], [75.6, 467.0], [75.7, 471.0], [75.8, 475.0], [75.9, 480.0], [76.0, 483.0], [76.1, 485.0], [76.2, 489.0], [76.3, 490.0], [76.4, 493.0], [76.5, 495.0], [76.6, 498.0], [76.7, 500.0], [76.8, 502.0], [76.9, 505.0], [77.0, 507.0], [77.1, 509.0], [77.2, 512.0], [77.3, 515.0], [77.4, 519.0], [77.5, 525.0], [77.6, 530.0], [77.7, 531.0], [77.8, 533.0], [77.9, 537.0], [78.0, 538.0], [78.1, 540.0], [78.2, 542.0], [78.3, 545.0], [78.4, 548.0], [78.5, 552.0], [78.6, 556.0], [78.7, 558.0], [78.8, 564.0], [78.9, 568.0], [79.0, 570.0], [79.1, 574.0], [79.2, 577.0], [79.3, 582.0], [79.4, 583.0], [79.5, 587.0], [79.6, 590.0], [79.7, 592.0], [79.8, 598.0], [79.9, 601.0], [80.0, 606.0], [80.1, 610.0], [80.2, 612.0], [80.3, 615.0], [80.4, 617.0], [80.5, 624.0], [80.6, 628.0], [80.7, 634.0], [80.8, 640.0], [80.9, 645.0], [81.0, 648.0], [81.1, 654.0], [81.2, 657.0], [81.3, 659.0], [81.4, 664.0], [81.5, 666.0], [81.6, 668.0], [81.7, 672.0], [81.8, 677.0], [81.9, 685.0], [82.0, 688.0], [82.1, 692.0], [82.2, 695.0], [82.3, 700.0], [82.4, 702.0], [82.5, 706.0], [82.6, 712.0], [82.7, 715.0], [82.8, 717.0], [82.9, 721.0], [83.0, 726.0], [83.1, 727.0], [83.2, 731.0], [83.3, 738.0], [83.4, 743.0], [83.5, 746.0], [83.6, 751.0], [83.7, 756.0], [83.8, 761.0], [83.9, 763.0], [84.0, 768.0], [84.1, 775.0], [84.2, 782.0], [84.3, 787.0], [84.4, 788.0], [84.5, 794.0], [84.6, 801.0], [84.7, 807.0], [84.8, 810.0], [84.9, 817.0], [85.0, 823.0], [85.1, 828.0], [85.2, 832.0], [85.3, 834.0], [85.4, 835.0], [85.5, 843.0], [85.6, 854.0], [85.7, 861.0], [85.8, 869.0], [85.9, 878.0], [86.0, 881.0], [86.1, 883.0], [86.2, 890.0], [86.3, 902.0], [86.4, 915.0], [86.5, 925.0], [86.6, 930.0], [86.7, 934.0], [86.8, 938.0], [86.9, 947.0], [87.0, 955.0], [87.1, 959.0], [87.2, 963.0], [87.3, 969.0], [87.4, 974.0], [87.5, 981.0], [87.6, 989.0], [87.7, 995.0], [87.8, 999.0], [87.9, 1001.0], [88.0, 1005.0], [88.1, 1011.0], [88.2, 1014.0], [88.3, 1016.0], [88.4, 1019.0], [88.5, 1026.0], [88.6, 1031.0], [88.7, 1039.0], [88.8, 1042.0], [88.9, 1048.0], [89.0, 1052.0], [89.1, 1061.0], [89.2, 1068.0], [89.3, 1081.0], [89.4, 1082.0], [89.5, 1088.0], [89.6, 1091.0], [89.7, 1097.0], [89.8, 1103.0], [89.9, 1107.0], [90.0, 1117.0], [90.1, 1127.0], [90.2, 1140.0], [90.3, 1162.0], [90.4, 1170.0], [90.5, 1179.0], [90.6, 1186.0], [90.7, 1189.0], [90.8, 1197.0], [90.9, 1208.0], [91.0, 1216.0], [91.1, 1221.0], [91.2, 1228.0], [91.3, 1237.0], [91.4, 1242.0], [91.5, 1248.0], [91.6, 1251.0], [91.7, 1255.0], [91.8, 1265.0], [91.9, 1274.0], [92.0, 1279.0], [92.1, 1285.0], [92.2, 1295.0], [92.3, 1307.0], [92.4, 1318.0], [92.5, 1323.0], [92.6, 1328.0], [92.7, 1341.0], [92.8, 1354.0], [92.9, 1366.0], [93.0, 1370.0], [93.1, 1373.0], [93.2, 1377.0], [93.3, 1388.0], [93.4, 1395.0], [93.5, 1410.0], [93.6, 1413.0], [93.7, 1417.0], [93.8, 1428.0], [93.9, 1432.0], [94.0, 1440.0], [94.1, 1450.0], [94.2, 1457.0], [94.3, 1473.0], [94.4, 1488.0], [94.5, 1496.0], [94.6, 1508.0], [94.7, 1513.0], [94.8, 1522.0], [94.9, 1542.0], [95.0, 1559.0], [95.1, 1573.0], [95.2, 1587.0], [95.3, 1606.0], [95.4, 1642.0], [95.5, 1663.0], [95.6, 1679.0], [95.7, 1692.0], [95.8, 1707.0], [95.9, 1722.0], [96.0, 1738.0], [96.1, 1750.0], [96.2, 1757.0], [96.3, 1771.0], [96.4, 1781.0], [96.5, 1794.0], [96.6, 1807.0], [96.7, 1826.0], [96.8, 1847.0], [96.9, 1857.0], [97.0, 1881.0], [97.1, 1905.0], [97.2, 1928.0], [97.3, 1974.0], [97.4, 1987.0], [97.5, 2018.0], [97.6, 2038.0], [97.7, 2070.0], [97.8, 2111.0], [97.9, 2139.0], [98.0, 2173.0], [98.1, 2190.0], [98.2, 2198.0], [98.3, 2234.0], [98.4, 2284.0], [98.5, 2298.0], [98.6, 2323.0], [98.7, 2396.0], [98.8, 2552.0], [98.9, 2635.0], [99.0, 2773.0], [99.1, 2894.0], [99.2, 3016.0], [99.3, 3212.0], [99.4, 3401.0], [99.5, 3589.0], [99.6, 3972.0], [99.7, 4127.0], [99.8, 4357.0], [99.9, 5067.0], [100.0, 7878.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2881.0, "series": [{"data": [[0.0, 1311.0], [600.0, 401.0], [700.0, 354.0], [800.0, 251.0], [900.0, 191.0], [1000.0, 185.0], [1100.0, 218.0], [1200.0, 228.0], [1300.0, 190.0], [1400.0, 166.0], [1500.0, 115.0], [1600.0, 71.0], [1700.0, 76.0], [1800.0, 47.0], [1900.0, 33.0], [2000.0, 35.0], [2100.0, 31.0], [2300.0, 27.0], [2200.0, 20.0], [2400.0, 19.0], [2500.0, 25.0], [2600.0, 11.0], [2700.0, 10.0], [2800.0, 7.0], [2900.0, 6.0], [3000.0, 4.0], [3100.0, 4.0], [3300.0, 7.0], [3200.0, 3.0], [3400.0, 8.0], [3500.0, 2.0], [3600.0, 5.0], [3700.0, 2.0], [3800.0, 2.0], [3900.0, 2.0], [4200.0, 1.0], [4100.0, 1.0], [4300.0, 1.0], [4600.0, 1.0], [4500.0, 2.0], [5500.0, 1.0], [5700.0, 1.0], [6600.0, 4.0], [6800.0, 1.0], [7400.0, 1.0], [13300.0, 1.0], [22200.0, 1.0], [100.0, 2881.0], [200.0, 1847.0], [300.0, 1930.0], [400.0, 1084.0], [500.0, 718.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 94.0], [600.0, 1.0], [300.0, 1.0], [700.0, 1.0], [200.0, 1.0], [100.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 93.0], [300.0, 6.0], [100.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 1983.0], [600.0, 101.0], [700.0, 93.0], [800.0, 73.0], [900.0, 64.0], [1000.0, 79.0], [1100.0, 46.0], [1200.0, 57.0], [1300.0, 49.0], [1400.0, 45.0], [1500.0, 30.0], [100.0, 601.0], [1600.0, 22.0], [1700.0, 31.0], [1800.0, 22.0], [1900.0, 16.0], [2000.0, 13.0], [2100.0, 19.0], [2200.0, 12.0], [2300.0, 9.0], [2400.0, 1.0], [2500.0, 4.0], [2600.0, 5.0], [2800.0, 4.0], [2700.0, 2.0], [2900.0, 2.0], [3000.0, 4.0], [3100.0, 1.0], [200.0, 298.0], [3200.0, 5.0], [3400.0, 2.0], [3500.0, 3.0], [3600.0, 1.0], [3900.0, 4.0], [4000.0, 2.0], [4300.0, 2.0], [4100.0, 4.0], [4400.0, 1.0], [300.0, 163.0], [4700.0, 1.0], [5000.0, 1.0], [5200.0, 1.0], [400.0, 127.0], [6800.0, 1.0], [7400.0, 1.0], [7800.0, 1.0], [500.0, 132.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 22200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 814.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 12431.0, "series": [{"data": [[0.0, 12431.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3636.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 814.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 26.52898239587804, "minX": 1.61726952E12, "maxY": 76.55917330562289, "series": [{"data": [[1.61726952E12, 26.52898239587804], [1.61726958E12, 76.55917330562289], [1.61726964E12, 55.14462739772524]], "isOverall": false, "label": "jp@gc - Stepping Thread Group (deprecated)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61726964E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 1278.1764705882351, "series": [{"data": [[2.0, 67.0], [5.0, 77.0], [7.0, 82.0], [8.0, 85.0], [9.0, 83.0], [10.0, 87.48201438848918], [11.0, 49.0], [12.0, 169.5], [13.0, 165.5], [14.0, 92.66666666666666], [15.0, 143.66666666666666], [16.0, 406.5], [17.0, 179.0], [18.0, 755.0], [19.0, 1102.4374999999998], [20.0, 165.71657754010687], [21.0, 114.0], [22.0, 115.45454545454545], [23.0, 219.90909090909088], [24.0, 164.19999999999996], [25.0, 159.4109414758271], [26.0, 211.89999999999998], [27.0, 158.90909090909093], [28.0, 111.33333333333334], [29.0, 211.2105263157895], [30.0, 261.4000000000001], [31.0, 261.55555555555554], [32.0, 252.99999999999997], [33.0, 202.07692307692307], [34.0, 261.58333333333337], [35.0, 286.8965517241379], [36.0, 155.00000000000003], [37.0, 191.6842105263158], [38.0, 242.54999999999998], [39.0, 199.8846153846154], [40.0, 304.22427293064834], [41.0, 288.6857142857143], [42.0, 351.4117647058824], [43.0, 277.96000000000004], [44.0, 262.78571428571433], [45.0, 387.6923076923076], [46.0, 431.81818181818187], [47.0, 290.7222222222223], [48.0, 808.875], [49.0, 412.9736842105263], [50.0, 398.35135135135135], [51.0, 296.86842105263145], [52.0, 371.26666666666665], [53.0, 281.909090909091], [54.0, 397.7058823529413], [55.0, 436.3268608414241], [56.0, 680.4857142857145], [57.0, 429.686274509804], [58.0, 557.9047619047618], [59.0, 613.5714285714286], [60.0, 500.01714801444024], [61.0, 599.9523809523811], [62.0, 516.9999999999999], [63.0, 891.6666666666666], [64.0, 1239.8], [65.0, 883.88], [66.0, 776.1111111111111], [67.0, 616.5], [68.0, 444.46875000000006], [69.0, 651.5185185185185], [70.0, 604.6144200626956], [71.0, 712.7812499999999], [72.0, 731.2164179104476], [73.0, 830.031746031746], [74.0, 638.4666666666667], [75.0, 564.8], [76.0, 425.3214285714286], [77.0, 411.99999999999994], [78.0, 504.44], [79.0, 618.7499999999999], [80.0, 800.1422172452413], [81.0, 717.6842105263158], [82.0, 870.04], [83.0, 1039.4193548387098], [84.0, 890.2727272727274], [85.0, 970.1017441860466], [86.0, 657.5686274509806], [87.0, 760.9038461538461], [88.0, 802.0], [89.0, 1278.1764705882351], [90.0, 676.0], [91.0, 574.3846153846154], [92.0, 948.0769230769231], [93.0, 1057.2500000000002], [94.0, 646.3888888888889], [95.0, 749.388888888889], [96.0, 1025.1], [97.0, 779.8235294117648], [98.0, 845.9444444444443], [99.0, 936.7], [100.0, 597.9836520666262], [1.0, 68.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[62.26181934146489, 473.03755082516216]], "isOverall": false, "label": "VNE-GET-bongda-Aggregated", "isController": false}, {"data": [[6.0, 421.66666666666663], [7.0, 121.0], [8.0, 1.0], [9.0, 1.0], [10.0, 3.0], [11.0, 4.0], [12.0, 1.0], [13.0, 1.0], [14.0, 0.0], [15.0, 0.0], [16.0, 1.0], [17.0, 0.0], [18.0, 1.0], [19.0, 1.0], [20.0, 0.0], [21.0, 1.0], [22.0, 1.0], [23.0, 1.0], [24.0, 2.0], [25.0, 1.0], [26.0, 1.0], [27.0, 0.0], [28.0, 0.0], [29.0, 0.0], [30.0, 1.0], [31.0, 1.0], [32.0, 0.0], [33.0, 0.0], [34.0, 0.0], [35.0, 1.0], [36.0, 0.0], [37.0, 0.0], [38.0, 1.0], [39.0, 0.0], [40.0, 0.0], [41.0, 1.0], [42.0, 5.0], [43.0, 1.0], [44.0, 0.0], [45.0, 1.0], [46.0, 0.0], [47.0, 0.0], [48.0, 0.0], [49.0, 0.0], [50.0, 1.0], [51.0, 3.0], [52.0, 0.0], [53.0, 1.0], [54.0, 0.0], [55.0, 1.0], [56.0, 1.0], [57.0, 1.0], [58.0, 0.0], [59.0, 0.0], [60.0, 0.0], [61.0, 2.0], [62.0, 1.0], [63.0, 0.0], [64.0, 2.0], [65.0, 0.0], [66.0, 0.0], [67.0, 0.0], [68.0, 1.0], [69.0, 1.0], [70.0, 0.0], [71.0, 0.0], [72.0, 1.0], [73.0, 1.0], [74.0, 0.0], [75.0, 0.0], [76.0, 0.0], [77.0, 1.0], [78.0, 1.0], [79.0, 0.0], [80.0, 1.0], [81.0, 0.0], [82.0, 2.0], [83.0, 2.0], [84.0, 0.0], [85.0, 0.0], [86.0, 0.0], [87.0, 1.0], [88.0, 1.0], [89.0, 0.0], [90.0, 2.0], [91.0, 4.0], [92.0, 1.0], [93.0, 0.0], [94.0, 0.0], [95.0, 0.0], [96.0, 1.0], [97.0, 1.0], [98.0, 0.0], [99.0, 0.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[50.64999999999999, 27.189999999999994]], "isOverall": false, "label": "PROF - VNE - Test 01-Aggregated", "isController": false}, {"data": [[8.0, 272.0], [9.0, 27.0], [10.0, 1.0], [11.0, 2.0], [12.0, 2.0], [13.0, 2.0], [14.0, 1.0], [15.0, 2.0], [16.0, 3.0], [17.0, 1.0], [18.0, 1.0], [19.0, 4.0], [20.0, 1.0], [21.0, 1.0], [22.0, 1.0], [23.0, 1.0], [24.0, 3.0], [25.0, 0.0], [26.0, 1.0], [27.0, 1.0], [28.0, 2.0], [29.0, 1.0], [30.0, 0.0], [31.0, 1.0], [32.0, 1.0], [33.0, 1.0], [34.0, 1.0], [35.0, 0.0], [36.0, 7.0], [37.0, 1.0], [38.0, 0.0], [39.0, 1.0], [40.0, 1.0], [41.0, 0.0], [42.0, 1.0], [43.0, 7.0], [44.0, 3.0], [45.0, 1.0], [46.0, 2.0], [47.0, 1.0], [48.0, 1.0], [49.0, 1.0], [50.0, 1.0], [51.0, 2.0], [52.0, 1.0], [53.0, 8.0], [54.0, 1.0], [55.0, 3.0], [56.0, 0.0], [57.0, 0.0], [58.0, 1.0], [59.0, 1.0], [60.0, 0.0], [61.0, 3.0], [62.0, 1.0], [63.0, 1.0], [64.0, 14.0], [65.0, 1.0], [66.0, 1.0], [67.0, 5.0], [68.0, 1.0], [69.0, 1.0], [70.0, 0.0], [71.0, 1.0], [72.0, 4.0], [73.0, 0.0], [74.0, 1.0], [75.0, 1.0], [76.0, 1.0], [77.0, 0.0], [78.0, 1.0], [79.0, 2.0], [80.0, 1.0], [81.0, 1.0], [82.0, 0.0], [83.0, 1.0], [84.0, 1.0], [85.0, 1.0], [86.0, 1.0], [87.0, 2.0], [88.0, 0.0], [89.0, 1.0], [90.0, 0.0], [91.0, 1.0], [92.0, 0.0], [93.0, 1.0], [94.0, 0.0], [95.0, 0.0], [96.0, 0.0], [97.0, 0.0], [98.0, 1.0], [99.0, 0.0], [100.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[50.78, 23.349999999999984]], "isOverall": false, "label": "PROF - VNE - Random main action-Aggregated", "isController": false}, {"data": [[3.0, 71.0], [10.0, 49.096774193548384], [11.0, 285.0], [12.0, 204.0], [14.0, 263.5], [16.0, 28.0], [17.0, 119.0], [18.0, 234.0], [19.0, 153.0], [20.0, 156.83012820512823], [21.0, 76.375], [22.0, 76.33333333333333], [23.0, 128.0], [24.0, 77.75], [25.0, 68.44401544401538], [26.0, 62.63636363636363], [27.0, 99.37500000000001], [28.0, 80.5], [29.0, 41.333333333333336], [30.0, 62.75], [31.0, 44.0], [32.0, 111.77777777777777], [33.0, 80.5], [34.0, 44.0], [35.0, 250.0], [36.0, 128.8823529411765], [37.0, 58.4], [38.0, 82.25], [39.0, 106.71428571428571], [40.0, 130.5673876871882], [41.0, 87.66666666666667], [42.0, 169.0], [43.0, 270.11111111111114], [44.0, 287.25], [45.0, 184.6315789473684], [46.0, 88.71428571428571], [47.0, 55.5], [48.0, 80.14285714285714], [49.0, 179.88888888888889], [50.0, 66.11764705882354], [51.0, 60.4], [52.0, 123.66666666666666], [53.0, 259.25], [54.0, 186.125], [55.0, 73.10328638497654], [56.0, 143.44444444444446], [57.0, 56.625], [59.0, 226.33333333333331], [60.0, 126.13031914893632], [61.0, 110.11111111111111], [62.0, 233.25], [63.0, 804.0], [65.0, 642.3333333333334], [66.0, 911.0], [67.0, 797.0], [64.0, 57.0], [68.0, 393.3529411764706], [69.0, 231.66666666666663], [71.0, 198.0], [70.0, 68.04629629629632], [74.0, 346.90000000000003], [75.0, 281.125], [73.0, 59.58333333333333], [72.0, 76.13157894736841], [76.0, 376.25], [77.0, 618.5833333333334], [78.0, 844.2], [79.0, 457.64516129032245], [80.0, 198.54421768707482], [81.0, 307.75], [82.0, 954.875], [83.0, 403.33333333333337], [84.0, 547.5], [85.0, 176.83695652173915], [86.0, 181.5], [87.0, 435.21428571428567], [88.0, 653.8333333333334], [89.0, 814.0], [90.0, 871.5], [92.0, 828.0], [93.0, 843.4], [94.0, 944.8571428571428], [95.0, 592.8888888888889], [96.0, 545.25], [97.0, 1083.0], [98.0, 657.2499999999999], [99.0, 457.5], [100.0, 981.8306451612898]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}, {"data": [[62.50096665055565, 377.3576607056539]], "isOverall": false, "label": "VNE-GET-quansu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 20442.15, "minX": 1.61726952E12, "maxY": 9757210.016666668, "series": [{"data": [[1.61726952E12, 2557992.683333333], [1.61726958E12, 9757210.016666668], [1.61726964E12, 6740012.066666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61726952E12, 20442.15], [1.61726958E12, 77509.25], [1.61726964E12, 53431.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61726964E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.7166666666666663, "minX": 1.61726952E12, "maxY": 546.3331760264283, "series": [{"data": [[1.61726952E12, 208.38797169811312], [1.61726958E12, 542.5604173154776], [1.61726964E12, 473.5731073446315]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61726952E12, 66.89999999999999], [1.61726958E12, 0.7166666666666663]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61726952E12, 56.199999999999974], [1.61726958E12, 1.4500000000000002]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61726952E12, 151.94213381555147], [1.61726958E12, 546.3331760264283], [1.61726964E12, 218.14597544338386]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61726964E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61726952E12, "maxY": 410.71096045197817, "series": [{"data": [[1.61726952E12, 169.36084905660363], [1.61726958E12, 408.82404235440674], [1.61726964E12, 410.71096045197817]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61726952E12, 0.0], [1.61726958E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61726952E12, 0.0], [1.61726958E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61726952E12, 29.566003616636518], [1.61726958E12, 44.61491269466728], [1.61726964E12, 31.616643929058668]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61726964E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61726952E12, "maxY": 331.9012429378537, "series": [{"data": [[1.61726952E12, 120.83254716981135], [1.61726958E12, 321.52257863593894], [1.61726964E12, 331.9012429378537]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61726952E12, 0.0], [1.61726958E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61726952E12, 0.0], [1.61726958E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61726952E12, 0.0], [1.61726958E12, 0.10476639924492681], [1.61726964E12, 0.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61726964E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61726952E12, "maxY": 22214.0, "series": [{"data": [[1.61726952E12, 1754.0], [1.61726958E12, 7495.0], [1.61726964E12, 22214.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61726952E12, 338.0], [1.61726958E12, 1276.8000000000002], [1.61726964E12, 1129.6000000000004]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61726952E12, 1036.3999999999687], [1.61726958E12, 2768.0399999999936], [1.61726964E12, 2357.319999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61726952E12, 442.0], [1.61726958E12, 1672.7999999999993], [1.61726964E12, 1455.3999999999996]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61726952E12, 0.0], [1.61726958E12, 0.0], [1.61726964E12, 24.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61726952E12, 156.0], [1.61726958E12, 338.0], [1.61726964E12, 236.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61726964E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.5, "minX": 14.0, "maxY": 2051.0, "series": [{"data": [[14.0, 1.5], [18.0, 328.5], [23.0, 52.0], [29.0, 50.0], [34.0, 2051.0], [37.0, 406.0], [38.0, 948.5], [52.0, 1741.0], [56.0, 857.0], [61.0, 797.0], [65.0, 321.0], [70.0, 217.5], [79.0, 447.0], [83.0, 463.5], [84.0, 219.5], [87.0, 508.0], [85.0, 1511.0], [91.0, 502.0], [99.0, 188.0], [102.0, 459.5], [100.0, 308.0], [109.0, 279.0], [111.0, 1070.0], [114.0, 162.0], [117.0, 519.0], [121.0, 189.5], [123.0, 358.0], [122.0, 533.0], [124.0, 423.0], [126.0, 407.5], [127.0, 391.0], [135.0, 97.0], [130.0, 89.0], [131.0, 333.0], [129.0, 291.0], [128.0, 613.5], [133.0, 428.0], [132.0, 505.0], [134.0, 54.5], [142.0, 394.5], [139.0, 267.0], [141.0, 450.5], [137.0, 759.5], [138.0, 362.5], [143.0, 483.0], [136.0, 606.0], [150.0, 208.5], [145.0, 523.0], [146.0, 488.0], [149.0, 55.0], [158.0, 118.0], [155.0, 269.0], [156.0, 361.0], [159.0, 390.5], [163.0, 102.0], [167.0, 147.5], [165.0, 287.0], [166.0, 56.0], [172.0, 125.0], [171.0, 433.0], [170.0, 498.5], [174.0, 254.5], [173.0, 296.0], [168.0, 244.0], [169.0, 123.0], [182.0, 274.0], [183.0, 190.0], [176.0, 332.5], [179.0, 164.0], [181.0, 245.0], [188.0, 238.0], [185.0, 329.0], [190.0, 152.0], [194.0, 165.5], [199.0, 214.0], [195.0, 431.0], [192.0, 130.5], [204.0, 168.0], [200.0, 188.5], [213.0, 170.0], [210.0, 391.0], [221.0, 155.0], [223.0, 456.0], [225.0, 277.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 225.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 14.0, "maxY": 1698.0, "series": [{"data": [[14.0, 0.0], [18.0, 0.0], [23.0, 49.0], [29.0, 46.0], [34.0, 1698.0], [37.0, 318.0], [38.0, 606.0], [52.0, 1358.0], [56.0, 532.0], [61.0, 475.0], [65.0, 202.0], [70.0, 182.0], [79.0, 262.0], [83.0, 362.0], [84.0, 130.0], [87.0, 365.0], [85.0, 907.0], [91.0, 370.0], [99.0, 117.0], [102.0, 114.0], [100.0, 230.5], [109.0, 251.0], [111.0, 653.0], [114.0, 104.5], [117.0, 142.0], [121.0, 117.0], [123.0, 209.0], [122.0, 174.5], [124.0, 258.0], [126.0, 161.5], [127.0, 92.0], [135.0, 78.0], [130.0, 72.0], [131.0, 324.0], [129.0, 79.0], [128.0, 560.5], [133.0, 82.0], [132.0, 134.0], [134.0, 47.5], [142.0, 174.0], [139.0, 78.0], [141.0, 419.5], [137.0, 729.5], [138.0, 136.0], [143.0, 110.5], [136.0, 91.5], [150.0, 176.5], [145.0, 105.5], [146.0, 328.0], [149.0, 47.0], [158.0, 95.0], [155.0, 144.0], [156.0, 100.5], [159.0, 97.0], [163.0, 83.0], [167.0, 113.0], [165.0, 279.0], [166.0, 48.0], [172.0, 74.0], [171.0, 358.0], [170.0, 466.0], [174.0, 230.5], [173.0, 276.0], [168.0, 226.0], [169.0, 82.0], [182.0, 222.5], [183.0, 155.0], [176.0, 297.0], [179.0, 144.0], [181.0, 230.0], [188.0, 176.5], [185.0, 307.0], [190.0, 128.0], [194.0, 130.0], [199.0, 165.0], [195.0, 416.0], [192.0, 109.5], [204.0, 133.5], [200.0, 133.5], [213.0, 144.0], [210.0, 376.0], [221.0, 133.0], [223.0, 374.0], [225.0, 169.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 225.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 39.483333333333334, "minX": 1.61726952E12, "maxY": 145.33333333333334, "series": [{"data": [[1.61726952E12, 39.483333333333334], [1.61726958E12, 145.33333333333334], [1.61726964E12, 96.53333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61726964E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 38.81666666666667, "minX": 1.61726952E12, "maxY": 144.35, "series": [{"data": [[1.61726952E12, 38.81666666666667], [1.61726958E12, 144.35], [1.61726964E12, 98.18333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61726964E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.6666666666666666, "minX": 1.61726952E12, "maxY": 107.03333333333333, "series": [{"data": [[1.61726952E12, 0.6666666666666666], [1.61726958E12, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action-success", "isController": false}, {"data": [[1.61726952E12, 9.216666666666667], [1.61726958E12, 35.31666666666667], [1.61726964E12, 24.433333333333334]], "isOverall": false, "label": "VNE-GET-quansu-success", "isController": false}, {"data": [[1.61726952E12, 0.6666666666666666], [1.61726958E12, 1.0]], "isOverall": false, "label": "PROF - VNE - Test 01-success", "isController": false}, {"data": [[1.61726952E12, 28.266666666666666], [1.61726958E12, 107.03333333333333], [1.61726964E12, 73.75]], "isOverall": false, "label": "VNE-GET-bongda-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61726964E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 38.81666666666667, "minX": 1.61726952E12, "maxY": 144.35, "series": [{"data": [[1.61726952E12, 38.81666666666667], [1.61726958E12, 144.35], [1.61726964E12, 98.18333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61726964E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

