/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 16928.0, "series": [{"data": [[0.0, 44.0], [0.1, 46.0], [0.2, 47.0], [0.3, 48.0], [0.4, 49.0], [0.5, 50.0], [0.6, 51.0], [0.7, 51.0], [0.8, 53.0], [0.9, 53.0], [1.0, 54.0], [1.1, 55.0], [1.2, 56.0], [1.3, 57.0], [1.4, 57.0], [1.5, 58.0], [1.6, 59.0], [1.7, 60.0], [1.8, 61.0], [1.9, 61.0], [2.0, 62.0], [2.1, 63.0], [2.2, 63.0], [2.3, 64.0], [2.4, 64.0], [2.5, 65.0], [2.6, 66.0], [2.7, 66.0], [2.8, 67.0], [2.9, 67.0], [3.0, 68.0], [3.1, 69.0], [3.2, 69.0], [3.3, 70.0], [3.4, 71.0], [3.5, 72.0], [3.6, 72.0], [3.7, 73.0], [3.8, 73.0], [3.9, 74.0], [4.0, 75.0], [4.1, 76.0], [4.2, 77.0], [4.3, 77.0], [4.4, 78.0], [4.5, 79.0], [4.6, 80.0], [4.7, 80.0], [4.8, 81.0], [4.9, 82.0], [5.0, 82.0], [5.1, 83.0], [5.2, 83.0], [5.3, 84.0], [5.4, 85.0], [5.5, 85.0], [5.6, 86.0], [5.7, 86.0], [5.8, 86.0], [5.9, 87.0], [6.0, 87.0], [6.1, 88.0], [6.2, 88.0], [6.3, 89.0], [6.4, 90.0], [6.5, 90.0], [6.6, 91.0], [6.7, 91.0], [6.8, 92.0], [6.9, 92.0], [7.0, 93.0], [7.1, 93.0], [7.2, 93.0], [7.3, 94.0], [7.4, 94.0], [7.5, 94.0], [7.6, 95.0], [7.7, 95.0], [7.8, 96.0], [7.9, 97.0], [8.0, 97.0], [8.1, 98.0], [8.2, 98.0], [8.3, 98.0], [8.4, 99.0], [8.5, 100.0], [8.6, 100.0], [8.7, 100.0], [8.8, 101.0], [8.9, 101.0], [9.0, 102.0], [9.1, 102.0], [9.2, 103.0], [9.3, 103.0], [9.4, 103.0], [9.5, 104.0], [9.6, 105.0], [9.7, 105.0], [9.8, 106.0], [9.9, 106.0], [10.0, 107.0], [10.1, 108.0], [10.2, 108.0], [10.3, 108.0], [10.4, 109.0], [10.5, 109.0], [10.6, 110.0], [10.7, 111.0], [10.8, 111.0], [10.9, 112.0], [11.0, 112.0], [11.1, 113.0], [11.2, 114.0], [11.3, 114.0], [11.4, 115.0], [11.5, 116.0], [11.6, 116.0], [11.7, 117.0], [11.8, 117.0], [11.9, 118.0], [12.0, 119.0], [12.1, 119.0], [12.2, 119.0], [12.3, 120.0], [12.4, 120.0], [12.5, 121.0], [12.6, 121.0], [12.7, 122.0], [12.8, 122.0], [12.9, 122.0], [13.0, 123.0], [13.1, 124.0], [13.2, 124.0], [13.3, 125.0], [13.4, 125.0], [13.5, 125.0], [13.6, 126.0], [13.7, 127.0], [13.8, 128.0], [13.9, 128.0], [14.0, 129.0], [14.1, 130.0], [14.2, 131.0], [14.3, 131.0], [14.4, 132.0], [14.5, 132.0], [14.6, 133.0], [14.7, 134.0], [14.8, 134.0], [14.9, 135.0], [15.0, 135.0], [15.1, 136.0], [15.2, 137.0], [15.3, 137.0], [15.4, 138.0], [15.5, 139.0], [15.6, 139.0], [15.7, 140.0], [15.8, 141.0], [15.9, 142.0], [16.0, 142.0], [16.1, 143.0], [16.2, 144.0], [16.3, 144.0], [16.4, 145.0], [16.5, 146.0], [16.6, 146.0], [16.7, 147.0], [16.8, 148.0], [16.9, 149.0], [17.0, 149.0], [17.1, 150.0], [17.2, 150.0], [17.3, 151.0], [17.4, 151.0], [17.5, 151.0], [17.6, 152.0], [17.7, 153.0], [17.8, 153.0], [17.9, 154.0], [18.0, 154.0], [18.1, 155.0], [18.2, 155.0], [18.3, 156.0], [18.4, 157.0], [18.5, 157.0], [18.6, 158.0], [18.7, 158.0], [18.8, 159.0], [18.9, 159.0], [19.0, 160.0], [19.1, 160.0], [19.2, 161.0], [19.3, 161.0], [19.4, 162.0], [19.5, 162.0], [19.6, 163.0], [19.7, 164.0], [19.8, 164.0], [19.9, 165.0], [20.0, 166.0], [20.1, 166.0], [20.2, 167.0], [20.3, 167.0], [20.4, 168.0], [20.5, 168.0], [20.6, 169.0], [20.7, 170.0], [20.8, 171.0], [20.9, 171.0], [21.0, 171.0], [21.1, 172.0], [21.2, 172.0], [21.3, 173.0], [21.4, 173.0], [21.5, 174.0], [21.6, 174.0], [21.7, 175.0], [21.8, 176.0], [21.9, 176.0], [22.0, 177.0], [22.1, 177.0], [22.2, 177.0], [22.3, 178.0], [22.4, 178.0], [22.5, 179.0], [22.6, 179.0], [22.7, 180.0], [22.8, 180.0], [22.9, 181.0], [23.0, 181.0], [23.1, 182.0], [23.2, 183.0], [23.3, 184.0], [23.4, 184.0], [23.5, 185.0], [23.6, 186.0], [23.7, 186.0], [23.8, 187.0], [23.9, 188.0], [24.0, 188.0], [24.1, 189.0], [24.2, 189.0], [24.3, 190.0], [24.4, 190.0], [24.5, 191.0], [24.6, 192.0], [24.7, 192.0], [24.8, 193.0], [24.9, 193.0], [25.0, 194.0], [25.1, 194.0], [25.2, 195.0], [25.3, 196.0], [25.4, 196.0], [25.5, 197.0], [25.6, 197.0], [25.7, 198.0], [25.8, 199.0], [25.9, 199.0], [26.0, 200.0], [26.1, 201.0], [26.2, 201.0], [26.3, 202.0], [26.4, 202.0], [26.5, 203.0], [26.6, 203.0], [26.7, 204.0], [26.8, 205.0], [26.9, 205.0], [27.0, 206.0], [27.1, 207.0], [27.2, 207.0], [27.3, 208.0], [27.4, 208.0], [27.5, 209.0], [27.6, 209.0], [27.7, 209.0], [27.8, 210.0], [27.9, 211.0], [28.0, 211.0], [28.1, 212.0], [28.2, 212.0], [28.3, 213.0], [28.4, 213.0], [28.5, 214.0], [28.6, 215.0], [28.7, 215.0], [28.8, 216.0], [28.9, 217.0], [29.0, 217.0], [29.1, 218.0], [29.2, 219.0], [29.3, 219.0], [29.4, 220.0], [29.5, 221.0], [29.6, 221.0], [29.7, 222.0], [29.8, 223.0], [29.9, 223.0], [30.0, 224.0], [30.1, 225.0], [30.2, 226.0], [30.3, 226.0], [30.4, 227.0], [30.5, 227.0], [30.6, 228.0], [30.7, 229.0], [30.8, 229.0], [30.9, 230.0], [31.0, 231.0], [31.1, 231.0], [31.2, 232.0], [31.3, 233.0], [31.4, 233.0], [31.5, 234.0], [31.6, 235.0], [31.7, 235.0], [31.8, 236.0], [31.9, 236.0], [32.0, 237.0], [32.1, 238.0], [32.2, 238.0], [32.3, 239.0], [32.4, 239.0], [32.5, 240.0], [32.6, 241.0], [32.7, 241.0], [32.8, 242.0], [32.9, 243.0], [33.0, 243.0], [33.1, 244.0], [33.2, 245.0], [33.3, 245.0], [33.4, 246.0], [33.5, 246.0], [33.6, 246.0], [33.7, 247.0], [33.8, 248.0], [33.9, 248.0], [34.0, 249.0], [34.1, 249.0], [34.2, 250.0], [34.3, 251.0], [34.4, 252.0], [34.5, 252.0], [34.6, 254.0], [34.7, 254.0], [34.8, 255.0], [34.9, 255.0], [35.0, 255.0], [35.1, 256.0], [35.2, 256.0], [35.3, 257.0], [35.4, 257.0], [35.5, 258.0], [35.6, 259.0], [35.7, 260.0], [35.8, 260.0], [35.9, 261.0], [36.0, 262.0], [36.1, 263.0], [36.2, 264.0], [36.3, 264.0], [36.4, 265.0], [36.5, 265.0], [36.6, 266.0], [36.7, 266.0], [36.8, 267.0], [36.9, 268.0], [37.0, 268.0], [37.1, 269.0], [37.2, 270.0], [37.3, 271.0], [37.4, 271.0], [37.5, 272.0], [37.6, 273.0], [37.7, 273.0], [37.8, 274.0], [37.9, 275.0], [38.0, 275.0], [38.1, 275.0], [38.2, 276.0], [38.3, 277.0], [38.4, 277.0], [38.5, 278.0], [38.6, 279.0], [38.7, 279.0], [38.8, 280.0], [38.9, 280.0], [39.0, 281.0], [39.1, 282.0], [39.2, 282.0], [39.3, 283.0], [39.4, 283.0], [39.5, 284.0], [39.6, 285.0], [39.7, 285.0], [39.8, 286.0], [39.9, 287.0], [40.0, 288.0], [40.1, 288.0], [40.2, 289.0], [40.3, 290.0], [40.4, 291.0], [40.5, 291.0], [40.6, 292.0], [40.7, 292.0], [40.8, 293.0], [40.9, 294.0], [41.0, 294.0], [41.1, 294.0], [41.2, 295.0], [41.3, 295.0], [41.4, 297.0], [41.5, 297.0], [41.6, 298.0], [41.7, 299.0], [41.8, 299.0], [41.9, 300.0], [42.0, 300.0], [42.1, 301.0], [42.2, 301.0], [42.3, 302.0], [42.4, 303.0], [42.5, 303.0], [42.6, 304.0], [42.7, 305.0], [42.8, 306.0], [42.9, 306.0], [43.0, 307.0], [43.1, 308.0], [43.2, 309.0], [43.3, 309.0], [43.4, 310.0], [43.5, 311.0], [43.6, 312.0], [43.7, 312.0], [43.8, 313.0], [43.9, 314.0], [44.0, 314.0], [44.1, 315.0], [44.2, 315.0], [44.3, 316.0], [44.4, 317.0], [44.5, 318.0], [44.6, 318.0], [44.7, 319.0], [44.8, 320.0], [44.9, 320.0], [45.0, 321.0], [45.1, 321.0], [45.2, 322.0], [45.3, 322.0], [45.4, 323.0], [45.5, 324.0], [45.6, 324.0], [45.7, 325.0], [45.8, 326.0], [45.9, 326.0], [46.0, 327.0], [46.1, 327.0], [46.2, 328.0], [46.3, 329.0], [46.4, 330.0], [46.5, 330.0], [46.6, 331.0], [46.7, 331.0], [46.8, 332.0], [46.9, 333.0], [47.0, 334.0], [47.1, 334.0], [47.2, 335.0], [47.3, 336.0], [47.4, 337.0], [47.5, 337.0], [47.6, 338.0], [47.7, 339.0], [47.8, 339.0], [47.9, 340.0], [48.0, 340.0], [48.1, 341.0], [48.2, 341.0], [48.3, 342.0], [48.4, 343.0], [48.5, 344.0], [48.6, 345.0], [48.7, 345.0], [48.8, 346.0], [48.9, 346.0], [49.0, 347.0], [49.1, 348.0], [49.2, 349.0], [49.3, 349.0], [49.4, 350.0], [49.5, 351.0], [49.6, 351.0], [49.7, 352.0], [49.8, 353.0], [49.9, 353.0], [50.0, 353.0], [50.1, 354.0], [50.2, 355.0], [50.3, 356.0], [50.4, 356.0], [50.5, 357.0], [50.6, 358.0], [50.7, 359.0], [50.8, 359.0], [50.9, 360.0], [51.0, 360.0], [51.1, 361.0], [51.2, 362.0], [51.3, 363.0], [51.4, 363.0], [51.5, 364.0], [51.6, 364.0], [51.7, 365.0], [51.8, 366.0], [51.9, 366.0], [52.0, 367.0], [52.1, 368.0], [52.2, 369.0], [52.3, 369.0], [52.4, 370.0], [52.5, 370.0], [52.6, 371.0], [52.7, 371.0], [52.8, 372.0], [52.9, 372.0], [53.0, 373.0], [53.1, 374.0], [53.2, 375.0], [53.3, 375.0], [53.4, 376.0], [53.5, 377.0], [53.6, 377.0], [53.7, 378.0], [53.8, 379.0], [53.9, 379.0], [54.0, 380.0], [54.1, 381.0], [54.2, 381.0], [54.3, 382.0], [54.4, 383.0], [54.5, 383.0], [54.6, 384.0], [54.7, 385.0], [54.8, 385.0], [54.9, 386.0], [55.0, 386.0], [55.1, 387.0], [55.2, 388.0], [55.3, 388.0], [55.4, 389.0], [55.5, 390.0], [55.6, 391.0], [55.7, 392.0], [55.8, 392.0], [55.9, 393.0], [56.0, 394.0], [56.1, 394.0], [56.2, 395.0], [56.3, 396.0], [56.4, 397.0], [56.5, 398.0], [56.6, 398.0], [56.7, 399.0], [56.8, 400.0], [56.9, 401.0], [57.0, 401.0], [57.1, 402.0], [57.2, 403.0], [57.3, 403.0], [57.4, 404.0], [57.5, 405.0], [57.6, 406.0], [57.7, 407.0], [57.8, 407.0], [57.9, 408.0], [58.0, 409.0], [58.1, 409.0], [58.2, 410.0], [58.3, 410.0], [58.4, 411.0], [58.5, 412.0], [58.6, 413.0], [58.7, 414.0], [58.8, 415.0], [58.9, 415.0], [59.0, 416.0], [59.1, 417.0], [59.2, 418.0], [59.3, 418.0], [59.4, 419.0], [59.5, 420.0], [59.6, 421.0], [59.7, 422.0], [59.8, 423.0], [59.9, 424.0], [60.0, 425.0], [60.1, 426.0], [60.2, 427.0], [60.3, 427.0], [60.4, 428.0], [60.5, 429.0], [60.6, 431.0], [60.7, 431.0], [60.8, 432.0], [60.9, 433.0], [61.0, 435.0], [61.1, 436.0], [61.2, 437.0], [61.3, 437.0], [61.4, 438.0], [61.5, 439.0], [61.6, 440.0], [61.7, 441.0], [61.8, 442.0], [61.9, 443.0], [62.0, 445.0], [62.1, 446.0], [62.2, 447.0], [62.3, 448.0], [62.4, 450.0], [62.5, 451.0], [62.6, 452.0], [62.7, 453.0], [62.8, 454.0], [62.9, 455.0], [63.0, 455.0], [63.1, 457.0], [63.2, 458.0], [63.3, 459.0], [63.4, 460.0], [63.5, 461.0], [63.6, 463.0], [63.7, 464.0], [63.8, 464.0], [63.9, 465.0], [64.0, 466.0], [64.1, 467.0], [64.2, 468.0], [64.3, 469.0], [64.4, 470.0], [64.5, 472.0], [64.6, 473.0], [64.7, 474.0], [64.8, 476.0], [64.9, 476.0], [65.0, 477.0], [65.1, 479.0], [65.2, 480.0], [65.3, 481.0], [65.4, 481.0], [65.5, 483.0], [65.6, 484.0], [65.7, 485.0], [65.8, 486.0], [65.9, 487.0], [66.0, 489.0], [66.1, 490.0], [66.2, 491.0], [66.3, 492.0], [66.4, 494.0], [66.5, 495.0], [66.6, 496.0], [66.7, 497.0], [66.8, 499.0], [66.9, 500.0], [67.0, 501.0], [67.1, 501.0], [67.2, 503.0], [67.3, 504.0], [67.4, 506.0], [67.5, 507.0], [67.6, 509.0], [67.7, 511.0], [67.8, 512.0], [67.9, 513.0], [68.0, 515.0], [68.1, 516.0], [68.2, 518.0], [68.3, 520.0], [68.4, 522.0], [68.5, 523.0], [68.6, 525.0], [68.7, 526.0], [68.8, 527.0], [68.9, 528.0], [69.0, 530.0], [69.1, 531.0], [69.2, 532.0], [69.3, 534.0], [69.4, 534.0], [69.5, 535.0], [69.6, 536.0], [69.7, 538.0], [69.8, 539.0], [69.9, 540.0], [70.0, 542.0], [70.1, 545.0], [70.2, 546.0], [70.3, 547.0], [70.4, 548.0], [70.5, 550.0], [70.6, 553.0], [70.7, 555.0], [70.8, 557.0], [70.9, 559.0], [71.0, 561.0], [71.1, 562.0], [71.2, 564.0], [71.3, 565.0], [71.4, 568.0], [71.5, 570.0], [71.6, 571.0], [71.7, 573.0], [71.8, 574.0], [71.9, 577.0], [72.0, 578.0], [72.1, 580.0], [72.2, 583.0], [72.3, 586.0], [72.4, 588.0], [72.5, 589.0], [72.6, 591.0], [72.7, 593.0], [72.8, 595.0], [72.9, 597.0], [73.0, 599.0], [73.1, 601.0], [73.2, 602.0], [73.3, 605.0], [73.4, 607.0], [73.5, 609.0], [73.6, 612.0], [73.7, 613.0], [73.8, 615.0], [73.9, 617.0], [74.0, 618.0], [74.1, 620.0], [74.2, 622.0], [74.3, 625.0], [74.4, 628.0], [74.5, 630.0], [74.6, 633.0], [74.7, 635.0], [74.8, 637.0], [74.9, 640.0], [75.0, 641.0], [75.1, 643.0], [75.2, 644.0], [75.3, 646.0], [75.4, 648.0], [75.5, 650.0], [75.6, 653.0], [75.7, 656.0], [75.8, 658.0], [75.9, 659.0], [76.0, 662.0], [76.1, 665.0], [76.2, 667.0], [76.3, 669.0], [76.4, 672.0], [76.5, 675.0], [76.6, 677.0], [76.7, 680.0], [76.8, 683.0], [76.9, 685.0], [77.0, 687.0], [77.1, 690.0], [77.2, 695.0], [77.3, 698.0], [77.4, 699.0], [77.5, 703.0], [77.6, 706.0], [77.7, 708.0], [77.8, 714.0], [77.9, 717.0], [78.0, 720.0], [78.1, 725.0], [78.2, 730.0], [78.3, 733.0], [78.4, 735.0], [78.5, 738.0], [78.6, 741.0], [78.7, 747.0], [78.8, 749.0], [78.9, 752.0], [79.0, 756.0], [79.1, 761.0], [79.2, 765.0], [79.3, 768.0], [79.4, 770.0], [79.5, 775.0], [79.6, 778.0], [79.7, 783.0], [79.8, 786.0], [79.9, 789.0], [80.0, 793.0], [80.1, 799.0], [80.2, 805.0], [80.3, 808.0], [80.4, 813.0], [80.5, 821.0], [80.6, 826.0], [80.7, 830.0], [80.8, 833.0], [80.9, 837.0], [81.0, 844.0], [81.1, 848.0], [81.2, 856.0], [81.3, 858.0], [81.4, 862.0], [81.5, 868.0], [81.6, 872.0], [81.7, 876.0], [81.8, 884.0], [81.9, 889.0], [82.0, 893.0], [82.1, 900.0], [82.2, 905.0], [82.3, 908.0], [82.4, 911.0], [82.5, 917.0], [82.6, 923.0], [82.7, 926.0], [82.8, 935.0], [82.9, 938.0], [83.0, 943.0], [83.1, 946.0], [83.2, 951.0], [83.3, 955.0], [83.4, 961.0], [83.5, 965.0], [83.6, 969.0], [83.7, 973.0], [83.8, 981.0], [83.9, 988.0], [84.0, 992.0], [84.1, 999.0], [84.2, 1004.0], [84.3, 1011.0], [84.4, 1015.0], [84.5, 1019.0], [84.6, 1026.0], [84.7, 1031.0], [84.8, 1035.0], [84.9, 1042.0], [85.0, 1048.0], [85.1, 1056.0], [85.2, 1058.0], [85.3, 1066.0], [85.4, 1069.0], [85.5, 1075.0], [85.6, 1079.0], [85.7, 1086.0], [85.8, 1091.0], [85.9, 1098.0], [86.0, 1103.0], [86.1, 1112.0], [86.2, 1116.0], [86.3, 1121.0], [86.4, 1126.0], [86.5, 1131.0], [86.6, 1135.0], [86.7, 1141.0], [86.8, 1144.0], [86.9, 1148.0], [87.0, 1151.0], [87.1, 1153.0], [87.2, 1160.0], [87.3, 1167.0], [87.4, 1171.0], [87.5, 1173.0], [87.6, 1176.0], [87.7, 1179.0], [87.8, 1184.0], [87.9, 1188.0], [88.0, 1194.0], [88.1, 1197.0], [88.2, 1203.0], [88.3, 1206.0], [88.4, 1211.0], [88.5, 1215.0], [88.6, 1219.0], [88.7, 1221.0], [88.8, 1228.0], [88.9, 1231.0], [89.0, 1236.0], [89.1, 1239.0], [89.2, 1244.0], [89.3, 1249.0], [89.4, 1254.0], [89.5, 1259.0], [89.6, 1263.0], [89.7, 1267.0], [89.8, 1275.0], [89.9, 1280.0], [90.0, 1285.0], [90.1, 1291.0], [90.2, 1298.0], [90.3, 1308.0], [90.4, 1313.0], [90.5, 1319.0], [90.6, 1323.0], [90.7, 1329.0], [90.8, 1336.0], [90.9, 1345.0], [91.0, 1349.0], [91.1, 1353.0], [91.2, 1362.0], [91.3, 1367.0], [91.4, 1372.0], [91.5, 1377.0], [91.6, 1382.0], [91.7, 1388.0], [91.8, 1394.0], [91.9, 1402.0], [92.0, 1407.0], [92.1, 1412.0], [92.2, 1423.0], [92.3, 1428.0], [92.4, 1434.0], [92.5, 1438.0], [92.6, 1449.0], [92.7, 1453.0], [92.8, 1458.0], [92.9, 1462.0], [93.0, 1467.0], [93.1, 1473.0], [93.2, 1479.0], [93.3, 1486.0], [93.4, 1491.0], [93.5, 1499.0], [93.6, 1507.0], [93.7, 1518.0], [93.8, 1523.0], [93.9, 1530.0], [94.0, 1537.0], [94.1, 1541.0], [94.2, 1548.0], [94.3, 1557.0], [94.4, 1565.0], [94.5, 1570.0], [94.6, 1578.0], [94.7, 1587.0], [94.8, 1594.0], [94.9, 1607.0], [95.0, 1617.0], [95.1, 1631.0], [95.2, 1638.0], [95.3, 1647.0], [95.4, 1663.0], [95.5, 1677.0], [95.6, 1687.0], [95.7, 1694.0], [95.8, 1715.0], [95.9, 1729.0], [96.0, 1740.0], [96.1, 1757.0], [96.2, 1769.0], [96.3, 1786.0], [96.4, 1803.0], [96.5, 1811.0], [96.6, 1831.0], [96.7, 1842.0], [96.8, 1860.0], [96.9, 1878.0], [97.0, 1898.0], [97.1, 1922.0], [97.2, 1938.0], [97.3, 1956.0], [97.4, 1973.0], [97.5, 1999.0], [97.6, 2021.0], [97.7, 2050.0], [97.8, 2071.0], [97.9, 2098.0], [98.0, 2116.0], [98.1, 2137.0], [98.2, 2168.0], [98.3, 2199.0], [98.4, 2238.0], [98.5, 2285.0], [98.6, 2362.0], [98.7, 2408.0], [98.8, 2531.0], [98.9, 2590.0], [99.0, 2676.0], [99.1, 2760.0], [99.2, 2895.0], [99.3, 2984.0], [99.4, 3228.0], [99.5, 3329.0], [99.6, 3540.0], [99.7, 3691.0], [99.8, 4142.0], [99.9, 4590.0], [100.0, 16928.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 4.0], [82.1, 4.0], [82.2, 4.0], [82.3, 4.0], [82.4, 4.0], [82.5, 4.0], [82.6, 4.0], [82.7, 4.0], [82.8, 4.0], [82.9, 4.0], [83.0, 4.0], [83.1, 4.0], [83.2, 4.0], [83.3, 4.0], [83.4, 4.0], [83.5, 4.0], [83.6, 4.0], [83.7, 4.0], [83.8, 4.0], [83.9, 4.0], [84.0, 4.0], [84.1, 4.0], [84.2, 4.0], [84.3, 4.0], [84.4, 4.0], [84.5, 4.0], [84.6, 4.0], [84.7, 4.0], [84.8, 4.0], [84.9, 4.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 4.0], [85.4, 4.0], [85.5, 4.0], [85.6, 4.0], [85.7, 4.0], [85.8, 4.0], [85.9, 4.0], [86.0, 5.0], [86.1, 5.0], [86.2, 5.0], [86.3, 5.0], [86.4, 5.0], [86.5, 5.0], [86.6, 5.0], [86.7, 5.0], [86.8, 5.0], [86.9, 5.0], [87.0, 5.0], [87.1, 5.0], [87.2, 5.0], [87.3, 5.0], [87.4, 5.0], [87.5, 5.0], [87.6, 5.0], [87.7, 5.0], [87.8, 5.0], [87.9, 5.0], [88.0, 7.0], [88.1, 7.0], [88.2, 7.0], [88.3, 7.0], [88.4, 7.0], [88.5, 7.0], [88.6, 7.0], [88.7, 7.0], [88.8, 7.0], [88.9, 7.0], [89.0, 7.0], [89.1, 7.0], [89.2, 7.0], [89.3, 7.0], [89.4, 7.0], [89.5, 7.0], [89.6, 7.0], [89.7, 7.0], [89.8, 7.0], [89.9, 7.0], [90.0, 14.0], [90.1, 14.0], [90.2, 14.0], [90.3, 14.0], [90.4, 14.0], [90.5, 14.0], [90.6, 14.0], [90.7, 14.0], [90.8, 14.0], [90.9, 14.0], [91.0, 14.0], [91.1, 14.0], [91.2, 14.0], [91.3, 14.0], [91.4, 14.0], [91.5, 14.0], [91.6, 14.0], [91.7, 14.0], [91.8, 14.0], [91.9, 14.0], [92.0, 39.0], [92.1, 39.0], [92.2, 39.0], [92.3, 39.0], [92.4, 39.0], [92.5, 39.0], [92.6, 39.0], [92.7, 39.0], [92.8, 39.0], [92.9, 39.0], [93.0, 114.0], [93.1, 114.0], [93.2, 114.0], [93.3, 114.0], [93.4, 114.0], [93.5, 114.0], [93.6, 114.0], [93.7, 114.0], [93.8, 114.0], [93.9, 114.0], [94.0, 198.0], [94.1, 198.0], [94.2, 198.0], [94.3, 198.0], [94.4, 198.0], [94.5, 198.0], [94.6, 198.0], [94.7, 198.0], [94.8, 198.0], [94.9, 198.0], [95.0, 351.0], [95.1, 351.0], [95.2, 351.0], [95.3, 351.0], [95.4, 351.0], [95.5, 351.0], [95.6, 351.0], [95.7, 351.0], [95.8, 351.0], [95.9, 351.0], [96.0, 502.0], [96.1, 502.0], [96.2, 502.0], [96.3, 502.0], [96.4, 502.0], [96.5, 502.0], [96.6, 502.0], [96.7, 502.0], [96.8, 502.0], [96.9, 502.0], [97.0, 652.0], [97.1, 652.0], [97.2, 652.0], [97.3, 652.0], [97.4, 652.0], [97.5, 652.0], [97.6, 652.0], [97.7, 652.0], [97.8, 652.0], [97.9, 652.0], [98.0, 789.0], [98.1, 789.0], [98.2, 789.0], [98.3, 789.0], [98.4, 789.0], [98.5, 789.0], [98.6, 789.0], [98.7, 789.0], [98.8, 789.0], [98.9, 789.0], [99.0, 942.0], [99.1, 942.0], [99.2, 942.0], [99.3, 942.0], [99.4, 942.0], [99.5, 942.0], [99.6, 942.0], [99.7, 942.0], [99.8, 942.0], [99.9, 942.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 2.0], [62.0, 2.0], [62.1, 2.0], [62.2, 2.0], [62.3, 2.0], [62.4, 2.0], [62.5, 2.0], [62.6, 2.0], [62.7, 2.0], [62.8, 2.0], [62.9, 2.0], [63.0, 2.0], [63.1, 2.0], [63.2, 2.0], [63.3, 2.0], [63.4, 2.0], [63.5, 2.0], [63.6, 2.0], [63.7, 2.0], [63.8, 2.0], [63.9, 2.0], [64.0, 2.0], [64.1, 2.0], [64.2, 2.0], [64.3, 2.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 2.0], [68.8, 2.0], [68.9, 2.0], [69.0, 2.0], [69.1, 2.0], [69.2, 2.0], [69.3, 2.0], [69.4, 2.0], [69.5, 2.0], [69.6, 2.0], [69.7, 2.0], [69.8, 2.0], [69.9, 2.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 3.0], [71.1, 3.0], [71.2, 3.0], [71.3, 3.0], [71.4, 3.0], [71.5, 3.0], [71.6, 3.0], [71.7, 3.0], [71.8, 3.0], [71.9, 3.0], [72.0, 3.0], [72.1, 3.0], [72.2, 3.0], [72.3, 3.0], [72.4, 3.0], [72.5, 3.0], [72.6, 3.0], [72.7, 3.0], [72.8, 3.0], [72.9, 3.0], [73.0, 3.0], [73.1, 3.0], [73.2, 3.0], [73.3, 3.0], [73.4, 3.0], [73.5, 3.0], [73.6, 3.0], [73.7, 3.0], [73.8, 3.0], [73.9, 3.0], [74.0, 3.0], [74.1, 3.0], [74.2, 3.0], [74.3, 3.0], [74.4, 3.0], [74.5, 3.0], [74.6, 3.0], [74.7, 3.0], [74.8, 3.0], [74.9, 3.0], [75.0, 3.0], [75.1, 3.0], [75.2, 3.0], [75.3, 3.0], [75.4, 3.0], [75.5, 3.0], [75.6, 3.0], [75.7, 3.0], [75.8, 3.0], [75.9, 3.0], [76.0, 3.0], [76.1, 3.0], [76.2, 3.0], [76.3, 3.0], [76.4, 3.0], [76.5, 3.0], [76.6, 3.0], [76.7, 3.0], [76.8, 3.0], [76.9, 3.0], [77.0, 4.0], [77.1, 4.0], [77.2, 4.0], [77.3, 4.0], [77.4, 4.0], [77.5, 4.0], [77.6, 4.0], [77.7, 4.0], [77.8, 4.0], [77.9, 4.0], [78.0, 4.0], [78.1, 4.0], [78.2, 4.0], [78.3, 4.0], [78.4, 4.0], [78.5, 4.0], [78.6, 4.0], [78.7, 4.0], [78.8, 4.0], [78.9, 4.0], [79.0, 5.0], [79.1, 5.0], [79.2, 5.0], [79.3, 5.0], [79.4, 5.0], [79.5, 5.0], [79.6, 5.0], [79.7, 5.0], [79.8, 5.0], [79.9, 5.0], [80.0, 5.0], [80.1, 5.0], [80.2, 5.0], [80.3, 5.0], [80.4, 5.0], [80.5, 5.0], [80.6, 5.0], [80.7, 5.0], [80.8, 5.0], [80.9, 5.0], [81.0, 5.0], [81.1, 5.0], [81.2, 5.0], [81.3, 5.0], [81.4, 5.0], [81.5, 5.0], [81.6, 5.0], [81.7, 5.0], [81.8, 5.0], [81.9, 5.0], [82.0, 6.0], [82.1, 6.0], [82.2, 6.0], [82.3, 6.0], [82.4, 6.0], [82.5, 6.0], [82.6, 6.0], [82.7, 6.0], [82.8, 6.0], [82.9, 6.0], [83.0, 6.0], [83.1, 6.0], [83.2, 6.0], [83.3, 6.0], [83.4, 6.0], [83.5, 6.0], [83.6, 6.0], [83.7, 6.0], [83.8, 6.0], [83.9, 6.0], [84.0, 7.0], [84.1, 7.0], [84.2, 7.0], [84.3, 7.0], [84.4, 7.0], [84.5, 7.0], [84.6, 7.0], [84.7, 7.0], [84.8, 7.0], [84.9, 7.0], [85.0, 7.0], [85.1, 7.0], [85.2, 7.0], [85.3, 7.0], [85.4, 7.0], [85.5, 7.0], [85.6, 7.0], [85.7, 7.0], [85.8, 7.0], [85.9, 7.0], [86.0, 7.0], [86.1, 7.0], [86.2, 7.0], [86.3, 7.0], [86.4, 7.0], [86.5, 7.0], [86.6, 7.0], [86.7, 7.0], [86.8, 7.0], [86.9, 7.0], [87.0, 9.0], [87.1, 9.0], [87.2, 9.0], [87.3, 9.0], [87.4, 9.0], [87.5, 9.0], [87.6, 9.0], [87.7, 9.0], [87.8, 9.0], [87.9, 9.0], [88.0, 10.0], [88.1, 10.0], [88.2, 10.0], [88.3, 10.0], [88.4, 10.0], [88.5, 10.0], [88.6, 10.0], [88.7, 10.0], [88.8, 10.0], [88.9, 10.0], [89.0, 13.0], [89.1, 13.0], [89.2, 13.0], [89.3, 13.0], [89.4, 13.0], [89.5, 13.0], [89.6, 13.0], [89.7, 13.0], [89.8, 13.0], [89.9, 13.0], [90.0, 17.0], [90.1, 17.0], [90.2, 17.0], [90.3, 17.0], [90.4, 17.0], [90.5, 17.0], [90.6, 17.0], [90.7, 17.0], [90.8, 17.0], [90.9, 17.0], [91.0, 65.0], [91.1, 65.0], [91.2, 65.0], [91.3, 65.0], [91.4, 65.0], [91.5, 65.0], [91.6, 65.0], [91.7, 65.0], [91.8, 65.0], [91.9, 65.0], [92.0, 110.0], [92.1, 110.0], [92.2, 110.0], [92.3, 110.0], [92.4, 110.0], [92.5, 110.0], [92.6, 110.0], [92.7, 110.0], [92.8, 110.0], [92.9, 110.0], [93.0, 302.0], [93.1, 302.0], [93.2, 302.0], [93.3, 302.0], [93.4, 302.0], [93.5, 302.0], [93.6, 302.0], [93.7, 302.0], [93.8, 302.0], [93.9, 302.0], [94.0, 303.0], [94.1, 303.0], [94.2, 303.0], [94.3, 303.0], [94.4, 303.0], [94.5, 303.0], [94.6, 303.0], [94.7, 303.0], [94.8, 303.0], [94.9, 303.0], [95.0, 313.0], [95.1, 313.0], [95.2, 313.0], [95.3, 313.0], [95.4, 313.0], [95.5, 313.0], [95.6, 313.0], [95.7, 313.0], [95.8, 313.0], [95.9, 313.0], [96.0, 313.0], [96.1, 313.0], [96.2, 313.0], [96.3, 313.0], [96.4, 313.0], [96.5, 313.0], [96.6, 313.0], [96.7, 313.0], [96.8, 313.0], [96.9, 313.0], [97.0, 318.0], [97.1, 318.0], [97.2, 318.0], [97.3, 318.0], [97.4, 318.0], [97.5, 318.0], [97.6, 318.0], [97.7, 318.0], [97.8, 318.0], [97.9, 318.0], [98.0, 320.0], [98.1, 320.0], [98.2, 320.0], [98.3, 320.0], [98.4, 320.0], [98.5, 320.0], [98.6, 320.0], [98.7, 320.0], [98.8, 320.0], [98.9, 320.0], [99.0, 321.0], [99.1, 321.0], [99.2, 321.0], [99.3, 321.0], [99.4, 321.0], [99.5, 321.0], [99.6, 321.0], [99.7, 321.0], [99.8, 321.0], [99.9, 321.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 31.0], [0.1, 50.0], [0.2, 55.0], [0.3, 55.0], [0.4, 57.0], [0.5, 58.0], [0.6, 59.0], [0.7, 59.0], [0.8, 61.0], [0.9, 62.0], [1.0, 62.0], [1.1, 63.0], [1.2, 63.0], [1.3, 64.0], [1.4, 64.0], [1.5, 65.0], [1.6, 66.0], [1.7, 66.0], [1.8, 68.0], [1.9, 69.0], [2.0, 69.0], [2.1, 69.0], [2.2, 70.0], [2.3, 71.0], [2.4, 72.0], [2.5, 73.0], [2.6, 75.0], [2.7, 75.0], [2.8, 75.0], [2.9, 76.0], [3.0, 77.0], [3.1, 77.0], [3.2, 79.0], [3.3, 80.0], [3.4, 81.0], [3.5, 83.0], [3.6, 83.0], [3.7, 84.0], [3.8, 86.0], [3.9, 88.0], [4.0, 90.0], [4.1, 91.0], [4.2, 91.0], [4.3, 92.0], [4.4, 93.0], [4.5, 96.0], [4.6, 98.0], [4.7, 100.0], [4.8, 102.0], [4.9, 104.0], [5.0, 105.0], [5.1, 105.0], [5.2, 106.0], [5.3, 107.0], [5.4, 109.0], [5.5, 111.0], [5.6, 112.0], [5.7, 113.0], [5.8, 113.0], [5.9, 115.0], [6.0, 115.0], [6.1, 116.0], [6.2, 116.0], [6.3, 116.0], [6.4, 117.0], [6.5, 118.0], [6.6, 118.0], [6.7, 120.0], [6.8, 121.0], [6.9, 123.0], [7.0, 123.0], [7.1, 124.0], [7.2, 125.0], [7.3, 126.0], [7.4, 129.0], [7.5, 130.0], [7.6, 132.0], [7.7, 133.0], [7.8, 135.0], [7.9, 136.0], [8.0, 137.0], [8.1, 138.0], [8.2, 139.0], [8.3, 140.0], [8.4, 140.0], [8.5, 141.0], [8.6, 142.0], [8.7, 143.0], [8.8, 143.0], [8.9, 144.0], [9.0, 145.0], [9.1, 146.0], [9.2, 147.0], [9.3, 148.0], [9.4, 149.0], [9.5, 149.0], [9.6, 152.0], [9.7, 153.0], [9.8, 153.0], [9.9, 153.0], [10.0, 154.0], [10.1, 155.0], [10.2, 156.0], [10.3, 156.0], [10.4, 157.0], [10.5, 158.0], [10.6, 159.0], [10.7, 160.0], [10.8, 161.0], [10.9, 163.0], [11.0, 163.0], [11.1, 164.0], [11.2, 164.0], [11.3, 166.0], [11.4, 167.0], [11.5, 167.0], [11.6, 168.0], [11.7, 168.0], [11.8, 169.0], [11.9, 170.0], [12.0, 171.0], [12.1, 173.0], [12.2, 173.0], [12.3, 174.0], [12.4, 175.0], [12.5, 176.0], [12.6, 176.0], [12.7, 178.0], [12.8, 179.0], [12.9, 179.0], [13.0, 181.0], [13.1, 181.0], [13.2, 182.0], [13.3, 183.0], [13.4, 184.0], [13.5, 184.0], [13.6, 185.0], [13.7, 185.0], [13.8, 187.0], [13.9, 188.0], [14.0, 189.0], [14.1, 189.0], [14.2, 190.0], [14.3, 191.0], [14.4, 191.0], [14.5, 193.0], [14.6, 193.0], [14.7, 193.0], [14.8, 194.0], [14.9, 194.0], [15.0, 197.0], [15.1, 198.0], [15.2, 198.0], [15.3, 198.0], [15.4, 199.0], [15.5, 201.0], [15.6, 202.0], [15.7, 203.0], [15.8, 203.0], [15.9, 205.0], [16.0, 205.0], [16.1, 206.0], [16.2, 206.0], [16.3, 208.0], [16.4, 210.0], [16.5, 211.0], [16.6, 212.0], [16.7, 213.0], [16.8, 213.0], [16.9, 213.0], [17.0, 214.0], [17.1, 214.0], [17.2, 216.0], [17.3, 217.0], [17.4, 217.0], [17.5, 218.0], [17.6, 219.0], [17.7, 220.0], [17.8, 221.0], [17.9, 221.0], [18.0, 222.0], [18.1, 223.0], [18.2, 226.0], [18.3, 226.0], [18.4, 228.0], [18.5, 228.0], [18.6, 229.0], [18.7, 230.0], [18.8, 230.0], [18.9, 230.0], [19.0, 230.0], [19.1, 231.0], [19.2, 232.0], [19.3, 232.0], [19.4, 232.0], [19.5, 233.0], [19.6, 233.0], [19.7, 234.0], [19.8, 234.0], [19.9, 236.0], [20.0, 237.0], [20.1, 237.0], [20.2, 238.0], [20.3, 238.0], [20.4, 240.0], [20.5, 241.0], [20.6, 241.0], [20.7, 241.0], [20.8, 242.0], [20.9, 243.0], [21.0, 246.0], [21.1, 247.0], [21.2, 247.0], [21.3, 248.0], [21.4, 249.0], [21.5, 249.0], [21.6, 250.0], [21.7, 251.0], [21.8, 251.0], [21.9, 252.0], [22.0, 252.0], [22.1, 252.0], [22.2, 253.0], [22.3, 254.0], [22.4, 254.0], [22.5, 254.0], [22.6, 256.0], [22.7, 256.0], [22.8, 257.0], [22.9, 257.0], [23.0, 258.0], [23.1, 258.0], [23.2, 259.0], [23.3, 260.0], [23.4, 261.0], [23.5, 262.0], [23.6, 264.0], [23.7, 264.0], [23.8, 265.0], [23.9, 265.0], [24.0, 266.0], [24.1, 267.0], [24.2, 267.0], [24.3, 268.0], [24.4, 269.0], [24.5, 269.0], [24.6, 269.0], [24.7, 269.0], [24.8, 269.0], [24.9, 271.0], [25.0, 271.0], [25.1, 274.0], [25.2, 275.0], [25.3, 276.0], [25.4, 277.0], [25.5, 278.0], [25.6, 279.0], [25.7, 280.0], [25.8, 282.0], [25.9, 283.0], [26.0, 284.0], [26.1, 284.0], [26.2, 285.0], [26.3, 286.0], [26.4, 286.0], [26.5, 287.0], [26.6, 287.0], [26.7, 287.0], [26.8, 288.0], [26.9, 289.0], [27.0, 290.0], [27.1, 292.0], [27.2, 292.0], [27.3, 293.0], [27.4, 294.0], [27.5, 295.0], [27.6, 296.0], [27.7, 297.0], [27.8, 298.0], [27.9, 299.0], [28.0, 301.0], [28.1, 301.0], [28.2, 301.0], [28.3, 302.0], [28.4, 302.0], [28.5, 304.0], [28.6, 305.0], [28.7, 306.0], [28.8, 306.0], [28.9, 307.0], [29.0, 307.0], [29.1, 309.0], [29.2, 309.0], [29.3, 310.0], [29.4, 311.0], [29.5, 311.0], [29.6, 312.0], [29.7, 313.0], [29.8, 314.0], [29.9, 315.0], [30.0, 316.0], [30.1, 317.0], [30.2, 318.0], [30.3, 318.0], [30.4, 319.0], [30.5, 319.0], [30.6, 320.0], [30.7, 321.0], [30.8, 322.0], [30.9, 322.0], [31.0, 323.0], [31.1, 324.0], [31.2, 325.0], [31.3, 326.0], [31.4, 327.0], [31.5, 327.0], [31.6, 328.0], [31.7, 328.0], [31.8, 331.0], [31.9, 331.0], [32.0, 332.0], [32.1, 333.0], [32.2, 334.0], [32.3, 336.0], [32.4, 336.0], [32.5, 337.0], [32.6, 337.0], [32.7, 338.0], [32.8, 339.0], [32.9, 341.0], [33.0, 343.0], [33.1, 344.0], [33.2, 345.0], [33.3, 346.0], [33.4, 347.0], [33.5, 347.0], [33.6, 348.0], [33.7, 349.0], [33.8, 350.0], [33.9, 350.0], [34.0, 350.0], [34.1, 352.0], [34.2, 353.0], [34.3, 355.0], [34.4, 358.0], [34.5, 358.0], [34.6, 360.0], [34.7, 360.0], [34.8, 361.0], [34.9, 362.0], [35.0, 363.0], [35.1, 364.0], [35.2, 365.0], [35.3, 366.0], [35.4, 367.0], [35.5, 368.0], [35.6, 368.0], [35.7, 370.0], [35.8, 370.0], [35.9, 370.0], [36.0, 373.0], [36.1, 373.0], [36.2, 374.0], [36.3, 375.0], [36.4, 376.0], [36.5, 377.0], [36.6, 378.0], [36.7, 378.0], [36.8, 378.0], [36.9, 379.0], [37.0, 380.0], [37.1, 380.0], [37.2, 381.0], [37.3, 382.0], [37.4, 382.0], [37.5, 383.0], [37.6, 384.0], [37.7, 385.0], [37.8, 386.0], [37.9, 388.0], [38.0, 388.0], [38.1, 388.0], [38.2, 389.0], [38.3, 390.0], [38.4, 391.0], [38.5, 391.0], [38.6, 393.0], [38.7, 393.0], [38.8, 395.0], [38.9, 395.0], [39.0, 396.0], [39.1, 396.0], [39.2, 398.0], [39.3, 398.0], [39.4, 399.0], [39.5, 400.0], [39.6, 401.0], [39.7, 402.0], [39.8, 403.0], [39.9, 405.0], [40.0, 406.0], [40.1, 406.0], [40.2, 406.0], [40.3, 406.0], [40.4, 407.0], [40.5, 408.0], [40.6, 409.0], [40.7, 409.0], [40.8, 410.0], [40.9, 411.0], [41.0, 411.0], [41.1, 412.0], [41.2, 412.0], [41.3, 412.0], [41.4, 413.0], [41.5, 413.0], [41.6, 414.0], [41.7, 416.0], [41.8, 416.0], [41.9, 417.0], [42.0, 417.0], [42.1, 417.0], [42.2, 418.0], [42.3, 418.0], [42.4, 419.0], [42.5, 420.0], [42.6, 420.0], [42.7, 420.0], [42.8, 421.0], [42.9, 421.0], [43.0, 422.0], [43.1, 422.0], [43.2, 422.0], [43.3, 424.0], [43.4, 424.0], [43.5, 426.0], [43.6, 426.0], [43.7, 427.0], [43.8, 428.0], [43.9, 429.0], [44.0, 430.0], [44.1, 430.0], [44.2, 433.0], [44.3, 433.0], [44.4, 434.0], [44.5, 434.0], [44.6, 436.0], [44.7, 436.0], [44.8, 437.0], [44.9, 438.0], [45.0, 439.0], [45.1, 440.0], [45.2, 440.0], [45.3, 440.0], [45.4, 441.0], [45.5, 442.0], [45.6, 442.0], [45.7, 443.0], [45.8, 444.0], [45.9, 446.0], [46.0, 447.0], [46.1, 448.0], [46.2, 449.0], [46.3, 449.0], [46.4, 450.0], [46.5, 452.0], [46.6, 452.0], [46.7, 453.0], [46.8, 454.0], [46.9, 454.0], [47.0, 455.0], [47.1, 457.0], [47.2, 458.0], [47.3, 459.0], [47.4, 460.0], [47.5, 460.0], [47.6, 461.0], [47.7, 461.0], [47.8, 462.0], [47.9, 463.0], [48.0, 465.0], [48.1, 466.0], [48.2, 467.0], [48.3, 467.0], [48.4, 468.0], [48.5, 468.0], [48.6, 469.0], [48.7, 470.0], [48.8, 471.0], [48.9, 472.0], [49.0, 473.0], [49.1, 474.0], [49.2, 474.0], [49.3, 475.0], [49.4, 476.0], [49.5, 476.0], [49.6, 478.0], [49.7, 479.0], [49.8, 480.0], [49.9, 480.0], [50.0, 482.0], [50.1, 483.0], [50.2, 484.0], [50.3, 486.0], [50.4, 486.0], [50.5, 487.0], [50.6, 487.0], [50.7, 490.0], [50.8, 492.0], [50.9, 493.0], [51.0, 494.0], [51.1, 495.0], [51.2, 496.0], [51.3, 497.0], [51.4, 497.0], [51.5, 498.0], [51.6, 499.0], [51.7, 500.0], [51.8, 502.0], [51.9, 503.0], [52.0, 503.0], [52.1, 503.0], [52.2, 505.0], [52.3, 507.0], [52.4, 509.0], [52.5, 510.0], [52.6, 511.0], [52.7, 511.0], [52.8, 513.0], [52.9, 513.0], [53.0, 514.0], [53.1, 515.0], [53.2, 518.0], [53.3, 521.0], [53.4, 525.0], [53.5, 526.0], [53.6, 527.0], [53.7, 528.0], [53.8, 529.0], [53.9, 530.0], [54.0, 530.0], [54.1, 532.0], [54.2, 533.0], [54.3, 534.0], [54.4, 535.0], [54.5, 535.0], [54.6, 536.0], [54.7, 537.0], [54.8, 538.0], [54.9, 540.0], [55.0, 542.0], [55.1, 543.0], [55.2, 544.0], [55.3, 545.0], [55.4, 548.0], [55.5, 551.0], [55.6, 554.0], [55.7, 554.0], [55.8, 555.0], [55.9, 556.0], [56.0, 557.0], [56.1, 559.0], [56.2, 560.0], [56.3, 563.0], [56.4, 566.0], [56.5, 566.0], [56.6, 567.0], [56.7, 569.0], [56.8, 569.0], [56.9, 570.0], [57.0, 571.0], [57.1, 574.0], [57.2, 575.0], [57.3, 577.0], [57.4, 578.0], [57.5, 583.0], [57.6, 585.0], [57.7, 588.0], [57.8, 592.0], [57.9, 594.0], [58.0, 595.0], [58.1, 598.0], [58.2, 600.0], [58.3, 600.0], [58.4, 601.0], [58.5, 602.0], [58.6, 603.0], [58.7, 604.0], [58.8, 607.0], [58.9, 608.0], [59.0, 610.0], [59.1, 610.0], [59.2, 611.0], [59.3, 615.0], [59.4, 615.0], [59.5, 618.0], [59.6, 618.0], [59.7, 620.0], [59.8, 620.0], [59.9, 623.0], [60.0, 626.0], [60.1, 628.0], [60.2, 630.0], [60.3, 631.0], [60.4, 633.0], [60.5, 634.0], [60.6, 638.0], [60.7, 639.0], [60.8, 641.0], [60.9, 643.0], [61.0, 649.0], [61.1, 653.0], [61.2, 655.0], [61.3, 657.0], [61.4, 659.0], [61.5, 661.0], [61.6, 666.0], [61.7, 670.0], [61.8, 671.0], [61.9, 674.0], [62.0, 677.0], [62.1, 679.0], [62.2, 682.0], [62.3, 683.0], [62.4, 686.0], [62.5, 686.0], [62.6, 689.0], [62.7, 691.0], [62.8, 693.0], [62.9, 700.0], [63.0, 703.0], [63.1, 704.0], [63.2, 705.0], [63.3, 707.0], [63.4, 708.0], [63.5, 711.0], [63.6, 712.0], [63.7, 716.0], [63.8, 716.0], [63.9, 717.0], [64.0, 719.0], [64.1, 720.0], [64.2, 721.0], [64.3, 722.0], [64.4, 726.0], [64.5, 728.0], [64.6, 730.0], [64.7, 730.0], [64.8, 732.0], [64.9, 736.0], [65.0, 738.0], [65.1, 738.0], [65.2, 739.0], [65.3, 742.0], [65.4, 744.0], [65.5, 745.0], [65.6, 746.0], [65.7, 748.0], [65.8, 751.0], [65.9, 754.0], [66.0, 758.0], [66.1, 764.0], [66.2, 765.0], [66.3, 768.0], [66.4, 769.0], [66.5, 775.0], [66.6, 777.0], [66.7, 780.0], [66.8, 782.0], [66.9, 785.0], [67.0, 787.0], [67.1, 791.0], [67.2, 795.0], [67.3, 799.0], [67.4, 800.0], [67.5, 801.0], [67.6, 803.0], [67.7, 808.0], [67.8, 810.0], [67.9, 811.0], [68.0, 815.0], [68.1, 818.0], [68.2, 820.0], [68.3, 824.0], [68.4, 824.0], [68.5, 827.0], [68.6, 830.0], [68.7, 831.0], [68.8, 833.0], [68.9, 836.0], [69.0, 838.0], [69.1, 842.0], [69.2, 843.0], [69.3, 849.0], [69.4, 852.0], [69.5, 853.0], [69.6, 856.0], [69.7, 858.0], [69.8, 862.0], [69.9, 863.0], [70.0, 866.0], [70.1, 867.0], [70.2, 869.0], [70.3, 871.0], [70.4, 873.0], [70.5, 875.0], [70.6, 877.0], [70.7, 880.0], [70.8, 882.0], [70.9, 883.0], [71.0, 885.0], [71.1, 886.0], [71.2, 888.0], [71.3, 889.0], [71.4, 893.0], [71.5, 895.0], [71.6, 898.0], [71.7, 900.0], [71.8, 906.0], [71.9, 908.0], [72.0, 909.0], [72.1, 912.0], [72.2, 915.0], [72.3, 919.0], [72.4, 920.0], [72.5, 921.0], [72.6, 922.0], [72.7, 925.0], [72.8, 926.0], [72.9, 927.0], [73.0, 937.0], [73.1, 939.0], [73.2, 950.0], [73.3, 951.0], [73.4, 957.0], [73.5, 960.0], [73.6, 961.0], [73.7, 965.0], [73.8, 967.0], [73.9, 970.0], [74.0, 972.0], [74.1, 977.0], [74.2, 980.0], [74.3, 983.0], [74.4, 983.0], [74.5, 987.0], [74.6, 993.0], [74.7, 994.0], [74.8, 998.0], [74.9, 1000.0], [75.0, 1002.0], [75.1, 1003.0], [75.2, 1006.0], [75.3, 1010.0], [75.4, 1015.0], [75.5, 1018.0], [75.6, 1021.0], [75.7, 1025.0], [75.8, 1028.0], [75.9, 1030.0], [76.0, 1033.0], [76.1, 1038.0], [76.2, 1040.0], [76.3, 1043.0], [76.4, 1050.0], [76.5, 1051.0], [76.6, 1056.0], [76.7, 1058.0], [76.8, 1066.0], [76.9, 1070.0], [77.0, 1074.0], [77.1, 1085.0], [77.2, 1090.0], [77.3, 1097.0], [77.4, 1098.0], [77.5, 1108.0], [77.6, 1110.0], [77.7, 1113.0], [77.8, 1114.0], [77.9, 1118.0], [78.0, 1121.0], [78.1, 1122.0], [78.2, 1128.0], [78.3, 1132.0], [78.4, 1138.0], [78.5, 1139.0], [78.6, 1145.0], [78.7, 1147.0], [78.8, 1152.0], [78.9, 1154.0], [79.0, 1157.0], [79.1, 1160.0], [79.2, 1164.0], [79.3, 1169.0], [79.4, 1175.0], [79.5, 1181.0], [79.6, 1184.0], [79.7, 1186.0], [79.8, 1187.0], [79.9, 1191.0], [80.0, 1196.0], [80.1, 1197.0], [80.2, 1199.0], [80.3, 1201.0], [80.4, 1202.0], [80.5, 1203.0], [80.6, 1208.0], [80.7, 1209.0], [80.8, 1212.0], [80.9, 1215.0], [81.0, 1220.0], [81.1, 1222.0], [81.2, 1224.0], [81.3, 1227.0], [81.4, 1228.0], [81.5, 1232.0], [81.6, 1236.0], [81.7, 1245.0], [81.8, 1249.0], [81.9, 1254.0], [82.0, 1256.0], [82.1, 1263.0], [82.2, 1265.0], [82.3, 1267.0], [82.4, 1271.0], [82.5, 1280.0], [82.6, 1287.0], [82.7, 1290.0], [82.8, 1298.0], [82.9, 1306.0], [83.0, 1308.0], [83.1, 1318.0], [83.2, 1320.0], [83.3, 1321.0], [83.4, 1325.0], [83.5, 1337.0], [83.6, 1340.0], [83.7, 1345.0], [83.8, 1348.0], [83.9, 1349.0], [84.0, 1353.0], [84.1, 1356.0], [84.2, 1359.0], [84.3, 1361.0], [84.4, 1364.0], [84.5, 1368.0], [84.6, 1371.0], [84.7, 1379.0], [84.8, 1385.0], [84.9, 1388.0], [85.0, 1392.0], [85.1, 1393.0], [85.2, 1394.0], [85.3, 1400.0], [85.4, 1402.0], [85.5, 1402.0], [85.6, 1418.0], [85.7, 1428.0], [85.8, 1433.0], [85.9, 1435.0], [86.0, 1447.0], [86.1, 1448.0], [86.2, 1458.0], [86.3, 1460.0], [86.4, 1464.0], [86.5, 1472.0], [86.6, 1478.0], [86.7, 1480.0], [86.8, 1482.0], [86.9, 1492.0], [87.0, 1498.0], [87.1, 1503.0], [87.2, 1506.0], [87.3, 1514.0], [87.4, 1518.0], [87.5, 1520.0], [87.6, 1525.0], [87.7, 1526.0], [87.8, 1533.0], [87.9, 1536.0], [88.0, 1548.0], [88.1, 1552.0], [88.2, 1564.0], [88.3, 1571.0], [88.4, 1574.0], [88.5, 1578.0], [88.6, 1580.0], [88.7, 1586.0], [88.8, 1587.0], [88.9, 1592.0], [89.0, 1595.0], [89.1, 1614.0], [89.2, 1624.0], [89.3, 1635.0], [89.4, 1641.0], [89.5, 1644.0], [89.6, 1651.0], [89.7, 1664.0], [89.8, 1666.0], [89.9, 1669.0], [90.0, 1673.0], [90.1, 1678.0], [90.2, 1679.0], [90.3, 1703.0], [90.4, 1706.0], [90.5, 1711.0], [90.6, 1715.0], [90.7, 1719.0], [90.8, 1723.0], [90.9, 1732.0], [91.0, 1736.0], [91.1, 1739.0], [91.2, 1777.0], [91.3, 1790.0], [91.4, 1800.0], [91.5, 1803.0], [91.6, 1806.0], [91.7, 1807.0], [91.8, 1832.0], [91.9, 1856.0], [92.0, 1863.0], [92.1, 1867.0], [92.2, 1881.0], [92.3, 1894.0], [92.4, 1901.0], [92.5, 1910.0], [92.6, 1911.0], [92.7, 1921.0], [92.8, 1928.0], [92.9, 1932.0], [93.0, 1942.0], [93.1, 1949.0], [93.2, 1957.0], [93.3, 1966.0], [93.4, 1979.0], [93.5, 1997.0], [93.6, 2017.0], [93.7, 2040.0], [93.8, 2048.0], [93.9, 2055.0], [94.0, 2077.0], [94.1, 2087.0], [94.2, 2089.0], [94.3, 2098.0], [94.4, 2099.0], [94.5, 2110.0], [94.6, 2123.0], [94.7, 2126.0], [94.8, 2146.0], [94.9, 2171.0], [95.0, 2198.0], [95.1, 2209.0], [95.2, 2231.0], [95.3, 2234.0], [95.4, 2243.0], [95.5, 2263.0], [95.6, 2286.0], [95.7, 2289.0], [95.8, 2301.0], [95.9, 2315.0], [96.0, 2326.0], [96.1, 2363.0], [96.2, 2378.0], [96.3, 2402.0], [96.4, 2463.0], [96.5, 2470.0], [96.6, 2490.0], [96.7, 2510.0], [96.8, 2533.0], [96.9, 2595.0], [97.0, 2614.0], [97.1, 2620.0], [97.2, 2642.0], [97.3, 2715.0], [97.4, 2752.0], [97.5, 2822.0], [97.6, 2900.0], [97.7, 2949.0], [97.8, 2986.0], [97.9, 3039.0], [98.0, 3066.0], [98.1, 3084.0], [98.2, 3207.0], [98.3, 3225.0], [98.4, 3350.0], [98.5, 3426.0], [98.6, 3619.0], [98.7, 3661.0], [98.8, 3685.0], [98.9, 3810.0], [99.0, 3912.0], [99.1, 3952.0], [99.2, 3988.0], [99.3, 4020.0], [99.4, 4219.0], [99.5, 4449.0], [99.6, 4604.0], [99.7, 5237.0], [99.8, 5773.0], [99.9, 6004.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1787.0, "series": [{"data": [[0.0, 869.0], [600.0, 444.0], [700.0, 278.0], [800.0, 201.0], [900.0, 207.0], [1000.0, 188.0], [1100.0, 223.0], [1200.0, 214.0], [1300.0, 171.0], [1400.0, 167.0], [1500.0, 139.0], [1600.0, 90.0], [1700.0, 66.0], [1800.0, 63.0], [1900.0, 51.0], [2000.0, 42.0], [2100.0, 40.0], [2200.0, 21.0], [2300.0, 18.0], [2400.0, 12.0], [2500.0, 14.0], [2600.0, 9.0], [2800.0, 9.0], [2700.0, 10.0], [2900.0, 10.0], [3000.0, 6.0], [3100.0, 3.0], [3300.0, 6.0], [3200.0, 10.0], [3400.0, 4.0], [3500.0, 6.0], [3700.0, 1.0], [3600.0, 6.0], [3800.0, 3.0], [3900.0, 3.0], [4000.0, 2.0], [4200.0, 2.0], [4100.0, 2.0], [4300.0, 3.0], [4400.0, 2.0], [4500.0, 2.0], [4600.0, 1.0], [4800.0, 1.0], [4700.0, 1.0], [5300.0, 1.0], [5500.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [6400.0, 1.0], [16900.0, 1.0], [100.0, 1787.0], [200.0, 1632.0], [300.0, 1527.0], [400.0, 1031.0], [500.0, 637.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 93.0], [300.0, 1.0], [600.0, 1.0], [700.0, 1.0], [100.0, 2.0], [900.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 92.0], [300.0, 7.0], [100.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 118.0], [600.0, 121.0], [700.0, 113.0], [800.0, 111.0], [900.0, 81.0], [1000.0, 67.0], [1100.0, 71.0], [1200.0, 66.0], [1300.0, 62.0], [1400.0, 45.0], [1500.0, 53.0], [1600.0, 30.0], [1700.0, 29.0], [1800.0, 25.0], [1900.0, 29.0], [2000.0, 23.0], [2100.0, 16.0], [2300.0, 13.0], [2200.0, 19.0], [2400.0, 10.0], [2500.0, 7.0], [2600.0, 9.0], [2700.0, 4.0], [2800.0, 3.0], [2900.0, 6.0], [3000.0, 8.0], [3100.0, 2.0], [3300.0, 3.0], [3200.0, 4.0], [3400.0, 2.0], [3500.0, 1.0], [3600.0, 6.0], [3700.0, 1.0], [3800.0, 3.0], [3900.0, 6.0], [4000.0, 3.0], [4200.0, 3.0], [4300.0, 1.0], [4500.0, 1.0], [4600.0, 1.0], [4400.0, 1.0], [4900.0, 1.0], [5200.0, 2.0], [5600.0, 1.0], [5800.0, 2.0], [5700.0, 1.0], [6000.0, 1.0], [9300.0, 1.0], [14700.0, 1.0], [100.0, 277.0], [200.0, 319.0], [300.0, 294.0], [400.0, 311.0], [500.0, 167.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 995.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8379.0, "series": [{"data": [[0.0, 8379.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3622.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 995.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 34.373698418819984, "minX": 1.61726988E12, "maxY": 88.93455334987577, "series": [{"data": [[1.61727E12, 34.373698418819984], [1.61726988E12, 38.66573957016436], [1.61726994E12, 88.93455334987577]], "isOverall": false, "label": "jp@gc - Stepping Thread Group (deprecated)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4056.0, "series": [{"data": [[2.0, 48.0], [3.0, 125.0], [5.0, 51.0], [6.0, 66.0], [7.0, 113.0], [8.0, 101.0], [10.0, 84.97302904564323], [11.0, 471.4], [12.0, 576.5], [13.0, 72.0], [14.0, 778.5], [15.0, 188.5333333333333], [16.0, 559.5], [17.0, 455.0], [18.0, 159.66666666666669], [19.0, 92.0], [20.0, 191.57729468599027], [21.0, 104.13043478260869], [22.0, 141.3125], [23.0, 108.08333333333331], [24.0, 170.72727272727272], [25.0, 274.50938337801597], [26.0, 190.34782608695653], [27.0, 163.3846153846154], [28.0, 217.5263157894737], [29.0, 186.26086956521738], [30.0, 203.4], [31.0, 252.88888888888889], [32.0, 256.1818181818182], [33.0, 240.04999999999995], [34.0, 199.14285714285717], [35.0, 241.77777777777777], [36.0, 280.61904761904765], [37.0, 215.66666666666666], [38.0, 254.52173913043478], [39.0, 301.88235294117646], [40.0, 307.3952569169959], [41.0, 301.6], [42.0, 163.78947368421052], [43.0, 297.46153846153845], [44.0, 357.59999999999997], [45.0, 278.6363636363636], [46.0, 345.1923076923078], [47.0, 279.07142857142856], [48.0, 316.6842105263158], [50.0, 520.7083333333333], [51.0, 647.71875], [52.0, 526.4], [53.0, 317.7272727272727], [54.0, 262.5], [55.0, 536.3363228699552], [56.0, 576.9999999999998], [57.0, 361.9799999999999], [58.0, 658.4697986577183], [59.0, 553.4594594594596], [60.0, 542.0946681175186], [61.0, 507.6153846153846], [62.0, 373.75], [63.0, 393.77777777777777], [64.0, 618.7333333333333], [65.0, 624.8888888888889], [66.0, 532.7826086956522], [67.0, 412.66666666666674], [68.0, 379.52631578947364], [69.0, 717.1428571428571], [70.0, 286.23076923076917], [71.0, 642.4533333333334], [72.0, 619.9530201342278], [73.0, 954.6363636363637], [74.0, 619.8928571428569], [75.0, 618.4634146341464], [76.0, 635.1538461538461], [77.0, 498.0625], [78.0, 593.25], [79.0, 829.875], [80.0, 612.8666666666669], [81.0, 488.4], [82.0, 676.125], [83.0, 388.0], [84.0, 931.3571428571429], [85.0, 738.0756578947367], [86.0, 755.125], [87.0, 839.3043478260868], [88.0, 722.8863636363636], [89.0, 1100.896551724138], [90.0, 995.074074074074], [91.0, 760.6190476190476], [92.0, 744.6315789473684], [93.0, 786.1600000000001], [94.0, 928.9230769230769], [95.0, 705.7142857142857], [96.0, 1039.8749999999998], [97.0, 718.9285714285714], [98.0, 975.7727272727273], [99.0, 580.0], [100.0, 877.8925233644877], [1.0, 60.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[62.9093838492331, 541.6331412947976]], "isOverall": false, "label": "VNE-GET-bongda-Aggregated", "isController": false}, {"data": [[7.0, 496.1428571428571], [8.0, 114.0], [9.0, 5.0], [10.0, 3.0], [11.0, 0.0], [12.0, 2.0], [13.0, 0.0], [14.0, 1.0], [15.0, 1.0], [16.0, 1.0], [17.0, 1.0], [18.0, 14.0], [19.0, 0.0], [20.0, 14.0], [21.0, 1.0], [22.0, 4.0], [23.0, 1.0], [24.0, 1.0], [25.0, 2.0], [26.0, 2.0], [27.0, 0.0], [28.0, 1.0], [29.0, 1.0], [30.0, 1.0], [31.0, 1.0], [32.0, 2.0], [33.0, 1.0], [34.0, 0.0], [35.0, 1.0], [36.0, 1.0], [37.0, 0.0], [38.0, 1.0], [39.0, 1.0], [40.0, 4.0], [41.0, 1.0], [42.0, 1.0], [43.0, 1.0], [44.0, 0.0], [45.0, 1.0], [46.0, 1.0], [47.0, 0.0], [48.0, 0.0], [49.0, 1.0], [50.0, 4.0], [51.0, 0.0], [52.0, 1.0], [53.0, 1.0], [54.0, 1.0], [55.0, 1.0], [56.0, 1.0], [57.0, 0.0], [58.0, 1.0], [59.0, 4.0], [60.0, 0.0], [61.0, 2.0], [62.0, 0.0], [63.0, 7.0], [64.0, 5.0], [65.0, 0.0], [66.0, 0.0], [67.0, 0.0], [68.0, 0.0], [69.0, 0.0], [70.0, 0.0], [71.0, 1.0], [72.0, 0.0], [73.0, 1.0], [74.0, 2.0], [75.0, 1.0], [76.0, 0.0], [77.0, 1.0], [78.0, 1.0], [79.0, 1.0], [80.0, 0.0], [81.0, 1.0], [82.0, 0.0], [83.0, 0.0], [84.0, 1.0], [85.0, 1.0], [86.0, 2.0], [87.0, 0.0], [88.0, 2.0], [89.0, 1.0], [90.0, 7.0], [91.0, 1.0], [92.0, 1.0], [93.0, 1.0], [94.0, 1.0], [95.0, 2.0], [96.0, 2.0], [97.0, 0.0], [98.0, 0.0], [99.0, 1.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[50.709999999999994, 37.209999999999994]], "isOverall": false, "label": "PROF - VNE - Test 01-Aggregated", "isController": false}, {"data": [[9.0, 262.77777777777777], [10.0, 1.0], [11.0, 1.0], [12.0, 1.0], [13.0, 1.0], [14.0, 1.0], [15.0, 3.0], [16.0, 2.0], [17.0, 1.0], [18.0, 1.0], [19.0, 1.0], [20.0, 9.0], [21.0, 1.0], [22.0, 6.0], [23.0, 0.0], [24.0, 1.0], [25.0, 2.0], [26.0, 1.0], [27.0, 3.0], [28.0, 1.0], [29.0, 6.0], [30.0, 0.0], [31.0, 1.0], [32.0, 2.0], [33.0, 1.0], [34.0, 1.0], [35.0, 17.0], [36.0, 0.0], [37.0, 1.0], [38.0, 2.0], [39.0, 3.0], [40.0, 1.0], [41.0, 1.0], [42.0, 1.0], [43.0, 2.0], [44.0, 1.0], [45.0, 3.0], [46.0, 1.0], [47.0, 2.0], [48.0, 1.0], [49.0, 1.0], [50.0, 1.0], [51.0, 10.0], [52.0, 3.0], [53.0, 3.0], [54.0, 0.0], [55.0, 0.0], [56.0, 2.0], [57.0, 13.0], [58.0, 1.0], [59.0, 2.0], [60.0, 1.0], [61.0, 1.0], [62.0, 1.0], [63.0, 5.0], [64.0, 1.0], [65.0, 1.0], [66.0, 1.0], [67.0, 1.0], [68.0, 2.0], [69.0, 0.0], [70.0, 1.0], [71.0, 0.0], [72.0, 2.0], [73.0, 2.0], [74.0, 2.0], [75.0, 1.0], [76.0, 0.0], [77.0, 1.0], [78.0, 1.0], [79.0, 0.0], [80.0, 4.0], [81.0, 1.0], [82.0, 1.0], [83.0, 1.0], [84.0, 1.0], [85.0, 1.0], [86.0, 4.0], [87.0, 1.0], [88.0, 7.0], [89.0, 5.0], [90.0, 7.0], [91.0, 0.0], [92.0, 1.0], [93.0, 2.0], [94.0, 7.0], [95.0, 1.0], [96.0, 5.0], [97.0, 1.0], [98.0, 2.0], [99.0, 0.0], [100.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[50.86, 25.62]], "isOverall": false, "label": "PROF - VNE - Random main action-Aggregated", "isController": false}, {"data": [[4.0, 59.0], [10.0, 106.22314049586777], [11.0, 91.0], [12.0, 1505.0], [13.0, 1552.0], [15.0, 218.00000000000003], [18.0, 347.0], [20.0, 306.4634146341466], [21.0, 139.14285714285714], [22.0, 112.0], [23.0, 188.25], [24.0, 171.66666666666666], [25.0, 399.38709677419376], [26.0, 310.66666666666663], [27.0, 303.0], [28.0, 266.7142857142857], [29.0, 217.2], [30.0, 230.0], [31.0, 277.00000000000006], [32.0, 235.5], [33.0, 309.28571428571433], [34.0, 181.16666666666669], [35.0, 409.0], [37.0, 460.57142857142856], [38.0, 311.625], [39.0, 337.0], [40.0, 403.7105943152454], [41.0, 685.6666666666667], [42.0, 152.16666666666669], [43.0, 140.0], [44.0, 607.0], [45.0, 539.2], [46.0, 354.3076923076923], [47.0, 252.5], [48.0, 431.75], [49.0, 189.0], [50.0, 972.4285714285714], [51.0, 1585.0], [53.0, 806.2727272727273], [54.0, 473.5714285714286], [55.0, 535.2941176470589], [57.0, 357.22727272727275], [56.0, 1765.0], [58.0, 464.9374999999999], [59.0, 554.5555555555555], [60.0, 575.1054852320676], [61.0, 847.6666666666667], [62.0, 255.5], [63.0, 676.0], [64.0, 504.5], [66.0, 729.125], [67.0, 1155.0], [65.0, 1679.0], [68.0, 1437.25], [69.0, 476.0], [71.0, 691.0563380281691], [70.0, 1306.0], [72.0, 939.9473684210527], [74.0, 1624.0], [75.0, 958.9000000000001], [76.0, 913.0], [77.0, 836.0], [78.0, 421.0], [79.0, 384.0], [80.0, 1101.1527093596058], [81.0, 3565.0], [82.0, 3334.333333333333], [83.0, 2208.0], [84.0, 689.75], [85.0, 1229.093023255814], [86.0, 2297.5], [87.0, 2177.2857142857147], [88.0, 1649.3076923076922], [89.0, 1529.3333333333333], [90.0, 1518.0], [91.0, 994.5], [92.0, 4056.0], [93.0, 1703.5], [94.0, 2452.0], [95.0, 1695.6666666666667], [96.0, 1433.6], [97.0, 1515.0], [98.0, 1425.6000000000001], [99.0, 2510.0], [100.0, 1159.6712121212115]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}, {"data": [[63.0497064579257, 765.8258317025443]], "isOverall": false, "label": "VNE-GET-quansu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 24332.55, "minX": 1.61726988E12, "maxY": 6567989.35, "series": [{"data": [[1.61727E12, 2685136.3833333333], [1.61726988E12, 3960873.716666667], [1.61726994E12, 6567989.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61727E12, 24332.55], [1.61726988E12, 36017.2], [1.61726994E12, 59832.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.15, "minX": 1.61726988E12, "maxY": 1127.822555205048, "series": [{"data": [[1.61727E12, 336.4261583011574], [1.61726988E12, 319.3206256109479], [1.61726994E12, 758.7833333333336]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61726988E12, 61.24999999999998], [1.61726994E12, 1.15]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61726988E12, 41.43333333333332], [1.61726994E12, 1.9000000000000006]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727E12, 396.4299424184261], [1.61726988E12, 417.8407310704961], [1.61726994E12, 1127.822555205048]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61726988E12, "maxY": 556.720392156861, "series": [{"data": [[1.61727E12, 286.2572393822393], [1.61726988E12, 272.95047246660135], [1.61726994E12, 556.720392156861]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61726988E12, 0.0], [1.61726994E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61726988E12, 0.0], [1.61726994E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727E12, 275.16698656429924], [1.61726988E12, 257.35900783289793], [1.61726994E12, 539.143533123029]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61726988E12, "maxY": 443.7062745098038, "series": [{"data": [[1.61727E12, 221.25530888030855], [1.61726988E12, 210.8608667318345], [1.61726994E12, 443.7062745098038]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61726988E12, 0.0], [1.61726994E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61726988E12, 0.0], [1.61726994E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727E12, 220.43761996161254], [1.61726988E12, 207.19060052219353], [1.61726994E12, 436.41009463722423]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61726988E12, "maxY": 16928.0, "series": [{"data": [[1.61727E12, 16928.0], [1.61726988E12, 2458.0], [1.61726994E12, 14796.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61727E12, 685.9999999999986], [1.61726988E12, 586.4000000000001], [1.61726994E12, 1699.2000000000007]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61727E12, 1933.0799999999963], [1.61726988E12, 1444.88], [1.61726994E12, 3682.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61727E12, 1194.2999999999997], [1.61726988E12, 813.3999999999996], [1.61726994E12, 2124.0999999999985]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61727E12, 44.0], [1.61726988E12, 0.0], [1.61726994E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61727E12, 249.0], [1.61726988E12, 263.0], [1.61726994E12, 588.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 12.0, "maxY": 1437.5, "series": [{"data": [[12.0, 1.0], [22.0, 302.5], [24.0, 666.0], [35.0, 592.0], [38.0, 434.5], [48.0, 1437.5], [52.0, 1210.5], [54.0, 848.0], [59.0, 727.5], [62.0, 608.5], [63.0, 1215.0], [65.0, 541.0], [66.0, 778.0], [67.0, 71.0], [71.0, 626.5], [69.0, 825.0], [73.0, 230.0], [72.0, 246.5], [77.0, 140.0], [76.0, 940.5], [80.0, 418.0], [85.0, 461.0], [84.0, 552.0], [87.0, 708.0], [90.0, 387.0], [89.0, 1215.0], [91.0, 504.0], [93.0, 795.0], [94.0, 1370.5], [92.0, 532.5], [96.0, 429.5], [98.0, 512.0], [99.0, 83.0], [102.0, 377.0], [101.0, 334.0], [100.0, 782.5], [104.0, 169.5], [105.0, 438.0], [107.0, 387.0], [109.0, 222.5], [111.0, 266.0], [108.0, 660.0], [110.0, 75.0], [113.0, 232.5], [114.0, 485.5], [112.0, 618.5], [115.0, 267.0], [118.0, 342.0], [116.0, 321.0], [119.0, 125.5], [117.0, 619.0], [123.0, 465.0], [120.0, 611.5], [122.0, 677.5], [126.0, 178.0], [125.0, 527.5], [127.0, 309.0], [124.0, 74.5], [134.0, 278.5], [132.0, 207.0], [128.0, 435.5], [129.0, 512.0], [131.0, 219.5], [130.0, 692.0], [135.0, 283.0], [143.0, 249.0], [140.0, 232.5], [141.0, 347.5], [138.0, 425.0], [150.0, 129.0], [151.0, 240.0], [147.0, 344.0], [146.0, 425.5], [149.0, 458.5], [153.0, 404.0], [157.0, 501.0], [154.0, 591.0], [152.0, 455.0], [164.0, 116.0], [177.0, 339.0], [184.0, 255.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 184.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 12.0, "maxY": 1210.5, "series": [{"data": [[12.0, 0.0], [22.0, 0.0], [24.0, 361.5], [35.0, 412.0], [38.0, 354.5], [48.0, 941.0], [52.0, 580.5], [54.0, 319.0], [59.0, 367.5], [62.0, 354.5], [63.0, 495.0], [65.0, 508.0], [66.0, 469.5], [67.0, 61.0], [71.0, 228.0], [69.0, 297.0], [73.0, 161.0], [72.0, 189.5], [77.0, 111.0], [76.0, 511.0], [80.0, 257.0], [85.0, 325.0], [84.0, 266.0], [87.0, 515.0], [90.0, 305.0], [89.0, 719.0], [91.0, 458.0], [93.0, 717.5], [94.0, 1210.5], [92.0, 460.0], [96.0, 404.0], [98.0, 323.0], [99.0, 68.0], [102.0, 290.5], [101.0, 267.0], [100.0, 332.5], [104.0, 109.5], [105.0, 288.0], [107.0, 334.0], [109.0, 149.5], [111.0, 192.0], [108.0, 379.5], [110.0, 64.5], [113.0, 138.0], [114.0, 432.5], [112.0, 316.0], [115.0, 236.0], [118.0, 313.0], [116.0, 274.5], [119.0, 87.0], [117.0, 170.0], [123.0, 386.0], [120.0, 522.5], [122.0, 403.0], [126.0, 131.5], [125.0, 313.5], [127.0, 276.0], [124.0, 63.0], [134.0, 235.5], [132.0, 189.0], [128.0, 346.5], [129.0, 408.0], [131.0, 194.5], [130.0, 470.0], [135.0, 238.0], [143.0, 211.0], [140.0, 177.0], [141.0, 259.5], [138.0, 326.0], [150.0, 103.5], [151.0, 187.0], [147.0, 176.0], [146.0, 202.5], [149.0, 301.0], [153.0, 325.0], [157.0, 231.0], [154.0, 310.0], [152.0, 356.0], [164.0, 91.0], [177.0, 320.0], [184.0, 197.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 184.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 42.03333333333333, "minX": 1.61726988E12, "maxY": 107.65, "series": [{"data": [[1.61727E12, 42.03333333333333], [1.61726988E12, 66.91666666666667], [1.61726994E12, 107.65]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 43.21666666666667, "minX": 1.61726988E12, "maxY": 107.46666666666667, "series": [{"data": [[1.61727E12, 43.21666666666667], [1.61726988E12, 65.91666666666667], [1.61726994E12, 107.46666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.6666666666666666, "minX": 1.61726988E12, "maxY": 85.0, "series": [{"data": [[1.61726988E12, 1.0], [1.61726994E12, 0.6666666666666666]], "isOverall": false, "label": "PROF - VNE - Random main action-success", "isController": false}, {"data": [[1.61727E12, 8.683333333333334], [1.61726988E12, 12.766666666666667], [1.61726994E12, 21.133333333333333]], "isOverall": false, "label": "VNE-GET-quansu-success", "isController": false}, {"data": [[1.61726988E12, 1.0], [1.61726994E12, 0.6666666666666666]], "isOverall": false, "label": "PROF - VNE - Test 01-success", "isController": false}, {"data": [[1.61727E12, 34.53333333333333], [1.61726988E12, 51.15], [1.61726994E12, 85.0]], "isOverall": false, "label": "VNE-GET-bongda-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 43.21666666666667, "minX": 1.61726988E12, "maxY": 107.46666666666667, "series": [{"data": [[1.61727E12, 43.21666666666667], [1.61726988E12, 65.91666666666667], [1.61726994E12, 107.46666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

