/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 18044.0, "series": [{"data": [[0.0, 42.0], [0.1, 46.0], [0.2, 48.0], [0.3, 49.0], [0.4, 50.0], [0.5, 50.0], [0.6, 51.0], [0.7, 52.0], [0.8, 52.0], [0.9, 53.0], [1.0, 54.0], [1.1, 54.0], [1.2, 55.0], [1.3, 55.0], [1.4, 56.0], [1.5, 57.0], [1.6, 58.0], [1.7, 58.0], [1.8, 58.0], [1.9, 59.0], [2.0, 60.0], [2.1, 61.0], [2.2, 61.0], [2.3, 62.0], [2.4, 62.0], [2.5, 63.0], [2.6, 64.0], [2.7, 65.0], [2.8, 66.0], [2.9, 67.0], [3.0, 68.0], [3.1, 68.0], [3.2, 69.0], [3.3, 70.0], [3.4, 71.0], [3.5, 71.0], [3.6, 71.0], [3.7, 72.0], [3.8, 73.0], [3.9, 74.0], [4.0, 75.0], [4.1, 75.0], [4.2, 76.0], [4.3, 76.0], [4.4, 77.0], [4.5, 77.0], [4.6, 78.0], [4.7, 78.0], [4.8, 79.0], [4.9, 79.0], [5.0, 80.0], [5.1, 80.0], [5.2, 80.0], [5.3, 81.0], [5.4, 81.0], [5.5, 82.0], [5.6, 83.0], [5.7, 84.0], [5.8, 84.0], [5.9, 84.0], [6.0, 85.0], [6.1, 85.0], [6.2, 85.0], [6.3, 86.0], [6.4, 86.0], [6.5, 86.0], [6.6, 87.0], [6.7, 88.0], [6.8, 88.0], [6.9, 88.0], [7.0, 88.0], [7.1, 89.0], [7.2, 89.0], [7.3, 89.0], [7.4, 90.0], [7.5, 90.0], [7.6, 90.0], [7.7, 91.0], [7.8, 91.0], [7.9, 92.0], [8.0, 92.0], [8.1, 93.0], [8.2, 93.0], [8.3, 94.0], [8.4, 94.0], [8.5, 94.0], [8.6, 95.0], [8.7, 95.0], [8.8, 96.0], [8.9, 96.0], [9.0, 96.0], [9.1, 97.0], [9.2, 97.0], [9.3, 97.0], [9.4, 97.0], [9.5, 98.0], [9.6, 98.0], [9.7, 98.0], [9.8, 99.0], [9.9, 99.0], [10.0, 99.0], [10.1, 100.0], [10.2, 100.0], [10.3, 100.0], [10.4, 101.0], [10.5, 101.0], [10.6, 101.0], [10.7, 102.0], [10.8, 102.0], [10.9, 103.0], [11.0, 103.0], [11.1, 103.0], [11.2, 103.0], [11.3, 104.0], [11.4, 104.0], [11.5, 104.0], [11.6, 105.0], [11.7, 105.0], [11.8, 105.0], [11.9, 106.0], [12.0, 106.0], [12.1, 107.0], [12.2, 107.0], [12.3, 108.0], [12.4, 108.0], [12.5, 109.0], [12.6, 109.0], [12.7, 109.0], [12.8, 110.0], [12.9, 110.0], [13.0, 110.0], [13.1, 111.0], [13.2, 111.0], [13.3, 112.0], [13.4, 112.0], [13.5, 112.0], [13.6, 113.0], [13.7, 113.0], [13.8, 113.0], [13.9, 114.0], [14.0, 114.0], [14.1, 115.0], [14.2, 115.0], [14.3, 115.0], [14.4, 116.0], [14.5, 116.0], [14.6, 117.0], [14.7, 117.0], [14.8, 117.0], [14.9, 118.0], [15.0, 118.0], [15.1, 118.0], [15.2, 119.0], [15.3, 119.0], [15.4, 119.0], [15.5, 120.0], [15.6, 120.0], [15.7, 121.0], [15.8, 121.0], [15.9, 121.0], [16.0, 122.0], [16.1, 122.0], [16.2, 123.0], [16.3, 124.0], [16.4, 124.0], [16.5, 125.0], [16.6, 125.0], [16.7, 126.0], [16.8, 126.0], [16.9, 127.0], [17.0, 127.0], [17.1, 127.0], [17.2, 128.0], [17.3, 128.0], [17.4, 128.0], [17.5, 129.0], [17.6, 129.0], [17.7, 129.0], [17.8, 130.0], [17.9, 130.0], [18.0, 131.0], [18.1, 131.0], [18.2, 131.0], [18.3, 132.0], [18.4, 132.0], [18.5, 132.0], [18.6, 133.0], [18.7, 133.0], [18.8, 134.0], [18.9, 134.0], [19.0, 134.0], [19.1, 135.0], [19.2, 135.0], [19.3, 136.0], [19.4, 136.0], [19.5, 137.0], [19.6, 137.0], [19.7, 137.0], [19.8, 138.0], [19.9, 138.0], [20.0, 139.0], [20.1, 139.0], [20.2, 139.0], [20.3, 140.0], [20.4, 140.0], [20.5, 141.0], [20.6, 141.0], [20.7, 141.0], [20.8, 141.0], [20.9, 142.0], [21.0, 142.0], [21.1, 143.0], [21.2, 143.0], [21.3, 143.0], [21.4, 144.0], [21.5, 144.0], [21.6, 145.0], [21.7, 146.0], [21.8, 146.0], [21.9, 147.0], [22.0, 147.0], [22.1, 147.0], [22.2, 148.0], [22.3, 148.0], [22.4, 149.0], [22.5, 149.0], [22.6, 150.0], [22.7, 151.0], [22.8, 151.0], [22.9, 152.0], [23.0, 153.0], [23.1, 153.0], [23.2, 153.0], [23.3, 154.0], [23.4, 154.0], [23.5, 154.0], [23.6, 155.0], [23.7, 155.0], [23.8, 156.0], [23.9, 156.0], [24.0, 157.0], [24.1, 157.0], [24.2, 157.0], [24.3, 158.0], [24.4, 158.0], [24.5, 159.0], [24.6, 159.0], [24.7, 160.0], [24.8, 160.0], [24.9, 161.0], [25.0, 161.0], [25.1, 162.0], [25.2, 163.0], [25.3, 163.0], [25.4, 163.0], [25.5, 164.0], [25.6, 165.0], [25.7, 165.0], [25.8, 166.0], [25.9, 166.0], [26.0, 167.0], [26.1, 168.0], [26.2, 168.0], [26.3, 168.0], [26.4, 169.0], [26.5, 169.0], [26.6, 170.0], [26.7, 171.0], [26.8, 171.0], [26.9, 172.0], [27.0, 172.0], [27.1, 172.0], [27.2, 173.0], [27.3, 173.0], [27.4, 174.0], [27.5, 174.0], [27.6, 175.0], [27.7, 175.0], [27.8, 175.0], [27.9, 176.0], [28.0, 176.0], [28.1, 177.0], [28.2, 177.0], [28.3, 178.0], [28.4, 178.0], [28.5, 179.0], [28.6, 179.0], [28.7, 179.0], [28.8, 180.0], [28.9, 181.0], [29.0, 181.0], [29.1, 182.0], [29.2, 183.0], [29.3, 183.0], [29.4, 184.0], [29.5, 184.0], [29.6, 185.0], [29.7, 186.0], [29.8, 186.0], [29.9, 187.0], [30.0, 187.0], [30.1, 188.0], [30.2, 189.0], [30.3, 189.0], [30.4, 189.0], [30.5, 190.0], [30.6, 191.0], [30.7, 192.0], [30.8, 193.0], [30.9, 193.0], [31.0, 194.0], [31.1, 194.0], [31.2, 194.0], [31.3, 195.0], [31.4, 196.0], [31.5, 196.0], [31.6, 197.0], [31.7, 197.0], [31.8, 198.0], [31.9, 198.0], [32.0, 198.0], [32.1, 199.0], [32.2, 200.0], [32.3, 201.0], [32.4, 201.0], [32.5, 202.0], [32.6, 202.0], [32.7, 203.0], [32.8, 203.0], [32.9, 204.0], [33.0, 204.0], [33.1, 205.0], [33.2, 205.0], [33.3, 206.0], [33.4, 206.0], [33.5, 207.0], [33.6, 208.0], [33.7, 208.0], [33.8, 209.0], [33.9, 209.0], [34.0, 210.0], [34.1, 210.0], [34.2, 211.0], [34.3, 211.0], [34.4, 212.0], [34.5, 213.0], [34.6, 213.0], [34.7, 213.0], [34.8, 214.0], [34.9, 215.0], [35.0, 215.0], [35.1, 216.0], [35.2, 216.0], [35.3, 217.0], [35.4, 217.0], [35.5, 218.0], [35.6, 218.0], [35.7, 218.0], [35.8, 219.0], [35.9, 219.0], [36.0, 220.0], [36.1, 221.0], [36.2, 221.0], [36.3, 222.0], [36.4, 223.0], [36.5, 224.0], [36.6, 225.0], [36.7, 225.0], [36.8, 226.0], [36.9, 226.0], [37.0, 227.0], [37.1, 228.0], [37.2, 228.0], [37.3, 229.0], [37.4, 229.0], [37.5, 230.0], [37.6, 231.0], [37.7, 231.0], [37.8, 232.0], [37.9, 232.0], [38.0, 232.0], [38.1, 234.0], [38.2, 234.0], [38.3, 235.0], [38.4, 236.0], [38.5, 237.0], [38.6, 237.0], [38.7, 238.0], [38.8, 238.0], [38.9, 239.0], [39.0, 240.0], [39.1, 240.0], [39.2, 241.0], [39.3, 242.0], [39.4, 242.0], [39.5, 243.0], [39.6, 243.0], [39.7, 244.0], [39.8, 245.0], [39.9, 246.0], [40.0, 246.0], [40.1, 247.0], [40.2, 248.0], [40.3, 248.0], [40.4, 249.0], [40.5, 250.0], [40.6, 250.0], [40.7, 251.0], [40.8, 251.0], [40.9, 252.0], [41.0, 252.0], [41.1, 253.0], [41.2, 253.0], [41.3, 254.0], [41.4, 255.0], [41.5, 256.0], [41.6, 257.0], [41.7, 257.0], [41.8, 258.0], [41.9, 259.0], [42.0, 259.0], [42.1, 260.0], [42.2, 261.0], [42.3, 261.0], [42.4, 262.0], [42.5, 263.0], [42.6, 264.0], [42.7, 264.0], [42.8, 265.0], [42.9, 266.0], [43.0, 267.0], [43.1, 268.0], [43.2, 268.0], [43.3, 269.0], [43.4, 270.0], [43.5, 270.0], [43.6, 271.0], [43.7, 272.0], [43.8, 272.0], [43.9, 273.0], [44.0, 274.0], [44.1, 274.0], [44.2, 275.0], [44.3, 275.0], [44.4, 276.0], [44.5, 277.0], [44.6, 278.0], [44.7, 278.0], [44.8, 279.0], [44.9, 279.0], [45.0, 280.0], [45.1, 281.0], [45.2, 281.0], [45.3, 282.0], [45.4, 283.0], [45.5, 284.0], [45.6, 284.0], [45.7, 285.0], [45.8, 286.0], [45.9, 287.0], [46.0, 288.0], [46.1, 289.0], [46.2, 289.0], [46.3, 290.0], [46.4, 291.0], [46.5, 292.0], [46.6, 292.0], [46.7, 293.0], [46.8, 294.0], [46.9, 294.0], [47.0, 295.0], [47.1, 296.0], [47.2, 296.0], [47.3, 297.0], [47.4, 297.0], [47.5, 298.0], [47.6, 299.0], [47.7, 299.0], [47.8, 300.0], [47.9, 301.0], [48.0, 302.0], [48.1, 302.0], [48.2, 303.0], [48.3, 303.0], [48.4, 304.0], [48.5, 304.0], [48.6, 305.0], [48.7, 305.0], [48.8, 306.0], [48.9, 307.0], [49.0, 307.0], [49.1, 308.0], [49.2, 308.0], [49.3, 309.0], [49.4, 309.0], [49.5, 310.0], [49.6, 310.0], [49.7, 311.0], [49.8, 311.0], [49.9, 312.0], [50.0, 313.0], [50.1, 313.0], [50.2, 314.0], [50.3, 314.0], [50.4, 315.0], [50.5, 315.0], [50.6, 316.0], [50.7, 317.0], [50.8, 317.0], [50.9, 317.0], [51.0, 318.0], [51.1, 319.0], [51.2, 319.0], [51.3, 319.0], [51.4, 320.0], [51.5, 320.0], [51.6, 321.0], [51.7, 321.0], [51.8, 321.0], [51.9, 322.0], [52.0, 323.0], [52.1, 323.0], [52.2, 323.0], [52.3, 324.0], [52.4, 324.0], [52.5, 324.0], [52.6, 325.0], [52.7, 325.0], [52.8, 326.0], [52.9, 326.0], [53.0, 327.0], [53.1, 327.0], [53.2, 328.0], [53.3, 328.0], [53.4, 329.0], [53.5, 329.0], [53.6, 330.0], [53.7, 330.0], [53.8, 331.0], [53.9, 331.0], [54.0, 332.0], [54.1, 332.0], [54.2, 333.0], [54.3, 333.0], [54.4, 334.0], [54.5, 334.0], [54.6, 335.0], [54.7, 336.0], [54.8, 336.0], [54.9, 337.0], [55.0, 337.0], [55.1, 338.0], [55.2, 338.0], [55.3, 339.0], [55.4, 339.0], [55.5, 340.0], [55.6, 341.0], [55.7, 341.0], [55.8, 342.0], [55.9, 342.0], [56.0, 343.0], [56.1, 343.0], [56.2, 344.0], [56.3, 344.0], [56.4, 345.0], [56.5, 345.0], [56.6, 346.0], [56.7, 346.0], [56.8, 347.0], [56.9, 347.0], [57.0, 348.0], [57.1, 348.0], [57.2, 349.0], [57.3, 349.0], [57.4, 350.0], [57.5, 351.0], [57.6, 351.0], [57.7, 352.0], [57.8, 353.0], [57.9, 353.0], [58.0, 353.0], [58.1, 354.0], [58.2, 356.0], [58.3, 356.0], [58.4, 357.0], [58.5, 357.0], [58.6, 358.0], [58.7, 359.0], [58.8, 359.0], [58.9, 359.0], [59.0, 360.0], [59.1, 361.0], [59.2, 362.0], [59.3, 362.0], [59.4, 363.0], [59.5, 363.0], [59.6, 364.0], [59.7, 365.0], [59.8, 365.0], [59.9, 366.0], [60.0, 367.0], [60.1, 368.0], [60.2, 368.0], [60.3, 368.0], [60.4, 369.0], [60.5, 370.0], [60.6, 371.0], [60.7, 371.0], [60.8, 372.0], [60.9, 373.0], [61.0, 374.0], [61.1, 374.0], [61.2, 375.0], [61.3, 376.0], [61.4, 377.0], [61.5, 378.0], [61.6, 378.0], [61.7, 379.0], [61.8, 379.0], [61.9, 380.0], [62.0, 380.0], [62.1, 381.0], [62.2, 382.0], [62.3, 383.0], [62.4, 384.0], [62.5, 384.0], [62.6, 385.0], [62.7, 387.0], [62.8, 388.0], [62.9, 388.0], [63.0, 389.0], [63.1, 389.0], [63.2, 390.0], [63.3, 391.0], [63.4, 391.0], [63.5, 392.0], [63.6, 392.0], [63.7, 393.0], [63.8, 394.0], [63.9, 394.0], [64.0, 395.0], [64.1, 396.0], [64.2, 397.0], [64.3, 398.0], [64.4, 399.0], [64.5, 399.0], [64.6, 400.0], [64.7, 401.0], [64.8, 402.0], [64.9, 403.0], [65.0, 404.0], [65.1, 404.0], [65.2, 405.0], [65.3, 406.0], [65.4, 407.0], [65.5, 408.0], [65.6, 409.0], [65.7, 409.0], [65.8, 410.0], [65.9, 411.0], [66.0, 412.0], [66.1, 413.0], [66.2, 413.0], [66.3, 416.0], [66.4, 416.0], [66.5, 417.0], [66.6, 418.0], [66.7, 419.0], [66.8, 420.0], [66.9, 420.0], [67.0, 422.0], [67.1, 423.0], [67.2, 423.0], [67.3, 424.0], [67.4, 426.0], [67.5, 427.0], [67.6, 427.0], [67.7, 428.0], [67.8, 430.0], [67.9, 431.0], [68.0, 432.0], [68.1, 433.0], [68.2, 433.0], [68.3, 434.0], [68.4, 436.0], [68.5, 437.0], [68.6, 438.0], [68.7, 438.0], [68.8, 440.0], [68.9, 441.0], [69.0, 442.0], [69.1, 442.0], [69.2, 444.0], [69.3, 445.0], [69.4, 446.0], [69.5, 448.0], [69.6, 450.0], [69.7, 450.0], [69.8, 452.0], [69.9, 454.0], [70.0, 456.0], [70.1, 458.0], [70.2, 458.0], [70.3, 459.0], [70.4, 460.0], [70.5, 461.0], [70.6, 462.0], [70.7, 464.0], [70.8, 466.0], [70.9, 468.0], [71.0, 469.0], [71.1, 470.0], [71.2, 471.0], [71.3, 472.0], [71.4, 473.0], [71.5, 475.0], [71.6, 476.0], [71.7, 478.0], [71.8, 479.0], [71.9, 480.0], [72.0, 481.0], [72.1, 483.0], [72.2, 485.0], [72.3, 487.0], [72.4, 490.0], [72.5, 494.0], [72.6, 495.0], [72.7, 497.0], [72.8, 499.0], [72.9, 502.0], [73.0, 504.0], [73.1, 506.0], [73.2, 508.0], [73.3, 510.0], [73.4, 511.0], [73.5, 513.0], [73.6, 515.0], [73.7, 516.0], [73.8, 518.0], [73.9, 519.0], [74.0, 521.0], [74.1, 523.0], [74.2, 525.0], [74.3, 526.0], [74.4, 529.0], [74.5, 530.0], [74.6, 532.0], [74.7, 535.0], [74.8, 537.0], [74.9, 539.0], [75.0, 540.0], [75.1, 541.0], [75.2, 542.0], [75.3, 544.0], [75.4, 546.0], [75.5, 547.0], [75.6, 549.0], [75.7, 551.0], [75.8, 552.0], [75.9, 554.0], [76.0, 556.0], [76.1, 557.0], [76.2, 559.0], [76.3, 561.0], [76.4, 565.0], [76.5, 566.0], [76.6, 568.0], [76.7, 570.0], [76.8, 572.0], [76.9, 573.0], [77.0, 574.0], [77.1, 576.0], [77.2, 577.0], [77.3, 578.0], [77.4, 581.0], [77.5, 584.0], [77.6, 585.0], [77.7, 586.0], [77.8, 589.0], [77.9, 591.0], [78.0, 592.0], [78.1, 594.0], [78.2, 596.0], [78.3, 597.0], [78.4, 600.0], [78.5, 601.0], [78.6, 603.0], [78.7, 606.0], [78.8, 609.0], [78.9, 611.0], [79.0, 614.0], [79.1, 616.0], [79.2, 617.0], [79.3, 620.0], [79.4, 623.0], [79.5, 624.0], [79.6, 629.0], [79.7, 632.0], [79.8, 635.0], [79.9, 638.0], [80.0, 640.0], [80.1, 643.0], [80.2, 647.0], [80.3, 649.0], [80.4, 653.0], [80.5, 657.0], [80.6, 661.0], [80.7, 664.0], [80.8, 667.0], [80.9, 669.0], [81.0, 672.0], [81.1, 677.0], [81.2, 683.0], [81.3, 686.0], [81.4, 691.0], [81.5, 693.0], [81.6, 696.0], [81.7, 699.0], [81.8, 701.0], [81.9, 704.0], [82.0, 707.0], [82.1, 712.0], [82.2, 720.0], [82.3, 727.0], [82.4, 731.0], [82.5, 734.0], [82.6, 737.0], [82.7, 741.0], [82.8, 745.0], [82.9, 749.0], [83.0, 752.0], [83.1, 757.0], [83.2, 760.0], [83.3, 765.0], [83.4, 767.0], [83.5, 772.0], [83.6, 776.0], [83.7, 779.0], [83.8, 785.0], [83.9, 787.0], [84.0, 789.0], [84.1, 792.0], [84.2, 795.0], [84.3, 798.0], [84.4, 800.0], [84.5, 802.0], [84.6, 807.0], [84.7, 811.0], [84.8, 816.0], [84.9, 822.0], [85.0, 826.0], [85.1, 830.0], [85.2, 835.0], [85.3, 840.0], [85.4, 845.0], [85.5, 847.0], [85.6, 855.0], [85.7, 860.0], [85.8, 864.0], [85.9, 868.0], [86.0, 872.0], [86.1, 881.0], [86.2, 886.0], [86.3, 891.0], [86.4, 902.0], [86.5, 909.0], [86.6, 917.0], [86.7, 923.0], [86.8, 928.0], [86.9, 938.0], [87.0, 948.0], [87.1, 955.0], [87.2, 964.0], [87.3, 968.0], [87.4, 977.0], [87.5, 983.0], [87.6, 990.0], [87.7, 997.0], [87.8, 1002.0], [87.9, 1006.0], [88.0, 1013.0], [88.1, 1021.0], [88.2, 1027.0], [88.3, 1032.0], [88.4, 1036.0], [88.5, 1043.0], [88.6, 1048.0], [88.7, 1052.0], [88.8, 1056.0], [88.9, 1060.0], [89.0, 1068.0], [89.1, 1074.0], [89.2, 1078.0], [89.3, 1083.0], [89.4, 1089.0], [89.5, 1093.0], [89.6, 1096.0], [89.7, 1102.0], [89.8, 1107.0], [89.9, 1109.0], [90.0, 1112.0], [90.1, 1115.0], [90.2, 1117.0], [90.3, 1122.0], [90.4, 1125.0], [90.5, 1129.0], [90.6, 1133.0], [90.7, 1136.0], [90.8, 1142.0], [90.9, 1147.0], [91.0, 1152.0], [91.1, 1156.0], [91.2, 1158.0], [91.3, 1161.0], [91.4, 1169.0], [91.5, 1172.0], [91.6, 1178.0], [91.7, 1182.0], [91.8, 1189.0], [91.9, 1194.0], [92.0, 1199.0], [92.1, 1205.0], [92.2, 1209.0], [92.3, 1216.0], [92.4, 1221.0], [92.5, 1225.0], [92.6, 1233.0], [92.7, 1238.0], [92.8, 1248.0], [92.9, 1256.0], [93.0, 1261.0], [93.1, 1271.0], [93.2, 1279.0], [93.3, 1283.0], [93.4, 1294.0], [93.5, 1308.0], [93.6, 1323.0], [93.7, 1328.0], [93.8, 1338.0], [93.9, 1349.0], [94.0, 1358.0], [94.1, 1362.0], [94.2, 1369.0], [94.3, 1382.0], [94.4, 1388.0], [94.5, 1398.0], [94.6, 1407.0], [94.7, 1417.0], [94.8, 1430.0], [94.9, 1443.0], [95.0, 1450.0], [95.1, 1457.0], [95.2, 1465.0], [95.3, 1479.0], [95.4, 1486.0], [95.5, 1497.0], [95.6, 1504.0], [95.7, 1522.0], [95.8, 1539.0], [95.9, 1564.0], [96.0, 1577.0], [96.1, 1586.0], [96.2, 1593.0], [96.3, 1617.0], [96.4, 1630.0], [96.5, 1649.0], [96.6, 1665.0], [96.7, 1688.0], [96.8, 1711.0], [96.9, 1739.0], [97.0, 1767.0], [97.1, 1794.0], [97.2, 1816.0], [97.3, 1838.0], [97.4, 1860.0], [97.5, 1881.0], [97.6, 1905.0], [97.7, 1921.0], [97.8, 1939.0], [97.9, 1970.0], [98.0, 1987.0], [98.1, 2027.0], [98.2, 2048.0], [98.3, 2083.0], [98.4, 2117.0], [98.5, 2156.0], [98.6, 2218.0], [98.7, 2253.0], [98.8, 2303.0], [98.9, 2352.0], [99.0, 2403.0], [99.1, 2478.0], [99.2, 2575.0], [99.3, 2634.0], [99.4, 2685.0], [99.5, 2822.0], [99.6, 2952.0], [99.7, 3292.0], [99.8, 3609.0], [99.9, 4354.0], [100.0, 7216.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 3.0], [85.1, 3.0], [85.2, 3.0], [85.3, 3.0], [85.4, 3.0], [85.5, 3.0], [85.6, 3.0], [85.7, 3.0], [85.8, 3.0], [85.9, 3.0], [86.0, 4.0], [86.1, 4.0], [86.2, 4.0], [86.3, 4.0], [86.4, 4.0], [86.5, 4.0], [86.6, 4.0], [86.7, 4.0], [86.8, 4.0], [86.9, 4.0], [87.0, 5.0], [87.1, 5.0], [87.2, 5.0], [87.3, 5.0], [87.4, 5.0], [87.5, 5.0], [87.6, 5.0], [87.7, 5.0], [87.8, 5.0], [87.9, 5.0], [88.0, 5.0], [88.1, 5.0], [88.2, 5.0], [88.3, 5.0], [88.4, 5.0], [88.5, 5.0], [88.6, 5.0], [88.7, 5.0], [88.8, 5.0], [88.9, 5.0], [89.0, 7.0], [89.1, 7.0], [89.2, 7.0], [89.3, 7.0], [89.4, 7.0], [89.5, 7.0], [89.6, 7.0], [89.7, 7.0], [89.8, 7.0], [89.9, 7.0], [90.0, 7.0], [90.1, 7.0], [90.2, 7.0], [90.3, 7.0], [90.4, 7.0], [90.5, 7.0], [90.6, 7.0], [90.7, 7.0], [90.8, 7.0], [90.9, 7.0], [91.0, 12.0], [91.1, 12.0], [91.2, 12.0], [91.3, 12.0], [91.4, 12.0], [91.5, 12.0], [91.6, 12.0], [91.7, 12.0], [91.8, 12.0], [91.9, 12.0], [92.0, 45.0], [92.1, 45.0], [92.2, 45.0], [92.3, 45.0], [92.4, 45.0], [92.5, 45.0], [92.6, 45.0], [92.7, 45.0], [92.8, 45.0], [92.9, 45.0], [93.0, 61.0], [93.1, 61.0], [93.2, 61.0], [93.3, 61.0], [93.4, 61.0], [93.5, 61.0], [93.6, 61.0], [93.7, 61.0], [93.8, 61.0], [93.9, 61.0], [94.0, 149.0], [94.1, 149.0], [94.2, 149.0], [94.3, 149.0], [94.4, 149.0], [94.5, 149.0], [94.6, 149.0], [94.7, 149.0], [94.8, 149.0], [94.9, 149.0], [95.0, 210.0], [95.1, 210.0], [95.2, 210.0], [95.3, 210.0], [95.4, 210.0], [95.5, 210.0], [95.6, 210.0], [95.7, 210.0], [95.8, 210.0], [95.9, 210.0], [96.0, 357.0], [96.1, 357.0], [96.2, 357.0], [96.3, 357.0], [96.4, 357.0], [96.5, 357.0], [96.6, 357.0], [96.7, 357.0], [96.8, 357.0], [96.9, 357.0], [97.0, 504.0], [97.1, 504.0], [97.2, 504.0], [97.3, 504.0], [97.4, 504.0], [97.5, 504.0], [97.6, 504.0], [97.7, 504.0], [97.8, 504.0], [97.9, 504.0], [98.0, 660.0], [98.1, 660.0], [98.2, 660.0], [98.3, 660.0], [98.4, 660.0], [98.5, 660.0], [98.6, 660.0], [98.7, 660.0], [98.8, 660.0], [98.9, 660.0], [99.0, 804.0], [99.1, 804.0], [99.2, 804.0], [99.3, 804.0], [99.4, 804.0], [99.5, 804.0], [99.6, 804.0], [99.7, 804.0], [99.8, 804.0], [99.9, 804.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 4.0], [85.4, 4.0], [85.5, 4.0], [85.6, 4.0], [85.7, 4.0], [85.8, 4.0], [85.9, 4.0], [86.0, 4.0], [86.1, 4.0], [86.2, 4.0], [86.3, 4.0], [86.4, 4.0], [86.5, 4.0], [86.6, 4.0], [86.7, 4.0], [86.8, 4.0], [86.9, 4.0], [87.0, 4.0], [87.1, 4.0], [87.2, 4.0], [87.3, 4.0], [87.4, 4.0], [87.5, 4.0], [87.6, 4.0], [87.7, 4.0], [87.8, 4.0], [87.9, 4.0], [88.0, 5.0], [88.1, 5.0], [88.2, 5.0], [88.3, 5.0], [88.4, 5.0], [88.5, 5.0], [88.6, 5.0], [88.7, 5.0], [88.8, 5.0], [88.9, 5.0], [89.0, 6.0], [89.1, 6.0], [89.2, 6.0], [89.3, 6.0], [89.4, 6.0], [89.5, 6.0], [89.6, 6.0], [89.7, 6.0], [89.8, 6.0], [89.9, 6.0], [90.0, 10.0], [90.1, 10.0], [90.2, 10.0], [90.3, 10.0], [90.4, 10.0], [90.5, 10.0], [90.6, 10.0], [90.7, 10.0], [90.8, 10.0], [90.9, 10.0], [91.0, 13.0], [91.1, 13.0], [91.2, 13.0], [91.3, 13.0], [91.4, 13.0], [91.5, 13.0], [91.6, 13.0], [91.7, 13.0], [91.8, 13.0], [91.9, 13.0], [92.0, 114.0], [92.1, 114.0], [92.2, 114.0], [92.3, 114.0], [92.4, 114.0], [92.5, 114.0], [92.6, 114.0], [92.7, 114.0], [92.8, 114.0], [92.9, 114.0], [93.0, 114.0], [93.1, 114.0], [93.2, 114.0], [93.3, 114.0], [93.4, 114.0], [93.5, 114.0], [93.6, 114.0], [93.7, 114.0], [93.8, 114.0], [93.9, 114.0], [94.0, 344.0], [94.1, 344.0], [94.2, 344.0], [94.3, 344.0], [94.4, 344.0], [94.5, 344.0], [94.6, 344.0], [94.7, 344.0], [94.8, 344.0], [94.9, 344.0], [95.0, 345.0], [95.1, 345.0], [95.2, 345.0], [95.3, 345.0], [95.4, 345.0], [95.5, 345.0], [95.6, 345.0], [95.7, 345.0], [95.8, 345.0], [95.9, 345.0], [96.0, 349.0], [96.1, 349.0], [96.2, 349.0], [96.3, 349.0], [96.4, 349.0], [96.5, 349.0], [96.6, 349.0], [96.7, 349.0], [96.8, 349.0], [96.9, 349.0], [97.0, 350.0], [97.1, 350.0], [97.2, 350.0], [97.3, 350.0], [97.4, 350.0], [97.5, 350.0], [97.6, 350.0], [97.7, 350.0], [97.8, 350.0], [97.9, 350.0], [98.0, 358.0], [98.1, 358.0], [98.2, 358.0], [98.3, 358.0], [98.4, 358.0], [98.5, 358.0], [98.6, 358.0], [98.7, 358.0], [98.8, 358.0], [98.9, 358.0], [99.0, 358.0], [99.1, 358.0], [99.2, 358.0], [99.3, 358.0], [99.4, 358.0], [99.5, 358.0], [99.6, 358.0], [99.7, 358.0], [99.8, 358.0], [99.9, 358.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 25.0], [0.1, 28.0], [0.2, 28.0], [0.3, 28.0], [0.4, 29.0], [0.5, 29.0], [0.6, 30.0], [0.7, 30.0], [0.8, 30.0], [0.9, 30.0], [1.0, 30.0], [1.1, 31.0], [1.2, 31.0], [1.3, 31.0], [1.4, 31.0], [1.5, 31.0], [1.6, 32.0], [1.7, 32.0], [1.8, 32.0], [1.9, 32.0], [2.0, 32.0], [2.1, 33.0], [2.2, 33.0], [2.3, 33.0], [2.4, 33.0], [2.5, 33.0], [2.6, 33.0], [2.7, 33.0], [2.8, 34.0], [2.9, 34.0], [3.0, 34.0], [3.1, 35.0], [3.2, 35.0], [3.3, 35.0], [3.4, 35.0], [3.5, 35.0], [3.6, 36.0], [3.7, 36.0], [3.8, 36.0], [3.9, 37.0], [4.0, 37.0], [4.1, 37.0], [4.2, 37.0], [4.3, 38.0], [4.4, 38.0], [4.5, 38.0], [4.6, 38.0], [4.7, 39.0], [4.8, 39.0], [4.9, 39.0], [5.0, 40.0], [5.1, 40.0], [5.2, 40.0], [5.3, 40.0], [5.4, 41.0], [5.5, 41.0], [5.6, 41.0], [5.7, 42.0], [5.8, 42.0], [5.9, 42.0], [6.0, 43.0], [6.1, 43.0], [6.2, 43.0], [6.3, 44.0], [6.4, 44.0], [6.5, 44.0], [6.6, 44.0], [6.7, 44.0], [6.8, 45.0], [6.9, 45.0], [7.0, 46.0], [7.1, 46.0], [7.2, 46.0], [7.3, 47.0], [7.4, 47.0], [7.5, 47.0], [7.6, 48.0], [7.7, 48.0], [7.8, 49.0], [7.9, 49.0], [8.0, 49.0], [8.1, 49.0], [8.2, 50.0], [8.3, 50.0], [8.4, 50.0], [8.5, 51.0], [8.6, 51.0], [8.7, 52.0], [8.8, 53.0], [8.9, 53.0], [9.0, 53.0], [9.1, 54.0], [9.2, 54.0], [9.3, 55.0], [9.4, 55.0], [9.5, 55.0], [9.6, 55.0], [9.7, 56.0], [9.8, 57.0], [9.9, 57.0], [10.0, 57.0], [10.1, 58.0], [10.2, 58.0], [10.3, 58.0], [10.4, 59.0], [10.5, 59.0], [10.6, 60.0], [10.7, 60.0], [10.8, 61.0], [10.9, 61.0], [11.0, 61.0], [11.1, 62.0], [11.2, 62.0], [11.3, 62.0], [11.4, 63.0], [11.5, 63.0], [11.6, 63.0], [11.7, 64.0], [11.8, 64.0], [11.9, 64.0], [12.0, 65.0], [12.1, 65.0], [12.2, 65.0], [12.3, 66.0], [12.4, 66.0], [12.5, 66.0], [12.6, 66.0], [12.7, 67.0], [12.8, 67.0], [12.9, 68.0], [13.0, 68.0], [13.1, 68.0], [13.2, 69.0], [13.3, 69.0], [13.4, 70.0], [13.5, 71.0], [13.6, 71.0], [13.7, 71.0], [13.8, 72.0], [13.9, 72.0], [14.0, 73.0], [14.1, 73.0], [14.2, 74.0], [14.3, 75.0], [14.4, 75.0], [14.5, 76.0], [14.6, 77.0], [14.7, 77.0], [14.8, 77.0], [14.9, 78.0], [15.0, 79.0], [15.1, 79.0], [15.2, 80.0], [15.3, 80.0], [15.4, 81.0], [15.5, 81.0], [15.6, 82.0], [15.7, 83.0], [15.8, 83.0], [15.9, 84.0], [16.0, 84.0], [16.1, 84.0], [16.2, 85.0], [16.3, 85.0], [16.4, 85.0], [16.5, 86.0], [16.6, 86.0], [16.7, 87.0], [16.8, 88.0], [16.9, 88.0], [17.0, 89.0], [17.1, 90.0], [17.2, 91.0], [17.3, 92.0], [17.4, 92.0], [17.5, 93.0], [17.6, 93.0], [17.7, 94.0], [17.8, 94.0], [17.9, 95.0], [18.0, 95.0], [18.1, 96.0], [18.2, 96.0], [18.3, 96.0], [18.4, 97.0], [18.5, 97.0], [18.6, 98.0], [18.7, 98.0], [18.8, 99.0], [18.9, 99.0], [19.0, 100.0], [19.1, 101.0], [19.2, 101.0], [19.3, 102.0], [19.4, 103.0], [19.5, 103.0], [19.6, 104.0], [19.7, 105.0], [19.8, 106.0], [19.9, 107.0], [20.0, 109.0], [20.1, 110.0], [20.2, 111.0], [20.3, 112.0], [20.4, 112.0], [20.5, 113.0], [20.6, 114.0], [20.7, 114.0], [20.8, 115.0], [20.9, 116.0], [21.0, 116.0], [21.1, 117.0], [21.2, 118.0], [21.3, 118.0], [21.4, 119.0], [21.5, 119.0], [21.6, 120.0], [21.7, 121.0], [21.8, 121.0], [21.9, 122.0], [22.0, 123.0], [22.1, 123.0], [22.2, 123.0], [22.3, 124.0], [22.4, 125.0], [22.5, 126.0], [22.6, 126.0], [22.7, 127.0], [22.8, 127.0], [22.9, 128.0], [23.0, 129.0], [23.1, 130.0], [23.2, 130.0], [23.3, 131.0], [23.4, 132.0], [23.5, 133.0], [23.6, 134.0], [23.7, 135.0], [23.8, 136.0], [23.9, 138.0], [24.0, 139.0], [24.1, 139.0], [24.2, 142.0], [24.3, 143.0], [24.4, 144.0], [24.5, 145.0], [24.6, 145.0], [24.7, 146.0], [24.8, 147.0], [24.9, 148.0], [25.0, 149.0], [25.1, 149.0], [25.2, 150.0], [25.3, 151.0], [25.4, 152.0], [25.5, 152.0], [25.6, 154.0], [25.7, 155.0], [25.8, 155.0], [25.9, 156.0], [26.0, 157.0], [26.1, 158.0], [26.2, 158.0], [26.3, 159.0], [26.4, 159.0], [26.5, 160.0], [26.6, 161.0], [26.7, 163.0], [26.8, 163.0], [26.9, 164.0], [27.0, 164.0], [27.1, 165.0], [27.2, 166.0], [27.3, 167.0], [27.4, 168.0], [27.5, 168.0], [27.6, 169.0], [27.7, 169.0], [27.8, 170.0], [27.9, 170.0], [28.0, 171.0], [28.1, 171.0], [28.2, 172.0], [28.3, 173.0], [28.4, 174.0], [28.5, 174.0], [28.6, 175.0], [28.7, 176.0], [28.8, 178.0], [28.9, 178.0], [29.0, 179.0], [29.1, 179.0], [29.2, 181.0], [29.3, 181.0], [29.4, 182.0], [29.5, 183.0], [29.6, 184.0], [29.7, 185.0], [29.8, 186.0], [29.9, 186.0], [30.0, 187.0], [30.1, 188.0], [30.2, 189.0], [30.3, 189.0], [30.4, 190.0], [30.5, 191.0], [30.6, 192.0], [30.7, 193.0], [30.8, 193.0], [30.9, 194.0], [31.0, 195.0], [31.1, 195.0], [31.2, 196.0], [31.3, 197.0], [31.4, 199.0], [31.5, 199.0], [31.6, 200.0], [31.7, 201.0], [31.8, 202.0], [31.9, 203.0], [32.0, 203.0], [32.1, 205.0], [32.2, 206.0], [32.3, 207.0], [32.4, 208.0], [32.5, 208.0], [32.6, 209.0], [32.7, 210.0], [32.8, 211.0], [32.9, 211.0], [33.0, 212.0], [33.1, 214.0], [33.2, 215.0], [33.3, 215.0], [33.4, 216.0], [33.5, 216.0], [33.6, 217.0], [33.7, 217.0], [33.8, 218.0], [33.9, 219.0], [34.0, 219.0], [34.1, 220.0], [34.2, 221.0], [34.3, 222.0], [34.4, 223.0], [34.5, 224.0], [34.6, 225.0], [34.7, 225.0], [34.8, 226.0], [34.9, 227.0], [35.0, 227.0], [35.1, 228.0], [35.2, 229.0], [35.3, 230.0], [35.4, 230.0], [35.5, 231.0], [35.6, 232.0], [35.7, 233.0], [35.8, 234.0], [35.9, 234.0], [36.0, 236.0], [36.1, 236.0], [36.2, 238.0], [36.3, 238.0], [36.4, 239.0], [36.5, 240.0], [36.6, 240.0], [36.7, 241.0], [36.8, 241.0], [36.9, 242.0], [37.0, 243.0], [37.1, 243.0], [37.2, 244.0], [37.3, 244.0], [37.4, 245.0], [37.5, 246.0], [37.6, 247.0], [37.7, 248.0], [37.8, 248.0], [37.9, 249.0], [38.0, 250.0], [38.1, 250.0], [38.2, 251.0], [38.3, 252.0], [38.4, 252.0], [38.5, 253.0], [38.6, 254.0], [38.7, 255.0], [38.8, 256.0], [38.9, 257.0], [39.0, 258.0], [39.1, 259.0], [39.2, 259.0], [39.3, 260.0], [39.4, 260.0], [39.5, 261.0], [39.6, 262.0], [39.7, 262.0], [39.8, 264.0], [39.9, 264.0], [40.0, 266.0], [40.1, 266.0], [40.2, 267.0], [40.3, 267.0], [40.4, 269.0], [40.5, 269.0], [40.6, 270.0], [40.7, 271.0], [40.8, 272.0], [40.9, 274.0], [41.0, 274.0], [41.1, 275.0], [41.2, 276.0], [41.3, 278.0], [41.4, 278.0], [41.5, 279.0], [41.6, 279.0], [41.7, 279.0], [41.8, 282.0], [41.9, 282.0], [42.0, 284.0], [42.1, 284.0], [42.2, 286.0], [42.3, 287.0], [42.4, 288.0], [42.5, 289.0], [42.6, 289.0], [42.7, 290.0], [42.8, 290.0], [42.9, 291.0], [43.0, 293.0], [43.1, 294.0], [43.2, 295.0], [43.3, 295.0], [43.4, 296.0], [43.5, 296.0], [43.6, 297.0], [43.7, 298.0], [43.8, 298.0], [43.9, 299.0], [44.0, 300.0], [44.1, 301.0], [44.2, 302.0], [44.3, 302.0], [44.4, 304.0], [44.5, 305.0], [44.6, 306.0], [44.7, 307.0], [44.8, 308.0], [44.9, 309.0], [45.0, 310.0], [45.1, 312.0], [45.2, 312.0], [45.3, 313.0], [45.4, 314.0], [45.5, 315.0], [45.6, 316.0], [45.7, 318.0], [45.8, 318.0], [45.9, 319.0], [46.0, 319.0], [46.1, 319.0], [46.2, 321.0], [46.3, 322.0], [46.4, 322.0], [46.5, 324.0], [46.6, 325.0], [46.7, 325.0], [46.8, 326.0], [46.9, 328.0], [47.0, 329.0], [47.1, 329.0], [47.2, 330.0], [47.3, 330.0], [47.4, 332.0], [47.5, 333.0], [47.6, 333.0], [47.7, 335.0], [47.8, 335.0], [47.9, 336.0], [48.0, 336.0], [48.1, 337.0], [48.2, 337.0], [48.3, 339.0], [48.4, 340.0], [48.5, 341.0], [48.6, 342.0], [48.7, 342.0], [48.8, 343.0], [48.9, 344.0], [49.0, 346.0], [49.1, 347.0], [49.2, 348.0], [49.3, 348.0], [49.4, 349.0], [49.5, 349.0], [49.6, 350.0], [49.7, 352.0], [49.8, 353.0], [49.9, 354.0], [50.0, 355.0], [50.1, 356.0], [50.2, 356.0], [50.3, 356.0], [50.4, 358.0], [50.5, 359.0], [50.6, 360.0], [50.7, 360.0], [50.8, 361.0], [50.9, 362.0], [51.0, 363.0], [51.1, 364.0], [51.2, 365.0], [51.3, 366.0], [51.4, 367.0], [51.5, 369.0], [51.6, 370.0], [51.7, 371.0], [51.8, 373.0], [51.9, 373.0], [52.0, 375.0], [52.1, 376.0], [52.2, 377.0], [52.3, 378.0], [52.4, 379.0], [52.5, 380.0], [52.6, 381.0], [52.7, 382.0], [52.8, 383.0], [52.9, 383.0], [53.0, 385.0], [53.1, 385.0], [53.2, 387.0], [53.3, 388.0], [53.4, 388.0], [53.5, 389.0], [53.6, 390.0], [53.7, 391.0], [53.8, 392.0], [53.9, 393.0], [54.0, 393.0], [54.1, 394.0], [54.2, 395.0], [54.3, 397.0], [54.4, 399.0], [54.5, 400.0], [54.6, 401.0], [54.7, 402.0], [54.8, 404.0], [54.9, 405.0], [55.0, 406.0], [55.1, 407.0], [55.2, 408.0], [55.3, 409.0], [55.4, 410.0], [55.5, 412.0], [55.6, 412.0], [55.7, 414.0], [55.8, 415.0], [55.9, 416.0], [56.0, 417.0], [56.1, 417.0], [56.2, 419.0], [56.3, 420.0], [56.4, 421.0], [56.5, 422.0], [56.6, 422.0], [56.7, 423.0], [56.8, 424.0], [56.9, 425.0], [57.0, 425.0], [57.1, 427.0], [57.2, 428.0], [57.3, 428.0], [57.4, 429.0], [57.5, 429.0], [57.6, 431.0], [57.7, 432.0], [57.8, 432.0], [57.9, 434.0], [58.0, 435.0], [58.1, 436.0], [58.2, 438.0], [58.3, 439.0], [58.4, 440.0], [58.5, 441.0], [58.6, 443.0], [58.7, 444.0], [58.8, 445.0], [58.9, 446.0], [59.0, 447.0], [59.1, 449.0], [59.2, 450.0], [59.3, 450.0], [59.4, 451.0], [59.5, 452.0], [59.6, 452.0], [59.7, 453.0], [59.8, 454.0], [59.9, 455.0], [60.0, 457.0], [60.1, 459.0], [60.2, 460.0], [60.3, 461.0], [60.4, 464.0], [60.5, 464.0], [60.6, 466.0], [60.7, 467.0], [60.8, 468.0], [60.9, 468.0], [61.0, 470.0], [61.1, 472.0], [61.2, 473.0], [61.3, 475.0], [61.4, 476.0], [61.5, 478.0], [61.6, 479.0], [61.7, 479.0], [61.8, 484.0], [61.9, 486.0], [62.0, 488.0], [62.1, 488.0], [62.2, 489.0], [62.3, 492.0], [62.4, 493.0], [62.5, 495.0], [62.6, 496.0], [62.7, 498.0], [62.8, 500.0], [62.9, 501.0], [63.0, 503.0], [63.1, 506.0], [63.2, 509.0], [63.3, 510.0], [63.4, 516.0], [63.5, 517.0], [63.6, 517.0], [63.7, 518.0], [63.8, 518.0], [63.9, 520.0], [64.0, 521.0], [64.1, 523.0], [64.2, 524.0], [64.3, 527.0], [64.4, 529.0], [64.5, 530.0], [64.6, 533.0], [64.7, 536.0], [64.8, 540.0], [64.9, 542.0], [65.0, 544.0], [65.1, 545.0], [65.2, 547.0], [65.3, 548.0], [65.4, 551.0], [65.5, 553.0], [65.6, 554.0], [65.7, 557.0], [65.8, 560.0], [65.9, 562.0], [66.0, 563.0], [66.1, 565.0], [66.2, 567.0], [66.3, 569.0], [66.4, 572.0], [66.5, 575.0], [66.6, 577.0], [66.7, 578.0], [66.8, 580.0], [66.9, 583.0], [67.0, 584.0], [67.1, 586.0], [67.2, 587.0], [67.3, 589.0], [67.4, 590.0], [67.5, 593.0], [67.6, 597.0], [67.7, 597.0], [67.8, 600.0], [67.9, 602.0], [68.0, 603.0], [68.1, 605.0], [68.2, 606.0], [68.3, 611.0], [68.4, 614.0], [68.5, 616.0], [68.6, 620.0], [68.7, 622.0], [68.8, 625.0], [68.9, 628.0], [69.0, 631.0], [69.1, 633.0], [69.2, 635.0], [69.3, 638.0], [69.4, 641.0], [69.5, 647.0], [69.6, 649.0], [69.7, 650.0], [69.8, 652.0], [69.9, 654.0], [70.0, 656.0], [70.1, 658.0], [70.2, 660.0], [70.3, 661.0], [70.4, 663.0], [70.5, 666.0], [70.6, 667.0], [70.7, 669.0], [70.8, 672.0], [70.9, 675.0], [71.0, 681.0], [71.1, 687.0], [71.2, 688.0], [71.3, 691.0], [71.4, 694.0], [71.5, 696.0], [71.6, 699.0], [71.7, 702.0], [71.8, 707.0], [71.9, 711.0], [72.0, 713.0], [72.1, 715.0], [72.2, 718.0], [72.3, 721.0], [72.4, 724.0], [72.5, 728.0], [72.6, 730.0], [72.7, 738.0], [72.8, 740.0], [72.9, 743.0], [73.0, 745.0], [73.1, 748.0], [73.2, 749.0], [73.3, 751.0], [73.4, 754.0], [73.5, 757.0], [73.6, 761.0], [73.7, 763.0], [73.8, 765.0], [73.9, 767.0], [74.0, 772.0], [74.1, 776.0], [74.2, 781.0], [74.3, 786.0], [74.4, 789.0], [74.5, 792.0], [74.6, 793.0], [74.7, 796.0], [74.8, 802.0], [74.9, 802.0], [75.0, 804.0], [75.1, 809.0], [75.2, 812.0], [75.3, 816.0], [75.4, 822.0], [75.5, 825.0], [75.6, 829.0], [75.7, 831.0], [75.8, 837.0], [75.9, 840.0], [76.0, 841.0], [76.1, 843.0], [76.2, 844.0], [76.3, 846.0], [76.4, 849.0], [76.5, 852.0], [76.6, 857.0], [76.7, 858.0], [76.8, 861.0], [76.9, 862.0], [77.0, 864.0], [77.1, 869.0], [77.2, 875.0], [77.3, 878.0], [77.4, 879.0], [77.5, 882.0], [77.6, 884.0], [77.7, 886.0], [77.8, 889.0], [77.9, 897.0], [78.0, 898.0], [78.1, 902.0], [78.2, 904.0], [78.3, 906.0], [78.4, 911.0], [78.5, 914.0], [78.6, 915.0], [78.7, 920.0], [78.8, 924.0], [78.9, 926.0], [79.0, 928.0], [79.1, 936.0], [79.2, 940.0], [79.3, 943.0], [79.4, 947.0], [79.5, 951.0], [79.6, 956.0], [79.7, 959.0], [79.8, 961.0], [79.9, 964.0], [80.0, 966.0], [80.1, 971.0], [80.2, 978.0], [80.3, 980.0], [80.4, 983.0], [80.5, 986.0], [80.6, 992.0], [80.7, 996.0], [80.8, 999.0], [80.9, 1002.0], [81.0, 1005.0], [81.1, 1006.0], [81.2, 1007.0], [81.3, 1016.0], [81.4, 1020.0], [81.5, 1024.0], [81.6, 1029.0], [81.7, 1038.0], [81.8, 1042.0], [81.9, 1048.0], [82.0, 1051.0], [82.1, 1057.0], [82.2, 1058.0], [82.3, 1061.0], [82.4, 1067.0], [82.5, 1075.0], [82.6, 1080.0], [82.7, 1083.0], [82.8, 1088.0], [82.9, 1092.0], [83.0, 1095.0], [83.1, 1100.0], [83.2, 1102.0], [83.3, 1106.0], [83.4, 1108.0], [83.5, 1109.0], [83.6, 1112.0], [83.7, 1117.0], [83.8, 1119.0], [83.9, 1121.0], [84.0, 1133.0], [84.1, 1136.0], [84.2, 1138.0], [84.3, 1142.0], [84.4, 1145.0], [84.5, 1148.0], [84.6, 1151.0], [84.7, 1157.0], [84.8, 1162.0], [84.9, 1165.0], [85.0, 1169.0], [85.1, 1171.0], [85.2, 1178.0], [85.3, 1181.0], [85.4, 1192.0], [85.5, 1194.0], [85.6, 1199.0], [85.7, 1205.0], [85.8, 1212.0], [85.9, 1219.0], [86.0, 1224.0], [86.1, 1230.0], [86.2, 1237.0], [86.3, 1240.0], [86.4, 1244.0], [86.5, 1249.0], [86.6, 1253.0], [86.7, 1258.0], [86.8, 1268.0], [86.9, 1271.0], [87.0, 1279.0], [87.1, 1290.0], [87.2, 1296.0], [87.3, 1298.0], [87.4, 1303.0], [87.5, 1309.0], [87.6, 1314.0], [87.7, 1319.0], [87.8, 1324.0], [87.9, 1336.0], [88.0, 1341.0], [88.1, 1345.0], [88.2, 1350.0], [88.3, 1354.0], [88.4, 1361.0], [88.5, 1366.0], [88.6, 1373.0], [88.7, 1377.0], [88.8, 1383.0], [88.9, 1390.0], [89.0, 1397.0], [89.1, 1406.0], [89.2, 1411.0], [89.3, 1412.0], [89.4, 1417.0], [89.5, 1422.0], [89.6, 1432.0], [89.7, 1440.0], [89.8, 1448.0], [89.9, 1451.0], [90.0, 1454.0], [90.1, 1459.0], [90.2, 1469.0], [90.3, 1486.0], [90.4, 1488.0], [90.5, 1493.0], [90.6, 1497.0], [90.7, 1501.0], [90.8, 1509.0], [90.9, 1517.0], [91.0, 1525.0], [91.1, 1530.0], [91.2, 1536.0], [91.3, 1550.0], [91.4, 1560.0], [91.5, 1571.0], [91.6, 1585.0], [91.7, 1604.0], [91.8, 1612.0], [91.9, 1631.0], [92.0, 1641.0], [92.1, 1660.0], [92.2, 1669.0], [92.3, 1674.0], [92.4, 1684.0], [92.5, 1687.0], [92.6, 1698.0], [92.7, 1705.0], [92.8, 1707.0], [92.9, 1717.0], [93.0, 1723.0], [93.1, 1751.0], [93.2, 1759.0], [93.3, 1773.0], [93.4, 1776.0], [93.5, 1784.0], [93.6, 1801.0], [93.7, 1810.0], [93.8, 1818.0], [93.9, 1826.0], [94.0, 1840.0], [94.1, 1856.0], [94.2, 1873.0], [94.3, 1880.0], [94.4, 1886.0], [94.5, 1896.0], [94.6, 1902.0], [94.7, 1908.0], [94.8, 1924.0], [94.9, 1938.0], [95.0, 1949.0], [95.1, 1954.0], [95.2, 1965.0], [95.3, 1978.0], [95.4, 1999.0], [95.5, 2008.0], [95.6, 2016.0], [95.7, 2043.0], [95.8, 2049.0], [95.9, 2059.0], [96.0, 2069.0], [96.1, 2099.0], [96.2, 2127.0], [96.3, 2152.0], [96.4, 2161.0], [96.5, 2181.0], [96.6, 2210.0], [96.7, 2269.0], [96.8, 2294.0], [96.9, 2303.0], [97.0, 2329.0], [97.1, 2361.0], [97.2, 2375.0], [97.3, 2433.0], [97.4, 2476.0], [97.5, 2523.0], [97.6, 2557.0], [97.7, 2600.0], [97.8, 2637.0], [97.9, 2669.0], [98.0, 2753.0], [98.1, 2813.0], [98.2, 2897.0], [98.3, 2951.0], [98.4, 3006.0], [98.5, 3088.0], [98.6, 3139.0], [98.7, 3167.0], [98.8, 3216.0], [98.9, 3250.0], [99.0, 3281.0], [99.1, 3375.0], [99.2, 3445.0], [99.3, 3512.0], [99.4, 3681.0], [99.5, 3868.0], [99.6, 4170.0], [99.7, 4264.0], [99.8, 4603.0], [99.9, 6368.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2287.0, "series": [{"data": [[0.0, 1041.0], [600.0, 344.0], [700.0, 275.0], [800.0, 206.0], [900.0, 144.0], [1000.0, 199.0], [1100.0, 240.0], [1200.0, 147.0], [1300.0, 112.0], [1400.0, 107.0], [1500.0, 70.0], [1600.0, 55.0], [100.0, 2287.0], [1700.0, 39.0], [1800.0, 45.0], [1900.0, 48.0], [2000.0, 34.0], [2100.0, 21.0], [2200.0, 23.0], [2300.0, 19.0], [2400.0, 18.0], [2500.0, 11.0], [2600.0, 17.0], [2700.0, 8.0], [2800.0, 7.0], [2900.0, 5.0], [3000.0, 5.0], [3100.0, 1.0], [200.0, 1608.0], [3200.0, 5.0], [3300.0, 6.0], [3500.0, 3.0], [3600.0, 2.0], [3700.0, 2.0], [3900.0, 3.0], [4000.0, 2.0], [4300.0, 3.0], [4100.0, 1.0], [4600.0, 1.0], [300.0, 1741.0], [4800.0, 2.0], [4900.0, 1.0], [5700.0, 1.0], [5900.0, 1.0], [400.0, 856.0], [6800.0, 1.0], [7200.0, 1.0], [500.0, 579.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 94.0], [600.0, 1.0], [300.0, 1.0], [800.0, 1.0], [200.0, 1.0], [100.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 92.0], [300.0, 6.0], [100.0, 2.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 838.0], [600.0, 170.0], [700.0, 137.0], [800.0, 147.0], [900.0, 124.0], [1000.0, 99.0], [1100.0, 112.0], [1200.0, 77.0], [1300.0, 75.0], [1400.0, 72.0], [1500.0, 45.0], [1600.0, 43.0], [1700.0, 42.0], [1800.0, 44.0], [1900.0, 37.0], [2000.0, 31.0], [2100.0, 21.0], [2300.0, 16.0], [2200.0, 12.0], [2400.0, 9.0], [2500.0, 12.0], [2600.0, 11.0], [2800.0, 7.0], [2700.0, 5.0], [2900.0, 8.0], [3000.0, 5.0], [3100.0, 12.0], [3300.0, 6.0], [3200.0, 10.0], [3400.0, 6.0], [3500.0, 3.0], [3600.0, 3.0], [3700.0, 2.0], [3800.0, 2.0], [3900.0, 3.0], [4100.0, 4.0], [4200.0, 2.0], [4300.0, 1.0], [4600.0, 1.0], [4400.0, 2.0], [4500.0, 1.0], [4900.0, 2.0], [5600.0, 1.0], [6300.0, 1.0], [6700.0, 1.0], [7900.0, 1.0], [13900.0, 1.0], [18000.0, 1.0], [100.0, 559.0], [200.0, 551.0], [300.0, 464.0], [400.0, 370.0], [500.0, 222.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 18000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 873.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 10521.0, "series": [{"data": [[0.0, 10521.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3584.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 873.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 15.802873104549095, "minX": 1.6172724E12, "maxY": 79.03791216126002, "series": [{"data": [[1.6172724E12, 51.09207571382752], [1.61727246E12, 79.03791216126002], [1.61727252E12, 15.802873104549095]], "isOverall": false, "label": "jp@gc - Stepping Thread Group (deprecated)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727252E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 1776.0, "series": [{"data": [[2.0, 49.0], [3.0, 61.0], [6.0, 72.5], [7.0, 50.0], [8.0, 130.0], [10.0, 80.36363636363636], [11.0, 134.0], [12.0, 197.0], [13.0, 94.0], [15.0, 138.0], [16.0, 128.5], [17.0, 158.33333333333334], [18.0, 120.0], [20.0, 202.83008356545983], [21.0, 109.42857142857142], [22.0, 142.47058823529412], [23.0, 200.64705882352945], [24.0, 146.53846153846152], [25.0, 154.2401685393259], [26.0, 236.2], [27.0, 188.92000000000002], [28.0, 148.20000000000002], [29.0, 219.1904761904762], [30.0, 203.0], [31.0, 305.3684210526316], [32.0, 203.36363636363637], [33.0, 280.5], [34.0, 343.6363636363636], [35.0, 261.53333333333336], [36.0, 263.3809523809524], [37.0, 224.8], [38.0, 272.1333333333333], [39.0, 266.2352941176471], [40.0, 303.2803234501351], [41.0, 340.45454545454544], [42.0, 358.84000000000003], [43.0, 347.3571428571429], [44.0, 350.1176470588236], [45.0, 387.78947368421046], [46.0, 654.0], [47.0, 330.4], [48.0, 370.81818181818187], [49.0, 344.6666666666667], [50.0, 377.3076923076923], [51.0, 372.2857142857143], [53.0, 503.77777777777777], [52.0, 367.3333333333333], [54.0, 583.75], [55.0, 408.1186440677964], [56.0, 627.2], [57.0, 802.9444444444445], [58.0, 1184.5714285714287], [59.0, 382.55963302752286], [60.0, 429.22847301951725], [61.0, 382.6], [62.0, 416.99999999999994], [63.0, 899.7894736842103], [64.0, 567.1333333333332], [65.0, 400.8235294117647], [66.0, 415.36842105263156], [67.0, 865.0], [68.0, 391.5882352941176], [69.0, 460.5], [70.0, 447.49727767695134], [71.0, 761.8518518518517], [72.0, 569.0357142857143], [73.0, 574.6400000000001], [74.0, 353.4], [75.0, 549.0588235294118], [76.0, 577.2], [77.0, 815.1], [78.0, 430.0769230769231], [79.0, 546.9615384615385], [80.0, 558.6621338912136], [81.0, 539.0], [82.0, 478.91176470588243], [83.0, 561.4], [84.0, 316.74193548387103], [85.0, 1031.7774193548391], [86.0, 435.3846153846154], [87.0, 680.0000000000001], [88.0, 412.14285714285717], [89.0, 580.75], [90.0, 977.7777777777778], [91.0, 898.9090909090908], [92.0, 721.7586206896553], [93.0, 969.5], [94.0, 849.0], [95.0, 870.9166666666666], [96.0, 1005.6800000000001], [97.0, 678.6666666666666], [99.0, 1010.0909090909092], [98.0, 1776.0], [100.0, 705.2095501183894], [1.0, 59.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[62.26423117811937, 465.19164975355045]], "isOverall": false, "label": "VNE-GET-bongda-Aggregated", "isController": false}, {"data": [[6.0, 432.6666666666667], [8.0, 75.5], [9.0, 1.0], [10.0, 3.0], [11.0, 1.0], [12.0, 0.0], [13.0, 1.0], [14.0, 0.0], [15.0, 1.0], [16.0, 0.0], [17.0, 1.0], [18.0, 2.0], [19.0, 45.0], [20.0, 1.0], [21.0, 0.0], [22.0, 0.0], [23.0, 1.0], [24.0, 0.0], [25.0, 0.0], [26.0, 2.0], [27.0, 0.0], [28.0, 0.0], [29.0, 1.0], [30.0, 0.0], [31.0, 1.0], [32.0, 5.0], [33.0, 1.0], [34.0, 0.0], [35.0, 0.0], [36.0, 5.0], [37.0, 0.0], [38.0, 12.0], [39.0, 2.0], [40.0, 0.0], [41.0, 1.0], [42.0, 2.0], [43.0, 0.0], [44.0, 1.0], [45.0, 1.0], [46.0, 1.0], [47.0, 0.0], [48.0, 1.0], [49.0, 0.0], [50.0, 0.0], [51.0, 1.0], [52.0, 1.0], [53.0, 0.0], [54.0, 1.0], [55.0, 0.0], [56.0, 1.0], [57.0, 0.0], [58.0, 0.0], [59.0, 0.0], [60.0, 1.0], [61.0, 0.0], [62.0, 0.0], [63.0, 0.0], [64.0, 1.0], [65.0, 4.0], [66.0, 0.0], [67.0, 0.0], [68.0, 1.0], [69.0, 0.0], [70.0, 0.0], [71.0, 0.0], [72.0, 0.0], [73.0, 0.0], [74.0, 0.0], [75.0, 0.0], [76.0, 1.0], [77.0, 0.0], [78.0, 1.0], [79.0, 1.0], [80.0, 1.0], [81.0, 1.0], [82.0, 0.0], [83.0, 0.0], [84.0, 1.0], [85.0, 1.0], [86.0, 3.0], [87.0, 1.0], [88.0, 1.0], [89.0, 1.0], [90.0, 1.0], [91.0, 7.0], [92.0, 0.0], [93.0, 0.0], [94.0, 1.0], [95.0, 7.0], [96.0, 1.0], [97.0, 1.0], [98.0, 0.0], [99.0, 1.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[50.66, 28.83]], "isOverall": false, "label": "PROF - VNE - Test 01-Aggregated", "isController": false}, {"data": [[8.0, 291.5], [9.0, 2.0], [10.0, 4.0], [11.0, 1.0], [12.0, 0.0], [13.0, 1.0], [14.0, 2.0], [15.0, 1.0], [16.0, 1.0], [17.0, 1.0], [18.0, 1.0], [19.0, 2.0], [20.0, 2.0], [21.0, 1.0], [22.0, 1.0], [23.0, 5.0], [24.0, 1.0], [25.0, 1.0], [26.0, 1.0], [27.0, 3.0], [28.0, 1.0], [29.0, 0.0], [30.0, 1.0], [31.0, 0.0], [32.0, 1.0], [33.0, 1.0], [34.0, 1.0], [35.0, 4.0], [36.0, 4.0], [37.0, 1.0], [38.0, 6.0], [39.0, 1.0], [40.0, 1.0], [41.0, 0.0], [42.0, 1.0], [43.0, 1.0], [44.0, 2.0], [45.0, 0.0], [46.0, 3.0], [47.0, 1.0], [48.0, 1.0], [49.0, 1.0], [50.0, 1.0], [51.0, 0.0], [52.0, 0.0], [53.0, 1.0], [54.0, 0.0], [55.0, 1.0], [56.0, 2.0], [57.0, 1.0], [58.0, 1.0], [59.0, 1.0], [60.0, 0.0], [61.0, 1.0], [62.0, 1.0], [63.0, 1.0], [64.0, 1.0], [65.0, 1.0], [66.0, 1.0], [67.0, 1.0], [68.0, 1.0], [69.0, 1.0], [70.0, 0.0], [71.0, 0.0], [72.0, 0.0], [73.0, 1.0], [74.0, 1.0], [75.0, 1.0], [76.0, 0.0], [77.0, 1.0], [78.0, 0.0], [79.0, 0.0], [80.0, 0.0], [81.0, 1.0], [82.0, 1.0], [83.0, 0.0], [84.0, 2.0], [85.0, 1.0], [86.0, 1.0], [87.0, 2.0], [88.0, 0.0], [89.0, 2.0], [90.0, 1.0], [91.0, 1.0], [92.0, 1.0], [93.0, 1.0], [94.0, 0.0], [95.0, 13.0], [96.0, 2.0], [97.0, 0.0], [98.0, 10.0], [99.0, 0.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[50.78, 24.549999999999994]], "isOverall": false, "label": "PROF - VNE - Random main action-Aggregated", "isController": false}, {"data": [[6.0, 59.0], [9.0, 33.0], [10.0, 73.48648648648653], [11.0, 134.0], [13.0, 116.0], [14.0, 195.0], [15.0, 40.0], [17.0, 58.0], [19.0, 209.5], [20.0, 256.8344370860926], [21.0, 175.88888888888889], [22.0, 152.50000000000003], [23.0, 124.33333333333333], [24.0, 194.6], [25.0, 134.74098360655742], [26.0, 183.66666666666666], [27.0, 195.41666666666666], [28.0, 155.25], [29.0, 168.0909090909091], [30.0, 377.0], [31.0, 335.0], [32.0, 197.1], [33.0, 108.0], [34.0, 403.0], [35.0, 306.25], [36.0, 395.71428571428567], [37.0, 138.0], [38.0, 209.0], [39.0, 210.11111111111111], [40.0, 292.7883096366513], [41.0, 324.3333333333333], [42.0, 305.5714285714286], [43.0, 276.14285714285717], [44.0, 250.5], [45.0, 286.1818181818182], [46.0, 159.0], [47.0, 308.6666666666667], [48.0, 274.49999999999994], [49.0, 211.5], [50.0, 289.0], [51.0, 254.8], [52.0, 358.3333333333333], [55.0, 310.5187165775405], [54.0, 301.5], [56.0, 909.4], [57.0, 589.1999999999999], [58.0, 1129.0], [59.0, 291.70833333333337], [60.0, 679.9419889502763], [61.0, 359.25], [62.0, 512.5], [63.0, 969.5], [64.0, 680.0], [65.0, 317.2], [66.0, 632.923076923077], [67.0, 864.1428571428571], [68.0, 1121.8], [69.0, 1174.9], [70.0, 397.89451476793255], [71.0, 637.0833333333334], [72.0, 532.7058823529411], [73.0, 630.0999999999999], [74.0, 444.8888888888889], [75.0, 451.83333333333337], [76.0, 729.0], [77.0, 891.2857142857142], [78.0, 574.3333333333334], [79.0, 821.5454545454545], [80.0, 736.5120772946865], [81.0, 702.9090909090909], [82.0, 706.125], [83.0, 580.8571428571428], [84.0, 264.54545454545456], [85.0, 1040.1755725190842], [86.0, 666.6666666666666], [87.0, 243.6], [88.0, 1347.0], [89.0, 603.2], [90.0, 1024.5], [91.0, 1286.1666666666665], [92.0, 862.3333333333334], [93.0, 766.75], [94.0, 1047.6666666666667], [95.0, 758.6], [96.0, 1185.666666666667], [99.0, 1006.8333333333334], [98.0, 509.6666666666667], [97.0, 1009.0], [100.0, 1137.3333333333335]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}, {"data": [[62.28616565109453, 604.0038366057331]], "isOverall": false, "label": "VNE-GET-quansu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 10950.85, "minX": 1.6172724E12, "maxY": 9404481.683333334, "series": [{"data": [[1.6172724E12, 7633302.55], [1.61727246E12, 9404481.683333334], [1.61727252E12, 1576730.3833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6172724E12, 53039.35], [1.61727246E12, 65111.35], [1.61727252E12, 10950.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727252E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.588235294117647, "minX": 1.6172724E12, "maxY": 787.8799643016507, "series": [{"data": [[1.6172724E12, 374.1462497060895], [1.61727246E12, 599.6309432515345], [1.61727252E12, 107.53872437357633]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.6172724E12, 34.40963855421687], [1.61727246E12, 1.588235294117647]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.6172724E12, 29.132530120481924], [1.61727246E12, 2.176470588235294]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.6172724E12, 482.2820936639119], [1.61727246E12, 787.8799643016507], [1.61727252E12, 94.29333333333325]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727252E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6172724E12, "maxY": 469.09106595092015, "series": [{"data": [[1.6172724E12, 287.3388196567127], [1.61727246E12, 469.09106595092015], [1.61727252E12, 99.72209567198169]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.6172724E12, 0.0], [1.61727246E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.6172724E12, 0.0], [1.61727246E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.6172724E12, 198.74765840220385], [1.61727246E12, 339.0160642570281], [1.61727252E12, 65.18666666666665]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727252E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6172724E12, "maxY": 371.7929447852767, "series": [{"data": [[1.6172724E12, 217.68492828591607], [1.61727246E12, 371.7929447852767], [1.61727252E12, 59.944191343963446]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.6172724E12, 0.0], [1.61727246E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.6172724E12, 0.0], [1.61727246E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.6172724E12, 144.60716253443525], [1.61727246E12, 251.56804997768862], [1.61727252E12, 39.44266666666665]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727252E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6172724E12, "maxY": 18044.0, "series": [{"data": [[1.6172724E12, 4829.0], [1.61727246E12, 18044.0], [1.61727252E12, 323.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6172724E12, 863.0], [1.61727246E12, 1465.8000000000002], [1.61727252E12, 174.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6172724E12, 1959.8999999999978], [1.61727246E12, 3240.16], [1.61727252E12, 280.3800000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6172724E12, 1193.0], [1.61727246E12, 1954.3999999999996], [1.61727252E12, 210.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6172724E12, 0.0], [1.61727246E12, 0.0], [1.61727252E12, 28.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6172724E12, 281.0], [1.61727246E12, 412.0], [1.61727252E12, 89.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727252E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 12.0, "maxY": 2077.0, "series": [{"data": [[12.0, 1.0], [20.0, 277.0], [29.0, 112.0], [33.0, 766.0], [34.0, 575.5], [43.0, 376.0], [53.0, 2077.0], [55.0, 1846.0], [60.0, 732.5], [75.0, 1338.0], [73.0, 1077.5], [76.0, 795.5], [77.0, 575.0], [81.0, 230.0], [83.0, 408.0], [82.0, 82.5], [88.0, 281.5], [89.0, 347.0], [96.0, 281.5], [103.0, 288.0], [102.0, 275.0], [101.0, 342.0], [106.0, 425.0], [105.0, 275.0], [104.0, 552.5], [107.0, 103.0], [111.0, 323.0], [109.0, 595.0], [108.0, 679.0], [110.0, 169.0], [113.0, 636.0], [116.0, 196.0], [119.0, 563.0], [118.0, 635.5], [122.0, 304.0], [120.0, 402.5], [123.0, 431.0], [121.0, 122.0], [127.0, 206.0], [125.0, 517.0], [124.0, 579.5], [126.0, 77.5], [134.0, 185.5], [135.0, 206.0], [130.0, 261.5], [131.0, 452.0], [133.0, 474.0], [129.0, 569.0], [140.0, 187.5], [142.0, 113.5], [139.0, 724.0], [136.0, 538.5], [141.0, 487.0], [138.0, 591.0], [137.0, 253.0], [146.0, 357.5], [144.0, 245.5], [149.0, 275.0], [148.0, 221.0], [151.0, 337.0], [150.0, 504.0], [152.0, 175.5], [157.0, 268.0], [158.0, 231.5], [153.0, 364.0], [156.0, 447.5], [154.0, 332.5], [165.0, 539.0], [162.0, 344.0], [167.0, 198.0], [164.0, 178.0], [163.0, 144.0], [160.0, 150.0], [169.0, 234.0], [172.0, 256.0], [175.0, 417.0], [170.0, 287.0], [180.0, 392.5], [182.0, 131.5], [185.0, 292.0], [206.0, 388.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 206.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 12.0, "maxY": 1561.0, "series": [{"data": [[12.0, 0.0], [20.0, 0.0], [29.0, 102.0], [33.0, 477.0], [34.0, 333.5], [43.0, 239.0], [53.0, 1561.0], [55.0, 1480.0], [60.0, 338.5], [75.0, 823.0], [73.0, 356.0], [76.0, 370.5], [77.0, 501.0], [81.0, 141.0], [83.0, 359.0], [82.0, 62.5], [88.0, 161.5], [89.0, 289.0], [96.0, 161.5], [103.0, 155.0], [102.0, 239.0], [101.0, 268.0], [106.0, 184.0], [105.0, 160.0], [104.0, 276.5], [107.0, 92.0], [111.0, 190.0], [109.0, 171.0], [108.0, 279.0], [110.0, 141.5], [113.0, 272.0], [116.0, 111.0], [119.0, 492.0], [118.0, 356.5], [122.0, 94.0], [120.0, 240.0], [123.0, 175.5], [121.0, 86.5], [127.0, 136.5], [125.0, 269.0], [124.0, 154.0], [126.0, 65.0], [134.0, 157.0], [135.0, 132.0], [130.0, 134.5], [131.0, 282.0], [133.0, 362.0], [129.0, 206.0], [140.0, 152.5], [142.0, 99.0], [139.0, 426.5], [136.0, 441.0], [141.0, 282.0], [138.0, 214.0], [137.0, 246.0], [146.0, 251.0], [144.0, 219.5], [149.0, 259.0], [148.0, 121.5], [151.0, 114.5], [150.0, 133.0], [152.0, 135.0], [157.0, 247.0], [158.0, 202.5], [153.0, 289.0], [156.0, 403.0], [154.0, 315.5], [165.0, 453.0], [162.0, 322.5], [167.0, 183.0], [164.0, 161.0], [163.0, 132.0], [160.0, 125.5], [169.0, 212.0], [172.0, 235.5], [175.0, 378.0], [170.0, 267.0], [180.0, 375.0], [182.0, 123.0], [185.0, 272.0], [206.0, 372.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 206.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 20.466666666666665, "minX": 1.6172724E12, "maxY": 123.88333333333334, "series": [{"data": [[1.6172724E12, 105.28333333333333], [1.61727246E12, 123.88333333333334], [1.61727252E12, 20.466666666666665]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727252E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 20.883333333333333, "minX": 1.6172724E12, "maxY": 124.85, "series": [{"data": [[1.6172724E12, 103.9], [1.61727246E12, 124.85], [1.61727252E12, 20.883333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727252E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.6172724E12, "maxY": 86.93333333333334, "series": [{"data": [[1.6172724E12, 1.3833333333333333], [1.61727246E12, 0.2833333333333333]], "isOverall": false, "label": "PROF - VNE - Random main action-success", "isController": false}, {"data": [[1.6172724E12, 30.25], [1.61727246E12, 37.35], [1.61727252E12, 6.25]], "isOverall": false, "label": "VNE-GET-quansu-success", "isController": false}, {"data": [[1.6172724E12, 1.3833333333333333], [1.61727246E12, 0.2833333333333333]], "isOverall": false, "label": "PROF - VNE - Test 01-success", "isController": false}, {"data": [[1.6172724E12, 70.88333333333334], [1.61727246E12, 86.93333333333334], [1.61727252E12, 14.633333333333333]], "isOverall": false, "label": "VNE-GET-bongda-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727252E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 20.883333333333333, "minX": 1.6172724E12, "maxY": 124.85, "series": [{"data": [[1.6172724E12, 103.9], [1.61727246E12, 124.85], [1.61727252E12, 20.883333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727252E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

