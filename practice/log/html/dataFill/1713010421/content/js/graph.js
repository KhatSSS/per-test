/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 14686.0, "series": [{"data": [[0.0, 42.0], [0.1, 43.0], [0.2, 44.0], [0.3, 45.0], [0.4, 45.0], [0.5, 45.0], [0.6, 45.0], [0.7, 46.0], [0.8, 46.0], [0.9, 46.0], [1.0, 46.0], [1.1, 46.0], [1.2, 47.0], [1.3, 47.0], [1.4, 47.0], [1.5, 47.0], [1.6, 47.0], [1.7, 48.0], [1.8, 48.0], [1.9, 48.0], [2.0, 48.0], [2.1, 48.0], [2.2, 48.0], [2.3, 49.0], [2.4, 49.0], [2.5, 49.0], [2.6, 49.0], [2.7, 49.0], [2.8, 49.0], [2.9, 49.0], [3.0, 50.0], [3.1, 50.0], [3.2, 50.0], [3.3, 50.0], [3.4, 50.0], [3.5, 50.0], [3.6, 50.0], [3.7, 51.0], [3.8, 51.0], [3.9, 51.0], [4.0, 51.0], [4.1, 51.0], [4.2, 51.0], [4.3, 51.0], [4.4, 51.0], [4.5, 52.0], [4.6, 52.0], [4.7, 52.0], [4.8, 52.0], [4.9, 52.0], [5.0, 52.0], [5.1, 52.0], [5.2, 52.0], [5.3, 53.0], [5.4, 53.0], [5.5, 53.0], [5.6, 53.0], [5.7, 53.0], [5.8, 53.0], [5.9, 53.0], [6.0, 53.0], [6.1, 54.0], [6.2, 54.0], [6.3, 54.0], [6.4, 54.0], [6.5, 54.0], [6.6, 54.0], [6.7, 54.0], [6.8, 54.0], [6.9, 55.0], [7.0, 55.0], [7.1, 55.0], [7.2, 55.0], [7.3, 55.0], [7.4, 55.0], [7.5, 56.0], [7.6, 56.0], [7.7, 56.0], [7.8, 56.0], [7.9, 56.0], [8.0, 56.0], [8.1, 56.0], [8.2, 57.0], [8.3, 57.0], [8.4, 57.0], [8.5, 57.0], [8.6, 57.0], [8.7, 57.0], [8.8, 58.0], [8.9, 58.0], [9.0, 58.0], [9.1, 58.0], [9.2, 58.0], [9.3, 58.0], [9.4, 58.0], [9.5, 58.0], [9.6, 59.0], [9.7, 59.0], [9.8, 59.0], [9.9, 59.0], [10.0, 59.0], [10.1, 60.0], [10.2, 60.0], [10.3, 60.0], [10.4, 60.0], [10.5, 60.0], [10.6, 60.0], [10.7, 61.0], [10.8, 61.0], [10.9, 61.0], [11.0, 61.0], [11.1, 61.0], [11.2, 61.0], [11.3, 61.0], [11.4, 62.0], [11.5, 62.0], [11.6, 62.0], [11.7, 62.0], [11.8, 62.0], [11.9, 63.0], [12.0, 63.0], [12.1, 63.0], [12.2, 63.0], [12.3, 63.0], [12.4, 63.0], [12.5, 63.0], [12.6, 64.0], [12.7, 64.0], [12.8, 64.0], [12.9, 64.0], [13.0, 64.0], [13.1, 65.0], [13.2, 65.0], [13.3, 65.0], [13.4, 65.0], [13.5, 65.0], [13.6, 65.0], [13.7, 66.0], [13.8, 66.0], [13.9, 66.0], [14.0, 66.0], [14.1, 66.0], [14.2, 66.0], [14.3, 67.0], [14.4, 67.0], [14.5, 67.0], [14.6, 67.0], [14.7, 67.0], [14.8, 67.0], [14.9, 68.0], [15.0, 68.0], [15.1, 68.0], [15.2, 68.0], [15.3, 68.0], [15.4, 68.0], [15.5, 69.0], [15.6, 69.0], [15.7, 69.0], [15.8, 69.0], [15.9, 69.0], [16.0, 69.0], [16.1, 70.0], [16.2, 70.0], [16.3, 70.0], [16.4, 70.0], [16.5, 70.0], [16.6, 70.0], [16.7, 71.0], [16.8, 71.0], [16.9, 71.0], [17.0, 71.0], [17.1, 71.0], [17.2, 71.0], [17.3, 72.0], [17.4, 72.0], [17.5, 72.0], [17.6, 72.0], [17.7, 72.0], [17.8, 72.0], [17.9, 73.0], [18.0, 73.0], [18.1, 73.0], [18.2, 73.0], [18.3, 73.0], [18.4, 73.0], [18.5, 74.0], [18.6, 74.0], [18.7, 74.0], [18.8, 74.0], [18.9, 74.0], [19.0, 74.0], [19.1, 75.0], [19.2, 75.0], [19.3, 75.0], [19.4, 75.0], [19.5, 75.0], [19.6, 75.0], [19.7, 75.0], [19.8, 76.0], [19.9, 76.0], [20.0, 76.0], [20.1, 76.0], [20.2, 76.0], [20.3, 76.0], [20.4, 77.0], [20.5, 77.0], [20.6, 77.0], [20.7, 77.0], [20.8, 77.0], [20.9, 77.0], [21.0, 78.0], [21.1, 78.0], [21.2, 78.0], [21.3, 78.0], [21.4, 78.0], [21.5, 78.0], [21.6, 78.0], [21.7, 79.0], [21.8, 79.0], [21.9, 79.0], [22.0, 79.0], [22.1, 79.0], [22.2, 79.0], [22.3, 79.0], [22.4, 80.0], [22.5, 80.0], [22.6, 80.0], [22.7, 80.0], [22.8, 80.0], [22.9, 81.0], [23.0, 81.0], [23.1, 81.0], [23.2, 81.0], [23.3, 81.0], [23.4, 82.0], [23.5, 82.0], [23.6, 82.0], [23.7, 82.0], [23.8, 83.0], [23.9, 83.0], [24.0, 83.0], [24.1, 83.0], [24.2, 83.0], [24.3, 84.0], [24.4, 84.0], [24.5, 84.0], [24.6, 84.0], [24.7, 84.0], [24.8, 84.0], [24.9, 85.0], [25.0, 85.0], [25.1, 85.0], [25.2, 85.0], [25.3, 85.0], [25.4, 86.0], [25.5, 86.0], [25.6, 86.0], [25.7, 86.0], [25.8, 86.0], [25.9, 86.0], [26.0, 86.0], [26.1, 87.0], [26.2, 87.0], [26.3, 87.0], [26.4, 87.0], [26.5, 87.0], [26.6, 88.0], [26.7, 88.0], [26.8, 88.0], [26.9, 88.0], [27.0, 88.0], [27.1, 88.0], [27.2, 89.0], [27.3, 89.0], [27.4, 89.0], [27.5, 89.0], [27.6, 89.0], [27.7, 89.0], [27.8, 89.0], [27.9, 90.0], [28.0, 90.0], [28.1, 90.0], [28.2, 90.0], [28.3, 91.0], [28.4, 91.0], [28.5, 91.0], [28.6, 91.0], [28.7, 91.0], [28.8, 91.0], [28.9, 91.0], [29.0, 92.0], [29.1, 92.0], [29.2, 92.0], [29.3, 92.0], [29.4, 92.0], [29.5, 92.0], [29.6, 93.0], [29.7, 93.0], [29.8, 93.0], [29.9, 93.0], [30.0, 93.0], [30.1, 93.0], [30.2, 94.0], [30.3, 94.0], [30.4, 94.0], [30.5, 94.0], [30.6, 94.0], [30.7, 95.0], [30.8, 95.0], [30.9, 95.0], [31.0, 95.0], [31.1, 95.0], [31.2, 95.0], [31.3, 96.0], [31.4, 96.0], [31.5, 96.0], [31.6, 96.0], [31.7, 96.0], [31.8, 96.0], [31.9, 97.0], [32.0, 97.0], [32.1, 97.0], [32.2, 97.0], [32.3, 97.0], [32.4, 97.0], [32.5, 97.0], [32.6, 98.0], [32.7, 98.0], [32.8, 98.0], [32.9, 98.0], [33.0, 98.0], [33.1, 98.0], [33.2, 98.0], [33.3, 99.0], [33.4, 99.0], [33.5, 99.0], [33.6, 99.0], [33.7, 99.0], [33.8, 100.0], [33.9, 100.0], [34.0, 100.0], [34.1, 100.0], [34.2, 100.0], [34.3, 100.0], [34.4, 101.0], [34.5, 101.0], [34.6, 101.0], [34.7, 101.0], [34.8, 101.0], [34.9, 102.0], [35.0, 102.0], [35.1, 102.0], [35.2, 102.0], [35.3, 102.0], [35.4, 102.0], [35.5, 103.0], [35.6, 103.0], [35.7, 103.0], [35.8, 103.0], [35.9, 104.0], [36.0, 104.0], [36.1, 104.0], [36.2, 104.0], [36.3, 104.0], [36.4, 105.0], [36.5, 105.0], [36.6, 105.0], [36.7, 105.0], [36.8, 105.0], [36.9, 105.0], [37.0, 106.0], [37.1, 106.0], [37.2, 106.0], [37.3, 106.0], [37.4, 106.0], [37.5, 106.0], [37.6, 107.0], [37.7, 107.0], [37.8, 107.0], [37.9, 107.0], [38.0, 107.0], [38.1, 107.0], [38.2, 108.0], [38.3, 108.0], [38.4, 108.0], [38.5, 108.0], [38.6, 108.0], [38.7, 108.0], [38.8, 109.0], [38.9, 109.0], [39.0, 109.0], [39.1, 109.0], [39.2, 109.0], [39.3, 110.0], [39.4, 110.0], [39.5, 110.0], [39.6, 110.0], [39.7, 110.0], [39.8, 110.0], [39.9, 111.0], [40.0, 111.0], [40.1, 111.0], [40.2, 111.0], [40.3, 111.0], [40.4, 111.0], [40.5, 111.0], [40.6, 112.0], [40.7, 112.0], [40.8, 112.0], [40.9, 112.0], [41.0, 112.0], [41.1, 113.0], [41.2, 113.0], [41.3, 113.0], [41.4, 113.0], [41.5, 113.0], [41.6, 113.0], [41.7, 114.0], [41.8, 114.0], [41.9, 114.0], [42.0, 114.0], [42.1, 114.0], [42.2, 114.0], [42.3, 115.0], [42.4, 115.0], [42.5, 115.0], [42.6, 115.0], [42.7, 116.0], [42.8, 116.0], [42.9, 116.0], [43.0, 116.0], [43.1, 116.0], [43.2, 117.0], [43.3, 117.0], [43.4, 117.0], [43.5, 117.0], [43.6, 117.0], [43.7, 117.0], [43.8, 118.0], [43.9, 118.0], [44.0, 118.0], [44.1, 118.0], [44.2, 118.0], [44.3, 119.0], [44.4, 119.0], [44.5, 119.0], [44.6, 119.0], [44.7, 120.0], [44.8, 120.0], [44.9, 120.0], [45.0, 120.0], [45.1, 120.0], [45.2, 121.0], [45.3, 121.0], [45.4, 121.0], [45.5, 121.0], [45.6, 122.0], [45.7, 122.0], [45.8, 122.0], [45.9, 122.0], [46.0, 123.0], [46.1, 123.0], [46.2, 123.0], [46.3, 124.0], [46.4, 124.0], [46.5, 124.0], [46.6, 124.0], [46.7, 125.0], [46.8, 125.0], [46.9, 125.0], [47.0, 125.0], [47.1, 126.0], [47.2, 126.0], [47.3, 126.0], [47.4, 126.0], [47.5, 126.0], [47.6, 127.0], [47.7, 127.0], [47.8, 127.0], [47.9, 127.0], [48.0, 128.0], [48.1, 128.0], [48.2, 128.0], [48.3, 128.0], [48.4, 128.0], [48.5, 129.0], [48.6, 129.0], [48.7, 129.0], [48.8, 129.0], [48.9, 130.0], [49.0, 130.0], [49.1, 130.0], [49.2, 131.0], [49.3, 131.0], [49.4, 131.0], [49.5, 131.0], [49.6, 132.0], [49.7, 132.0], [49.8, 132.0], [49.9, 132.0], [50.0, 133.0], [50.1, 133.0], [50.2, 133.0], [50.3, 134.0], [50.4, 134.0], [50.5, 134.0], [50.6, 134.0], [50.7, 135.0], [50.8, 135.0], [50.9, 135.0], [51.0, 136.0], [51.1, 136.0], [51.2, 136.0], [51.3, 136.0], [51.4, 137.0], [51.5, 137.0], [51.6, 137.0], [51.7, 138.0], [51.8, 138.0], [51.9, 138.0], [52.0, 139.0], [52.1, 139.0], [52.2, 139.0], [52.3, 139.0], [52.4, 140.0], [52.5, 140.0], [52.6, 140.0], [52.7, 140.0], [52.8, 141.0], [52.9, 141.0], [53.0, 141.0], [53.1, 141.0], [53.2, 142.0], [53.3, 142.0], [53.4, 142.0], [53.5, 143.0], [53.6, 143.0], [53.7, 143.0], [53.8, 143.0], [53.9, 143.0], [54.0, 144.0], [54.1, 144.0], [54.2, 144.0], [54.3, 145.0], [54.4, 145.0], [54.5, 145.0], [54.6, 146.0], [54.7, 146.0], [54.8, 146.0], [54.9, 146.0], [55.0, 147.0], [55.1, 147.0], [55.2, 147.0], [55.3, 148.0], [55.4, 148.0], [55.5, 148.0], [55.6, 149.0], [55.7, 149.0], [55.8, 149.0], [55.9, 150.0], [56.0, 150.0], [56.1, 150.0], [56.2, 151.0], [56.3, 151.0], [56.4, 152.0], [56.5, 152.0], [56.6, 153.0], [56.7, 153.0], [56.8, 154.0], [56.9, 154.0], [57.0, 154.0], [57.1, 155.0], [57.2, 155.0], [57.3, 155.0], [57.4, 155.0], [57.5, 156.0], [57.6, 156.0], [57.7, 157.0], [57.8, 157.0], [57.9, 158.0], [58.0, 158.0], [58.1, 158.0], [58.2, 159.0], [58.3, 159.0], [58.4, 159.0], [58.5, 160.0], [58.6, 160.0], [58.7, 161.0], [58.8, 161.0], [58.9, 161.0], [59.0, 162.0], [59.1, 162.0], [59.2, 163.0], [59.3, 163.0], [59.4, 163.0], [59.5, 164.0], [59.6, 164.0], [59.7, 165.0], [59.8, 165.0], [59.9, 166.0], [60.0, 166.0], [60.1, 167.0], [60.2, 167.0], [60.3, 168.0], [60.4, 168.0], [60.5, 169.0], [60.6, 169.0], [60.7, 170.0], [60.8, 171.0], [60.9, 171.0], [61.0, 172.0], [61.1, 172.0], [61.2, 173.0], [61.3, 173.0], [61.4, 174.0], [61.5, 174.0], [61.6, 175.0], [61.7, 175.0], [61.8, 175.0], [61.9, 176.0], [62.0, 177.0], [62.1, 177.0], [62.2, 177.0], [62.3, 178.0], [62.4, 178.0], [62.5, 179.0], [62.6, 180.0], [62.7, 180.0], [62.8, 181.0], [62.9, 182.0], [63.0, 182.0], [63.1, 183.0], [63.2, 184.0], [63.3, 184.0], [63.4, 185.0], [63.5, 186.0], [63.6, 186.0], [63.7, 187.0], [63.8, 188.0], [63.9, 188.0], [64.0, 189.0], [64.1, 189.0], [64.2, 190.0], [64.3, 191.0], [64.4, 191.0], [64.5, 192.0], [64.6, 193.0], [64.7, 194.0], [64.8, 194.0], [64.9, 195.0], [65.0, 195.0], [65.1, 196.0], [65.2, 197.0], [65.3, 198.0], [65.4, 198.0], [65.5, 199.0], [65.6, 200.0], [65.7, 200.0], [65.8, 201.0], [65.9, 202.0], [66.0, 202.0], [66.1, 203.0], [66.2, 203.0], [66.3, 204.0], [66.4, 204.0], [66.5, 205.0], [66.6, 205.0], [66.7, 206.0], [66.8, 207.0], [66.9, 208.0], [67.0, 208.0], [67.1, 209.0], [67.2, 210.0], [67.3, 211.0], [67.4, 212.0], [67.5, 213.0], [67.6, 214.0], [67.7, 214.0], [67.8, 215.0], [67.9, 216.0], [68.0, 217.0], [68.1, 218.0], [68.2, 219.0], [68.3, 220.0], [68.4, 221.0], [68.5, 223.0], [68.6, 225.0], [68.7, 227.0], [68.8, 228.0], [68.9, 229.0], [69.0, 230.0], [69.1, 231.0], [69.2, 232.0], [69.3, 234.0], [69.4, 236.0], [69.5, 237.0], [69.6, 239.0], [69.7, 240.0], [69.8, 242.0], [69.9, 244.0], [70.0, 246.0], [70.1, 247.0], [70.2, 249.0], [70.3, 250.0], [70.4, 252.0], [70.5, 252.0], [70.6, 254.0], [70.7, 256.0], [70.8, 257.0], [70.9, 258.0], [71.0, 260.0], [71.1, 261.0], [71.2, 262.0], [71.3, 263.0], [71.4, 264.0], [71.5, 266.0], [71.6, 268.0], [71.7, 269.0], [71.8, 271.0], [71.9, 273.0], [72.0, 274.0], [72.1, 275.0], [72.2, 276.0], [72.3, 277.0], [72.4, 280.0], [72.5, 280.0], [72.6, 282.0], [72.7, 285.0], [72.8, 287.0], [72.9, 289.0], [73.0, 290.0], [73.1, 291.0], [73.2, 292.0], [73.3, 294.0], [73.4, 295.0], [73.5, 297.0], [73.6, 298.0], [73.7, 299.0], [73.8, 300.0], [73.9, 302.0], [74.0, 303.0], [74.1, 304.0], [74.2, 305.0], [74.3, 307.0], [74.4, 308.0], [74.5, 309.0], [74.6, 310.0], [74.7, 311.0], [74.8, 312.0], [74.9, 313.0], [75.0, 315.0], [75.1, 315.0], [75.2, 317.0], [75.3, 317.0], [75.4, 318.0], [75.5, 320.0], [75.6, 321.0], [75.7, 322.0], [75.8, 324.0], [75.9, 324.0], [76.0, 325.0], [76.1, 327.0], [76.2, 328.0], [76.3, 329.0], [76.4, 331.0], [76.5, 331.0], [76.6, 332.0], [76.7, 333.0], [76.8, 334.0], [76.9, 335.0], [77.0, 337.0], [77.1, 338.0], [77.2, 339.0], [77.3, 340.0], [77.4, 340.0], [77.5, 342.0], [77.6, 342.0], [77.7, 343.0], [77.8, 345.0], [77.9, 346.0], [78.0, 347.0], [78.1, 349.0], [78.2, 350.0], [78.3, 351.0], [78.4, 352.0], [78.5, 354.0], [78.6, 355.0], [78.7, 357.0], [78.8, 359.0], [78.9, 360.0], [79.0, 361.0], [79.1, 362.0], [79.2, 363.0], [79.3, 365.0], [79.4, 366.0], [79.5, 367.0], [79.6, 368.0], [79.7, 370.0], [79.8, 371.0], [79.9, 372.0], [80.0, 373.0], [80.1, 375.0], [80.2, 375.0], [80.3, 376.0], [80.4, 376.0], [80.5, 379.0], [80.6, 380.0], [80.7, 381.0], [80.8, 383.0], [80.9, 384.0], [81.0, 385.0], [81.1, 386.0], [81.2, 388.0], [81.3, 389.0], [81.4, 391.0], [81.5, 394.0], [81.6, 395.0], [81.7, 397.0], [81.8, 398.0], [81.9, 399.0], [82.0, 400.0], [82.1, 401.0], [82.2, 403.0], [82.3, 404.0], [82.4, 405.0], [82.5, 408.0], [82.6, 410.0], [82.7, 413.0], [82.8, 415.0], [82.9, 417.0], [83.0, 418.0], [83.1, 420.0], [83.2, 423.0], [83.3, 425.0], [83.4, 426.0], [83.5, 429.0], [83.6, 431.0], [83.7, 434.0], [83.8, 436.0], [83.9, 439.0], [84.0, 443.0], [84.1, 445.0], [84.2, 449.0], [84.3, 451.0], [84.4, 455.0], [84.5, 457.0], [84.6, 461.0], [84.7, 464.0], [84.8, 466.0], [84.9, 469.0], [85.0, 473.0], [85.1, 476.0], [85.2, 480.0], [85.3, 485.0], [85.4, 489.0], [85.5, 494.0], [85.6, 498.0], [85.7, 504.0], [85.8, 508.0], [85.9, 510.0], [86.0, 514.0], [86.1, 523.0], [86.2, 529.0], [86.3, 534.0], [86.4, 543.0], [86.5, 548.0], [86.6, 550.0], [86.7, 552.0], [86.8, 557.0], [86.9, 563.0], [87.0, 568.0], [87.1, 574.0], [87.2, 580.0], [87.3, 588.0], [87.4, 592.0], [87.5, 598.0], [87.6, 604.0], [87.7, 609.0], [87.8, 613.0], [87.9, 618.0], [88.0, 623.0], [88.1, 627.0], [88.2, 631.0], [88.3, 635.0], [88.4, 640.0], [88.5, 645.0], [88.6, 651.0], [88.7, 658.0], [88.8, 663.0], [88.9, 669.0], [89.0, 676.0], [89.1, 686.0], [89.2, 691.0], [89.3, 706.0], [89.4, 717.0], [89.5, 725.0], [89.6, 735.0], [89.7, 742.0], [89.8, 752.0], [89.9, 763.0], [90.0, 772.0], [90.1, 783.0], [90.2, 791.0], [90.3, 801.0], [90.4, 805.0], [90.5, 811.0], [90.6, 814.0], [90.7, 820.0], [90.8, 826.0], [90.9, 836.0], [91.0, 839.0], [91.1, 852.0], [91.2, 862.0], [91.3, 875.0], [91.4, 883.0], [91.5, 896.0], [91.6, 904.0], [91.7, 910.0], [91.8, 918.0], [91.9, 930.0], [92.0, 939.0], [92.1, 954.0], [92.2, 967.0], [92.3, 998.0], [92.4, 1016.0], [92.5, 1028.0], [92.6, 1048.0], [92.7, 1057.0], [92.8, 1066.0], [92.9, 1076.0], [93.0, 1090.0], [93.1, 1096.0], [93.2, 1103.0], [93.3, 1110.0], [93.4, 1117.0], [93.5, 1120.0], [93.6, 1125.0], [93.7, 1131.0], [93.8, 1135.0], [93.9, 1140.0], [94.0, 1147.0], [94.1, 1153.0], [94.2, 1157.0], [94.3, 1167.0], [94.4, 1175.0], [94.5, 1183.0], [94.6, 1194.0], [94.7, 1200.0], [94.8, 1212.0], [94.9, 1225.0], [95.0, 1237.0], [95.1, 1251.0], [95.2, 1273.0], [95.3, 1287.0], [95.4, 1299.0], [95.5, 1311.0], [95.6, 1324.0], [95.7, 1337.0], [95.8, 1348.0], [95.9, 1356.0], [96.0, 1368.0], [96.1, 1380.0], [96.2, 1387.0], [96.3, 1396.0], [96.4, 1413.0], [96.5, 1419.0], [96.6, 1443.0], [96.7, 1455.0], [96.8, 1465.0], [96.9, 1483.0], [97.0, 1514.0], [97.1, 1528.0], [97.2, 1541.0], [97.3, 1555.0], [97.4, 1571.0], [97.5, 1591.0], [97.6, 1630.0], [97.7, 1653.0], [97.8, 1680.0], [97.9, 1720.0], [98.0, 1745.0], [98.1, 1786.0], [98.2, 1813.0], [98.3, 1833.0], [98.4, 1860.0], [98.5, 1889.0], [98.6, 1925.0], [98.7, 1982.0], [98.8, 2124.0], [98.9, 2209.0], [99.0, 2321.0], [99.1, 2411.0], [99.2, 2531.0], [99.3, 2636.0], [99.4, 2732.0], [99.5, 2822.0], [99.6, 3138.0], [99.7, 3428.0], [99.8, 3779.0], [99.9, 4582.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 3.0], [85.1, 3.0], [85.2, 3.0], [85.3, 3.0], [85.4, 3.0], [85.5, 3.0], [85.6, 3.0], [85.7, 3.0], [85.8, 3.0], [85.9, 3.0], [86.0, 3.0], [86.1, 3.0], [86.2, 3.0], [86.3, 3.0], [86.4, 3.0], [86.5, 3.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 3.0], [87.4, 3.0], [87.5, 3.0], [87.6, 3.0], [87.7, 3.0], [87.8, 3.0], [87.9, 3.0], [88.0, 3.0], [88.1, 3.0], [88.2, 3.0], [88.3, 3.0], [88.4, 3.0], [88.5, 3.0], [88.6, 3.0], [88.7, 3.0], [88.8, 3.0], [88.9, 3.0], [89.0, 3.0], [89.1, 3.0], [89.2, 3.0], [89.3, 3.0], [89.4, 3.0], [89.5, 3.0], [89.6, 3.0], [89.7, 3.0], [89.8, 3.0], [89.9, 3.0], [90.0, 5.0], [90.1, 5.0], [90.2, 5.0], [90.3, 5.0], [90.4, 5.0], [90.5, 5.0], [90.6, 5.0], [90.7, 5.0], [90.8, 5.0], [90.9, 5.0], [91.0, 6.0], [91.1, 6.0], [91.2, 6.0], [91.3, 6.0], [91.4, 6.0], [91.5, 6.0], [91.6, 6.0], [91.7, 6.0], [91.8, 6.0], [91.9, 6.0], [92.0, 33.0], [92.1, 33.0], [92.2, 33.0], [92.3, 33.0], [92.4, 33.0], [92.5, 33.0], [92.6, 33.0], [92.7, 33.0], [92.8, 33.0], [92.9, 33.0], [93.0, 75.0], [93.1, 75.0], [93.2, 75.0], [93.3, 75.0], [93.4, 75.0], [93.5, 75.0], [93.6, 75.0], [93.7, 75.0], [93.8, 75.0], [93.9, 75.0], [94.0, 133.0], [94.1, 133.0], [94.2, 133.0], [94.3, 133.0], [94.4, 133.0], [94.5, 133.0], [94.6, 133.0], [94.7, 133.0], [94.8, 133.0], [94.9, 133.0], [95.0, 225.0], [95.1, 225.0], [95.2, 225.0], [95.3, 225.0], [95.4, 225.0], [95.5, 225.0], [95.6, 225.0], [95.7, 225.0], [95.8, 225.0], [95.9, 225.0], [96.0, 373.0], [96.1, 373.0], [96.2, 373.0], [96.3, 373.0], [96.4, 373.0], [96.5, 373.0], [96.6, 373.0], [96.7, 373.0], [96.8, 373.0], [96.9, 373.0], [97.0, 524.0], [97.1, 524.0], [97.2, 524.0], [97.3, 524.0], [97.4, 524.0], [97.5, 524.0], [97.6, 524.0], [97.7, 524.0], [97.8, 524.0], [97.9, 524.0], [98.0, 678.0], [98.1, 678.0], [98.2, 678.0], [98.3, 678.0], [98.4, 678.0], [98.5, 678.0], [98.6, 678.0], [98.7, 678.0], [98.8, 678.0], [98.9, 678.0], [99.0, 815.0], [99.1, 815.0], [99.2, 815.0], [99.3, 815.0], [99.4, 815.0], [99.5, 815.0], [99.6, 815.0], [99.7, 815.0], [99.8, 815.0], [99.9, 815.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 3.0], [79.1, 3.0], [79.2, 3.0], [79.3, 3.0], [79.4, 3.0], [79.5, 3.0], [79.6, 3.0], [79.7, 3.0], [79.8, 3.0], [79.9, 3.0], [80.0, 3.0], [80.1, 3.0], [80.2, 3.0], [80.3, 3.0], [80.4, 3.0], [80.5, 3.0], [80.6, 3.0], [80.7, 3.0], [80.8, 3.0], [80.9, 3.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 3.0], [82.1, 3.0], [82.2, 3.0], [82.3, 3.0], [82.4, 3.0], [82.5, 3.0], [82.6, 3.0], [82.7, 3.0], [82.8, 3.0], [82.9, 3.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 4.0], [85.4, 4.0], [85.5, 4.0], [85.6, 4.0], [85.7, 4.0], [85.8, 4.0], [85.9, 4.0], [86.0, 4.0], [86.1, 4.0], [86.2, 4.0], [86.3, 4.0], [86.4, 4.0], [86.5, 4.0], [86.6, 4.0], [86.7, 4.0], [86.8, 4.0], [86.9, 4.0], [87.0, 4.0], [87.1, 4.0], [87.2, 4.0], [87.3, 4.0], [87.4, 4.0], [87.5, 4.0], [87.6, 4.0], [87.7, 4.0], [87.8, 4.0], [87.9, 4.0], [88.0, 5.0], [88.1, 5.0], [88.2, 5.0], [88.3, 5.0], [88.4, 5.0], [88.5, 5.0], [88.6, 5.0], [88.7, 5.0], [88.8, 5.0], [88.9, 5.0], [89.0, 6.0], [89.1, 6.0], [89.2, 6.0], [89.3, 6.0], [89.4, 6.0], [89.5, 6.0], [89.6, 6.0], [89.7, 6.0], [89.8, 6.0], [89.9, 6.0], [90.0, 6.0], [90.1, 6.0], [90.2, 6.0], [90.3, 6.0], [90.4, 6.0], [90.5, 6.0], [90.6, 6.0], [90.7, 6.0], [90.8, 6.0], [90.9, 6.0], [91.0, 7.0], [91.1, 7.0], [91.2, 7.0], [91.3, 7.0], [91.4, 7.0], [91.5, 7.0], [91.6, 7.0], [91.7, 7.0], [91.8, 7.0], [91.9, 7.0], [92.0, 84.0], [92.1, 84.0], [92.2, 84.0], [92.3, 84.0], [92.4, 84.0], [92.5, 84.0], [92.6, 84.0], [92.7, 84.0], [92.8, 84.0], [92.9, 84.0], [93.0, 98.0], [93.1, 98.0], [93.2, 98.0], [93.3, 98.0], [93.4, 98.0], [93.5, 98.0], [93.6, 98.0], [93.7, 98.0], [93.8, 98.0], [93.9, 98.0], [94.0, 302.0], [94.1, 302.0], [94.2, 302.0], [94.3, 302.0], [94.4, 302.0], [94.5, 302.0], [94.6, 302.0], [94.7, 302.0], [94.8, 302.0], [94.9, 302.0], [95.0, 305.0], [95.1, 305.0], [95.2, 305.0], [95.3, 305.0], [95.4, 305.0], [95.5, 305.0], [95.6, 305.0], [95.7, 305.0], [95.8, 305.0], [95.9, 305.0], [96.0, 306.0], [96.1, 306.0], [96.2, 306.0], [96.3, 306.0], [96.4, 306.0], [96.5, 306.0], [96.6, 306.0], [96.7, 306.0], [96.8, 306.0], [96.9, 306.0], [97.0, 307.0], [97.1, 307.0], [97.2, 307.0], [97.3, 307.0], [97.4, 307.0], [97.5, 307.0], [97.6, 307.0], [97.7, 307.0], [97.8, 307.0], [97.9, 307.0], [98.0, 308.0], [98.1, 308.0], [98.2, 308.0], [98.3, 308.0], [98.4, 308.0], [98.5, 308.0], [98.6, 308.0], [98.7, 308.0], [98.8, 308.0], [98.9, 308.0], [99.0, 308.0], [99.1, 308.0], [99.2, 308.0], [99.3, 308.0], [99.4, 308.0], [99.5, 308.0], [99.6, 308.0], [99.7, 308.0], [99.8, 308.0], [99.9, 308.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 26.0], [0.1, 28.0], [0.2, 28.0], [0.3, 29.0], [0.4, 29.0], [0.5, 29.0], [0.6, 29.0], [0.7, 29.0], [0.8, 30.0], [0.9, 30.0], [1.0, 30.0], [1.1, 30.0], [1.2, 30.0], [1.3, 30.0], [1.4, 30.0], [1.5, 31.0], [1.6, 31.0], [1.7, 31.0], [1.8, 31.0], [1.9, 31.0], [2.0, 31.0], [2.1, 31.0], [2.2, 31.0], [2.3, 31.0], [2.4, 31.0], [2.5, 32.0], [2.6, 32.0], [2.7, 32.0], [2.8, 32.0], [2.9, 32.0], [3.0, 32.0], [3.1, 32.0], [3.2, 32.0], [3.3, 32.0], [3.4, 32.0], [3.5, 32.0], [3.6, 33.0], [3.7, 33.0], [3.8, 33.0], [3.9, 33.0], [4.0, 33.0], [4.1, 33.0], [4.2, 33.0], [4.3, 33.0], [4.4, 33.0], [4.5, 33.0], [4.6, 34.0], [4.7, 34.0], [4.8, 34.0], [4.9, 34.0], [5.0, 34.0], [5.1, 34.0], [5.2, 34.0], [5.3, 34.0], [5.4, 34.0], [5.5, 34.0], [5.6, 34.0], [5.7, 34.0], [5.8, 35.0], [5.9, 35.0], [6.0, 35.0], [6.1, 35.0], [6.2, 35.0], [6.3, 35.0], [6.4, 35.0], [6.5, 35.0], [6.6, 35.0], [6.7, 35.0], [6.8, 36.0], [6.9, 36.0], [7.0, 36.0], [7.1, 36.0], [7.2, 36.0], [7.3, 36.0], [7.4, 36.0], [7.5, 36.0], [7.6, 36.0], [7.7, 36.0], [7.8, 36.0], [7.9, 37.0], [8.0, 37.0], [8.1, 37.0], [8.2, 37.0], [8.3, 37.0], [8.4, 37.0], [8.5, 37.0], [8.6, 37.0], [8.7, 37.0], [8.8, 37.0], [8.9, 37.0], [9.0, 38.0], [9.1, 38.0], [9.2, 38.0], [9.3, 38.0], [9.4, 38.0], [9.5, 38.0], [9.6, 38.0], [9.7, 38.0], [9.8, 38.0], [9.9, 38.0], [10.0, 39.0], [10.1, 39.0], [10.2, 39.0], [10.3, 39.0], [10.4, 39.0], [10.5, 39.0], [10.6, 39.0], [10.7, 39.0], [10.8, 39.0], [10.9, 39.0], [11.0, 40.0], [11.1, 40.0], [11.2, 40.0], [11.3, 40.0], [11.4, 40.0], [11.5, 40.0], [11.6, 40.0], [11.7, 40.0], [11.8, 40.0], [11.9, 41.0], [12.0, 41.0], [12.1, 41.0], [12.2, 41.0], [12.3, 41.0], [12.4, 41.0], [12.5, 41.0], [12.6, 41.0], [12.7, 41.0], [12.8, 42.0], [12.9, 42.0], [13.0, 42.0], [13.1, 42.0], [13.2, 42.0], [13.3, 42.0], [13.4, 42.0], [13.5, 42.0], [13.6, 42.0], [13.7, 42.0], [13.8, 42.0], [13.9, 43.0], [14.0, 43.0], [14.1, 43.0], [14.2, 43.0], [14.3, 43.0], [14.4, 43.0], [14.5, 43.0], [14.6, 44.0], [14.7, 44.0], [14.8, 44.0], [14.9, 44.0], [15.0, 44.0], [15.1, 44.0], [15.2, 44.0], [15.3, 44.0], [15.4, 45.0], [15.5, 45.0], [15.6, 45.0], [15.7, 45.0], [15.8, 45.0], [15.9, 45.0], [16.0, 45.0], [16.1, 46.0], [16.2, 46.0], [16.3, 46.0], [16.4, 46.0], [16.5, 46.0], [16.6, 46.0], [16.7, 46.0], [16.8, 46.0], [16.9, 47.0], [17.0, 47.0], [17.1, 47.0], [17.2, 47.0], [17.3, 47.0], [17.4, 47.0], [17.5, 47.0], [17.6, 47.0], [17.7, 47.0], [17.8, 48.0], [17.9, 48.0], [18.0, 48.0], [18.1, 48.0], [18.2, 48.0], [18.3, 48.0], [18.4, 48.0], [18.5, 48.0], [18.6, 49.0], [18.7, 49.0], [18.8, 49.0], [18.9, 49.0], [19.0, 49.0], [19.1, 49.0], [19.2, 49.0], [19.3, 50.0], [19.4, 50.0], [19.5, 50.0], [19.6, 50.0], [19.7, 50.0], [19.8, 50.0], [19.9, 50.0], [20.0, 51.0], [20.1, 51.0], [20.2, 51.0], [20.3, 51.0], [20.4, 51.0], [20.5, 51.0], [20.6, 51.0], [20.7, 52.0], [20.8, 52.0], [20.9, 52.0], [21.0, 52.0], [21.1, 52.0], [21.2, 52.0], [21.3, 53.0], [21.4, 53.0], [21.5, 53.0], [21.6, 53.0], [21.7, 53.0], [21.8, 53.0], [21.9, 54.0], [22.0, 54.0], [22.1, 54.0], [22.2, 54.0], [22.3, 54.0], [22.4, 55.0], [22.5, 55.0], [22.6, 55.0], [22.7, 55.0], [22.8, 55.0], [22.9, 55.0], [23.0, 55.0], [23.1, 56.0], [23.2, 56.0], [23.3, 56.0], [23.4, 56.0], [23.5, 56.0], [23.6, 57.0], [23.7, 57.0], [23.8, 57.0], [23.9, 57.0], [24.0, 57.0], [24.1, 58.0], [24.2, 58.0], [24.3, 58.0], [24.4, 58.0], [24.5, 58.0], [24.6, 59.0], [24.7, 59.0], [24.8, 59.0], [24.9, 59.0], [25.0, 59.0], [25.1, 59.0], [25.2, 60.0], [25.3, 60.0], [25.4, 60.0], [25.5, 60.0], [25.6, 60.0], [25.7, 61.0], [25.8, 61.0], [25.9, 61.0], [26.0, 61.0], [26.1, 61.0], [26.2, 62.0], [26.3, 62.0], [26.4, 62.0], [26.5, 62.0], [26.6, 62.0], [26.7, 63.0], [26.8, 63.0], [26.9, 63.0], [27.0, 63.0], [27.1, 63.0], [27.2, 63.0], [27.3, 64.0], [27.4, 64.0], [27.5, 64.0], [27.6, 64.0], [27.7, 65.0], [27.8, 65.0], [27.9, 65.0], [28.0, 65.0], [28.1, 65.0], [28.2, 66.0], [28.3, 66.0], [28.4, 66.0], [28.5, 66.0], [28.6, 66.0], [28.7, 67.0], [28.8, 67.0], [28.9, 67.0], [29.0, 68.0], [29.1, 68.0], [29.2, 68.0], [29.3, 68.0], [29.4, 69.0], [29.5, 69.0], [29.6, 69.0], [29.7, 69.0], [29.8, 70.0], [29.9, 70.0], [30.0, 70.0], [30.1, 71.0], [30.2, 71.0], [30.3, 71.0], [30.4, 71.0], [30.5, 72.0], [30.6, 72.0], [30.7, 72.0], [30.8, 72.0], [30.9, 72.0], [31.0, 73.0], [31.1, 73.0], [31.2, 73.0], [31.3, 73.0], [31.4, 74.0], [31.5, 74.0], [31.6, 74.0], [31.7, 74.0], [31.8, 74.0], [31.9, 75.0], [32.0, 75.0], [32.1, 75.0], [32.2, 76.0], [32.3, 76.0], [32.4, 76.0], [32.5, 77.0], [32.6, 77.0], [32.7, 77.0], [32.8, 77.0], [32.9, 78.0], [33.0, 78.0], [33.1, 78.0], [33.2, 78.0], [33.3, 78.0], [33.4, 79.0], [33.5, 79.0], [33.6, 79.0], [33.7, 79.0], [33.8, 80.0], [33.9, 80.0], [34.0, 80.0], [34.1, 80.0], [34.2, 81.0], [34.3, 81.0], [34.4, 81.0], [34.5, 82.0], [34.6, 82.0], [34.7, 82.0], [34.8, 82.0], [34.9, 83.0], [35.0, 83.0], [35.1, 83.0], [35.2, 84.0], [35.3, 84.0], [35.4, 84.0], [35.5, 84.0], [35.6, 85.0], [35.7, 85.0], [35.8, 85.0], [35.9, 85.0], [36.0, 86.0], [36.1, 86.0], [36.2, 86.0], [36.3, 87.0], [36.4, 87.0], [36.5, 87.0], [36.6, 88.0], [36.7, 88.0], [36.8, 88.0], [36.9, 89.0], [37.0, 89.0], [37.1, 89.0], [37.2, 90.0], [37.3, 90.0], [37.4, 90.0], [37.5, 91.0], [37.6, 91.0], [37.7, 91.0], [37.8, 92.0], [37.9, 92.0], [38.0, 93.0], [38.1, 93.0], [38.2, 93.0], [38.3, 94.0], [38.4, 94.0], [38.5, 94.0], [38.6, 95.0], [38.7, 95.0], [38.8, 95.0], [38.9, 95.0], [39.0, 96.0], [39.1, 96.0], [39.2, 97.0], [39.3, 97.0], [39.4, 97.0], [39.5, 98.0], [39.6, 98.0], [39.7, 99.0], [39.8, 99.0], [39.9, 99.0], [40.0, 100.0], [40.1, 100.0], [40.2, 100.0], [40.3, 101.0], [40.4, 101.0], [40.5, 102.0], [40.6, 102.0], [40.7, 102.0], [40.8, 102.0], [40.9, 103.0], [41.0, 103.0], [41.1, 103.0], [41.2, 104.0], [41.3, 104.0], [41.4, 105.0], [41.5, 105.0], [41.6, 106.0], [41.7, 106.0], [41.8, 106.0], [41.9, 107.0], [42.0, 107.0], [42.1, 108.0], [42.2, 108.0], [42.3, 109.0], [42.4, 109.0], [42.5, 110.0], [42.6, 110.0], [42.7, 110.0], [42.8, 111.0], [42.9, 111.0], [43.0, 112.0], [43.1, 112.0], [43.2, 113.0], [43.3, 113.0], [43.4, 114.0], [43.5, 114.0], [43.6, 115.0], [43.7, 115.0], [43.8, 116.0], [43.9, 116.0], [44.0, 117.0], [44.1, 117.0], [44.2, 118.0], [44.3, 118.0], [44.4, 118.0], [44.5, 119.0], [44.6, 119.0], [44.7, 120.0], [44.8, 120.0], [44.9, 120.0], [45.0, 120.0], [45.1, 121.0], [45.2, 122.0], [45.3, 122.0], [45.4, 122.0], [45.5, 123.0], [45.6, 124.0], [45.7, 124.0], [45.8, 124.0], [45.9, 125.0], [46.0, 125.0], [46.1, 126.0], [46.2, 126.0], [46.3, 126.0], [46.4, 127.0], [46.5, 128.0], [46.6, 128.0], [46.7, 129.0], [46.8, 129.0], [46.9, 129.0], [47.0, 130.0], [47.1, 130.0], [47.2, 131.0], [47.3, 131.0], [47.4, 132.0], [47.5, 133.0], [47.6, 133.0], [47.7, 134.0], [47.8, 134.0], [47.9, 135.0], [48.0, 136.0], [48.1, 136.0], [48.2, 137.0], [48.3, 138.0], [48.4, 138.0], [48.5, 139.0], [48.6, 139.0], [48.7, 140.0], [48.8, 140.0], [48.9, 141.0], [49.0, 142.0], [49.1, 143.0], [49.2, 143.0], [49.3, 144.0], [49.4, 145.0], [49.5, 145.0], [49.6, 146.0], [49.7, 146.0], [49.8, 147.0], [49.9, 148.0], [50.0, 149.0], [50.1, 149.0], [50.2, 150.0], [50.3, 150.0], [50.4, 151.0], [50.5, 151.0], [50.6, 152.0], [50.7, 152.0], [50.8, 153.0], [50.9, 153.0], [51.0, 154.0], [51.1, 154.0], [51.2, 155.0], [51.3, 156.0], [51.4, 157.0], [51.5, 157.0], [51.6, 158.0], [51.7, 158.0], [51.8, 159.0], [51.9, 159.0], [52.0, 160.0], [52.1, 161.0], [52.2, 162.0], [52.3, 162.0], [52.4, 163.0], [52.5, 164.0], [52.6, 165.0], [52.7, 165.0], [52.8, 166.0], [52.9, 167.0], [53.0, 168.0], [53.1, 168.0], [53.2, 169.0], [53.3, 169.0], [53.4, 170.0], [53.5, 171.0], [53.6, 172.0], [53.7, 173.0], [53.8, 174.0], [53.9, 175.0], [54.0, 176.0], [54.1, 176.0], [54.2, 177.0], [54.3, 179.0], [54.4, 180.0], [54.5, 180.0], [54.6, 181.0], [54.7, 182.0], [54.8, 183.0], [54.9, 184.0], [55.0, 184.0], [55.1, 186.0], [55.2, 187.0], [55.3, 188.0], [55.4, 188.0], [55.5, 189.0], [55.6, 190.0], [55.7, 191.0], [55.8, 191.0], [55.9, 192.0], [56.0, 193.0], [56.1, 193.0], [56.2, 195.0], [56.3, 195.0], [56.4, 197.0], [56.5, 198.0], [56.6, 199.0], [56.7, 201.0], [56.8, 202.0], [56.9, 202.0], [57.0, 203.0], [57.1, 204.0], [57.2, 205.0], [57.3, 206.0], [57.4, 207.0], [57.5, 209.0], [57.6, 210.0], [57.7, 210.0], [57.8, 212.0], [57.9, 213.0], [58.0, 214.0], [58.1, 215.0], [58.2, 216.0], [58.3, 218.0], [58.4, 218.0], [58.5, 219.0], [58.6, 220.0], [58.7, 221.0], [58.8, 223.0], [58.9, 224.0], [59.0, 225.0], [59.1, 226.0], [59.2, 227.0], [59.3, 229.0], [59.4, 230.0], [59.5, 231.0], [59.6, 232.0], [59.7, 232.0], [59.8, 233.0], [59.9, 234.0], [60.0, 235.0], [60.1, 236.0], [60.2, 237.0], [60.3, 238.0], [60.4, 239.0], [60.5, 240.0], [60.6, 241.0], [60.7, 243.0], [60.8, 244.0], [60.9, 244.0], [61.0, 245.0], [61.1, 247.0], [61.2, 248.0], [61.3, 249.0], [61.4, 250.0], [61.5, 251.0], [61.6, 252.0], [61.7, 254.0], [61.8, 255.0], [61.9, 256.0], [62.0, 256.0], [62.1, 258.0], [62.2, 259.0], [62.3, 260.0], [62.4, 261.0], [62.5, 262.0], [62.6, 264.0], [62.7, 265.0], [62.8, 266.0], [62.9, 267.0], [63.0, 268.0], [63.1, 269.0], [63.2, 271.0], [63.3, 272.0], [63.4, 273.0], [63.5, 274.0], [63.6, 276.0], [63.7, 278.0], [63.8, 279.0], [63.9, 280.0], [64.0, 282.0], [64.1, 284.0], [64.2, 285.0], [64.3, 286.0], [64.4, 286.0], [64.5, 288.0], [64.6, 289.0], [64.7, 291.0], [64.8, 292.0], [64.9, 293.0], [65.0, 294.0], [65.1, 296.0], [65.2, 297.0], [65.3, 298.0], [65.4, 299.0], [65.5, 300.0], [65.6, 302.0], [65.7, 304.0], [65.8, 306.0], [65.9, 307.0], [66.0, 308.0], [66.1, 309.0], [66.2, 311.0], [66.3, 312.0], [66.4, 314.0], [66.5, 315.0], [66.6, 317.0], [66.7, 319.0], [66.8, 320.0], [66.9, 322.0], [67.0, 323.0], [67.1, 324.0], [67.2, 325.0], [67.3, 326.0], [67.4, 328.0], [67.5, 329.0], [67.6, 330.0], [67.7, 332.0], [67.8, 333.0], [67.9, 334.0], [68.0, 335.0], [68.1, 337.0], [68.2, 339.0], [68.3, 340.0], [68.4, 342.0], [68.5, 344.0], [68.6, 345.0], [68.7, 347.0], [68.8, 349.0], [68.9, 351.0], [69.0, 352.0], [69.1, 353.0], [69.2, 354.0], [69.3, 356.0], [69.4, 357.0], [69.5, 359.0], [69.6, 361.0], [69.7, 363.0], [69.8, 364.0], [69.9, 365.0], [70.0, 368.0], [70.1, 369.0], [70.2, 372.0], [70.3, 373.0], [70.4, 375.0], [70.5, 376.0], [70.6, 377.0], [70.7, 379.0], [70.8, 381.0], [70.9, 383.0], [71.0, 384.0], [71.1, 387.0], [71.2, 389.0], [71.3, 390.0], [71.4, 391.0], [71.5, 393.0], [71.6, 395.0], [71.7, 398.0], [71.8, 399.0], [71.9, 402.0], [72.0, 403.0], [72.1, 407.0], [72.2, 410.0], [72.3, 412.0], [72.4, 414.0], [72.5, 418.0], [72.6, 420.0], [72.7, 423.0], [72.8, 425.0], [72.9, 428.0], [73.0, 430.0], [73.1, 432.0], [73.2, 435.0], [73.3, 438.0], [73.4, 440.0], [73.5, 442.0], [73.6, 444.0], [73.7, 447.0], [73.8, 449.0], [73.9, 451.0], [74.0, 454.0], [74.1, 456.0], [74.2, 458.0], [74.3, 461.0], [74.4, 465.0], [74.5, 469.0], [74.6, 472.0], [74.7, 474.0], [74.8, 475.0], [74.9, 477.0], [75.0, 479.0], [75.1, 480.0], [75.2, 482.0], [75.3, 485.0], [75.4, 489.0], [75.5, 493.0], [75.6, 497.0], [75.7, 499.0], [75.8, 502.0], [75.9, 504.0], [76.0, 507.0], [76.1, 512.0], [76.2, 514.0], [76.3, 517.0], [76.4, 520.0], [76.5, 521.0], [76.6, 523.0], [76.7, 525.0], [76.8, 529.0], [76.9, 535.0], [77.0, 537.0], [77.1, 540.0], [77.2, 544.0], [77.3, 546.0], [77.4, 548.0], [77.5, 550.0], [77.6, 556.0], [77.7, 558.0], [77.8, 559.0], [77.9, 562.0], [78.0, 564.0], [78.1, 566.0], [78.2, 568.0], [78.3, 570.0], [78.4, 573.0], [78.5, 575.0], [78.6, 578.0], [78.7, 579.0], [78.8, 581.0], [78.9, 585.0], [79.0, 589.0], [79.1, 593.0], [79.2, 595.0], [79.3, 598.0], [79.4, 602.0], [79.5, 604.0], [79.6, 607.0], [79.7, 615.0], [79.8, 618.0], [79.9, 620.0], [80.0, 624.0], [80.1, 627.0], [80.2, 630.0], [80.3, 633.0], [80.4, 636.0], [80.5, 638.0], [80.6, 643.0], [80.7, 646.0], [80.8, 650.0], [80.9, 652.0], [81.0, 658.0], [81.1, 660.0], [81.2, 664.0], [81.3, 667.0], [81.4, 671.0], [81.5, 675.0], [81.6, 680.0], [81.7, 683.0], [81.8, 688.0], [81.9, 691.0], [82.0, 693.0], [82.1, 696.0], [82.2, 700.0], [82.3, 703.0], [82.4, 710.0], [82.5, 714.0], [82.6, 719.0], [82.7, 723.0], [82.8, 729.0], [82.9, 732.0], [83.0, 735.0], [83.1, 739.0], [83.2, 744.0], [83.3, 748.0], [83.4, 754.0], [83.5, 762.0], [83.6, 767.0], [83.7, 772.0], [83.8, 777.0], [83.9, 782.0], [84.0, 786.0], [84.1, 792.0], [84.2, 796.0], [84.3, 800.0], [84.4, 804.0], [84.5, 808.0], [84.6, 815.0], [84.7, 819.0], [84.8, 824.0], [84.9, 827.0], [85.0, 835.0], [85.1, 838.0], [85.2, 843.0], [85.3, 848.0], [85.4, 853.0], [85.5, 857.0], [85.6, 863.0], [85.7, 866.0], [85.8, 871.0], [85.9, 877.0], [86.0, 881.0], [86.1, 884.0], [86.2, 887.0], [86.3, 896.0], [86.4, 900.0], [86.5, 906.0], [86.6, 912.0], [86.7, 917.0], [86.8, 925.0], [86.9, 928.0], [87.0, 932.0], [87.1, 934.0], [87.2, 939.0], [87.3, 945.0], [87.4, 950.0], [87.5, 953.0], [87.6, 957.0], [87.7, 964.0], [87.8, 972.0], [87.9, 976.0], [88.0, 981.0], [88.1, 986.0], [88.2, 993.0], [88.3, 999.0], [88.4, 1006.0], [88.5, 1010.0], [88.6, 1013.0], [88.7, 1019.0], [88.8, 1023.0], [88.9, 1027.0], [89.0, 1032.0], [89.1, 1036.0], [89.2, 1044.0], [89.3, 1050.0], [89.4, 1058.0], [89.5, 1066.0], [89.6, 1071.0], [89.7, 1077.0], [89.8, 1082.0], [89.9, 1088.0], [90.0, 1097.0], [90.1, 1105.0], [90.2, 1110.0], [90.3, 1116.0], [90.4, 1120.0], [90.5, 1132.0], [90.6, 1138.0], [90.7, 1145.0], [90.8, 1149.0], [90.9, 1156.0], [91.0, 1164.0], [91.1, 1172.0], [91.2, 1180.0], [91.3, 1186.0], [91.4, 1196.0], [91.5, 1200.0], [91.6, 1209.0], [91.7, 1214.0], [91.8, 1221.0], [91.9, 1230.0], [92.0, 1241.0], [92.1, 1253.0], [92.2, 1261.0], [92.3, 1273.0], [92.4, 1282.0], [92.5, 1290.0], [92.6, 1301.0], [92.7, 1306.0], [92.8, 1315.0], [92.9, 1318.0], [93.0, 1327.0], [93.1, 1334.0], [93.2, 1343.0], [93.3, 1351.0], [93.4, 1359.0], [93.5, 1368.0], [93.6, 1377.0], [93.7, 1384.0], [93.8, 1395.0], [93.9, 1405.0], [94.0, 1413.0], [94.1, 1424.0], [94.2, 1433.0], [94.3, 1442.0], [94.4, 1456.0], [94.5, 1473.0], [94.6, 1487.0], [94.7, 1499.0], [94.8, 1511.0], [94.9, 1524.0], [95.0, 1539.0], [95.1, 1557.0], [95.2, 1577.0], [95.3, 1591.0], [95.4, 1609.0], [95.5, 1622.0], [95.6, 1639.0], [95.7, 1649.0], [95.8, 1671.0], [95.9, 1697.0], [96.0, 1714.0], [96.1, 1728.0], [96.2, 1743.0], [96.3, 1762.0], [96.4, 1777.0], [96.5, 1797.0], [96.6, 1832.0], [96.7, 1846.0], [96.8, 1870.0], [96.9, 1883.0], [97.0, 1924.0], [97.1, 1947.0], [97.2, 1969.0], [97.3, 1988.0], [97.4, 2023.0], [97.5, 2036.0], [97.6, 2068.0], [97.7, 2105.0], [97.8, 2129.0], [97.9, 2179.0], [98.0, 2208.0], [98.1, 2240.0], [98.2, 2273.0], [98.3, 2331.0], [98.4, 2380.0], [98.5, 2428.0], [98.6, 2470.0], [98.7, 2494.0], [98.8, 2529.0], [98.9, 2619.0], [99.0, 2678.0], [99.1, 2759.0], [99.2, 2867.0], [99.3, 2990.0], [99.4, 3200.0], [99.5, 3485.0], [99.6, 3704.0], [99.7, 3999.0], [99.8, 4325.0], [99.9, 4790.0], [100.0, 8220.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4240.0, "series": [{"data": [[0.0, 3603.0], [600.0, 189.0], [700.0, 106.0], [800.0, 134.0], [900.0, 83.0], [1000.0, 88.0], [1100.0, 164.0], [1200.0, 77.0], [1300.0, 98.0], [1400.0, 69.0], [1500.0, 59.0], [1600.0, 37.0], [1700.0, 26.0], [1800.0, 45.0], [1900.0, 22.0], [2000.0, 5.0], [2100.0, 10.0], [2200.0, 11.0], [2300.0, 12.0], [2400.0, 8.0], [2500.0, 9.0], [2600.0, 13.0], [2700.0, 11.0], [2800.0, 5.0], [2900.0, 3.0], [3000.0, 3.0], [3100.0, 4.0], [3200.0, 5.0], [3300.0, 2.0], [3400.0, 5.0], [3500.0, 4.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 4.0], [3900.0, 1.0], [4000.0, 1.0], [4200.0, 1.0], [4300.0, 1.0], [4100.0, 2.0], [4500.0, 1.0], [5500.0, 1.0], [6400.0, 1.0], [6600.0, 1.0], [7000.0, 1.0], [7300.0, 1.0], [7400.0, 1.0], [10200.0, 1.0], [10400.0, 1.0], [10900.0, 1.0], [14600.0, 1.0], [100.0, 3390.0], [200.0, 872.0], [300.0, 871.0], [400.0, 398.0], [500.0, 200.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 94.0], [300.0, 1.0], [600.0, 1.0], [200.0, 1.0], [800.0, 1.0], [100.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 94.0], [300.0, 6.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 4240.0], [600.0, 302.0], [700.0, 225.0], [800.0, 222.0], [900.0, 205.0], [1000.0, 181.0], [1100.0, 153.0], [1200.0, 119.0], [1300.0, 133.0], [1400.0, 93.0], [1500.0, 68.0], [1600.0, 60.0], [1700.0, 64.0], [1800.0, 43.0], [1900.0, 43.0], [2000.0, 38.0], [2100.0, 30.0], [2200.0, 33.0], [2300.0, 18.0], [2400.0, 27.0], [2500.0, 21.0], [2600.0, 15.0], [2800.0, 9.0], [2700.0, 10.0], [2900.0, 9.0], [3000.0, 3.0], [3100.0, 7.0], [3200.0, 4.0], [3300.0, 3.0], [3400.0, 4.0], [3500.0, 8.0], [3700.0, 5.0], [3600.0, 2.0], [3800.0, 3.0], [3900.0, 4.0], [4000.0, 1.0], [4300.0, 3.0], [4200.0, 3.0], [4100.0, 5.0], [4500.0, 2.0], [4400.0, 3.0], [4700.0, 4.0], [5100.0, 1.0], [4900.0, 3.0], [5800.0, 1.0], [6200.0, 1.0], [6500.0, 1.0], [6800.0, 1.0], [7100.0, 1.0], [8200.0, 1.0], [100.0, 1770.0], [200.0, 936.0], [300.0, 680.0], [400.0, 415.0], [500.0, 382.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 884.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 17378.0, "series": [{"data": [[0.0, 17378.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3221.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 884.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 32.9047619047618, "minX": 1.61727198E12, "maxY": 88.16785969935577, "series": [{"data": [[1.6172721E12, 32.9047619047618], [1.61727198E12, 42.48567488892286], [1.61727204E12, 88.16785969935577]], "isOverall": false, "label": "jp@gc - Stepping Thread Group (deprecated)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6172721E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 1158.3333333333333, "series": [{"data": [[2.0, 64.0], [3.0, 54.0], [4.0, 74.0], [5.0, 47.0], [8.0, 64.0], [10.0, 78.54114713216951], [12.0, 70.13333333333334], [13.0, 46.0], [14.0, 153.30769230769232], [15.0, 49.0], [16.0, 56.0], [18.0, 1158.3333333333333], [19.0, 1074.0], [20.0, 152.3677621283256], [21.0, 116.91666666666667], [22.0, 194.25], [23.0, 100.35000000000001], [24.0, 98.72727272727273], [25.0, 170.72944297082248], [26.0, 128.23076923076923], [27.0, 116.28358208955223], [28.0, 109.18750000000001], [29.0, 134.0], [30.0, 180.46153846153848], [31.0, 147.54999999999998], [32.0, 170.75000000000003], [33.0, 181.55555555555554], [34.0, 170.21052631578945], [35.0, 199.90909090909088], [36.0, 294.0], [37.0, 165.92857142857144], [38.0, 173.81249999999994], [39.0, 170.14285714285717], [40.0, 197.58741830065344], [41.0, 209.52090032154348], [42.0, 235.48], [43.0, 97.97058823529412], [44.0, 252.96428571428575], [45.0, 163.04545454545453], [46.0, 197.5454545454545], [47.0, 240.5], [48.0, 181.23076923076923], [49.0, 173.14285714285714], [50.0, 248.83333333333334], [51.0, 97.84000000000002], [52.0, 172.28571428571425], [53.0, 207.11764705882354], [54.0, 264.99999999999994], [55.0, 211.8303249097471], [56.0, 241.80281690140845], [57.0, 241.58823529411762], [58.0, 145.55737704918027], [59.0, 187.50000000000006], [60.0, 273.66039823008845], [61.0, 332.53846153846155], [62.0, 258.1176470588236], [63.0, 371.49999999999994], [64.0, 166.40909090909088], [65.0, 226.6956521739131], [66.0, 145.5], [67.0, 131.0769230769231], [68.0, 292.2352941176471], [69.0, 304.1818181818182], [70.0, 275.62637362637355], [71.0, 368.8181818181816], [72.0, 668.8888888888889], [73.0, 279.2631578947369], [74.0, 357.1923076923077], [75.0, 605.8181818181818], [76.0, 525.3076923076924], [77.0, 620.9375], [78.0, 984.7619047619046], [79.0, 577.75], [80.0, 306.10993249758957], [81.0, 624.1818181818181], [82.0, 523.4375], [83.0, 884.6666666666666], [84.0, 835.4444444444442], [85.0, 530.2684563758392], [86.0, 518.4736842105261], [87.0, 285.20000000000005], [88.0, 231.31249999999997], [89.0, 272.29999999999995], [90.0, 304.923076923077], [91.0, 248.42857142857144], [92.0, 180.5277777777778], [93.0, 264.2272727272727], [94.0, 141.2173913043478], [95.0, 207.36666666666667], [96.0, 367.8181818181819], [97.0, 151.0], [98.0, 566.5500000000002], [99.0, 318.5925925925926], [100.0, 485.91206313415927], [1.0, 1057.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[64.65410220346925, 307.4569151429912]], "isOverall": false, "label": "VNE-GET-bongda-Aggregated", "isController": false}, {"data": [[6.0, 448.3333333333333], [7.0, 133.0], [8.0, 1.0], [9.0, 1.0], [10.0, 3.0], [11.0, 1.0], [12.0, 1.0], [13.0, 2.0], [14.0, 1.0], [15.0, 1.0], [16.0, 1.0], [17.0, 0.0], [18.0, 1.0], [19.0, 1.0], [20.0, 2.0], [21.0, 1.0], [22.0, 1.0], [23.0, 0.0], [24.0, 1.0], [25.0, 1.0], [26.0, 1.0], [27.0, 2.0], [28.0, 1.0], [29.0, 2.0], [30.0, 1.0], [31.0, 1.0], [32.0, 0.0], [33.0, 0.0], [34.0, 0.0], [35.0, 1.0], [36.0, 1.0], [37.0, 2.0], [38.0, 33.0], [39.0, 1.0], [40.0, 0.0], [41.0, 3.0], [42.0, 3.0], [43.0, 1.0], [44.0, 1.0], [45.0, 1.0], [46.0, 0.0], [47.0, 1.0], [48.0, 2.0], [49.0, 0.0], [50.0, 1.0], [51.0, 0.0], [52.0, 0.0], [53.0, 1.0], [54.0, 1.0], [55.0, 1.0], [56.0, 0.0], [57.0, 0.0], [58.0, 0.0], [59.0, 0.0], [60.0, 1.0], [61.0, 1.0], [62.0, 1.0], [63.0, 6.0], [64.0, 3.0], [65.0, 0.0], [66.0, 0.0], [67.0, 1.0], [68.0, 0.0], [69.0, 1.0], [70.0, 3.0], [71.0, 0.0], [72.0, 1.0], [73.0, 1.0], [74.0, 1.0], [75.0, 1.0], [76.0, 0.0], [77.0, 0.0], [78.0, 0.0], [79.0, 0.0], [80.0, 1.0], [81.0, 1.0], [82.0, 1.0], [83.0, 1.0], [84.0, 0.0], [85.0, 0.0], [86.0, 0.0], [87.0, 1.0], [88.0, 5.0], [89.0, 1.0], [90.0, 3.0], [91.0, 1.0], [92.0, 1.0], [93.0, 1.0], [94.0, 0.0], [95.0, 1.0], [96.0, 0.0], [97.0, 0.0], [98.0, 1.0], [99.0, 0.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[50.64999999999999, 29.449999999999992]], "isOverall": false, "label": "PROF - VNE - Test 01-Aggregated", "isController": false}, {"data": [[8.0, 252.25], [9.0, 1.0], [10.0, 3.0], [11.0, 1.0], [12.0, 1.0], [13.0, 6.0], [14.0, 2.0], [15.0, 1.0], [16.0, 1.0], [17.0, 3.0], [18.0, 4.0], [19.0, 1.0], [20.0, 3.0], [21.0, 2.0], [22.0, 2.0], [23.0, 1.0], [24.0, 0.0], [25.0, 1.0], [26.0, 1.0], [27.0, 0.0], [28.0, 2.0], [29.0, 3.0], [30.0, 1.0], [31.0, 0.0], [32.0, 1.0], [33.0, 1.0], [34.0, 1.0], [35.0, 1.0], [36.0, 1.0], [37.0, 1.0], [38.0, 1.0], [39.0, 1.0], [40.0, 0.0], [41.0, 1.0], [42.0, 1.0], [43.0, 0.0], [44.0, 0.0], [45.0, 4.0], [46.0, 0.0], [47.0, 0.0], [48.0, 1.0], [49.0, 1.0], [50.0, 1.0], [51.0, 1.0], [52.0, 1.0], [53.0, 0.0], [54.0, 1.0], [55.0, 1.0], [56.0, 1.0], [57.0, 0.0], [58.0, 1.0], [59.0, 0.0], [60.0, 1.0], [61.0, 0.0], [62.0, 4.0], [63.0, 5.0], [64.0, 3.0], [65.0, 0.0], [66.0, 1.0], [67.0, 7.0], [68.0, 1.0], [69.0, 1.0], [70.0, 1.0], [71.0, 0.0], [72.0, 1.0], [73.0, 0.0], [74.0, 0.0], [75.0, 0.0], [76.0, 1.0], [77.0, 1.0], [78.0, 1.0], [79.0, 1.0], [80.0, 6.0], [81.0, 0.0], [82.0, 0.0], [83.0, 0.0], [84.0, 3.0], [85.0, 0.0], [86.0, 0.0], [87.0, 0.0], [88.0, 2.0], [89.0, 1.0], [90.0, 1.0], [91.0, 0.0], [92.0, 0.0], [93.0, 0.0], [94.0, 2.0], [95.0, 0.0], [96.0, 1.0], [97.0, 0.0], [98.0, 1.0], [99.0, 0.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[50.78, 21.27]], "isOverall": false, "label": "PROF - VNE - Random main action-Aggregated", "isController": false}, {"data": [[6.0, 31.0], [7.0, 45.0], [9.0, 47.0], [10.0, 53.0], [11.0, 362.66666666666663], [12.0, 135.66666666666666], [13.0, 386.25], [14.0, 80.23076923076923], [15.0, 201.5], [16.0, 307.0], [17.0, 312.5], [18.0, 316.6666666666667], [19.0, 331.5], [20.0, 161.29721362229097], [21.0, 91.3076923076923], [22.0, 131.1818181818182], [23.0, 108.10526315789474], [24.0, 79.23076923076924], [25.0, 189.72799999999995], [26.0, 208.5925925925926], [27.0, 154.95], [28.0, 186.13333333333333], [29.0, 261.1428571428571], [30.0, 226.20000000000002], [31.0, 271.9375], [32.0, 284.71428571428567], [33.0, 289.8666666666667], [34.0, 280.3125], [35.0, 196.53846153846155], [36.0, 270.00000000000006], [37.0, 147.56250000000003], [38.0, 204.6875], [39.0, 120.5625], [40.0, 211.3499170812604], [41.0, 157.9935691318327], [42.0, 215.79999999999998], [43.0, 156.4137931034483], [44.0, 231.58823529411765], [45.0, 144.55555555555557], [46.0, 127.4], [47.0, 219.44444444444446], [48.0, 218.58620689655174], [49.0, 191.78947368421052], [50.0, 159.09375], [51.0, 196.44], [52.0, 359.7692307692308], [53.0, 287.8888888888889], [54.0, 309.1764705882353], [55.0, 257.7602862254025], [56.0, 206.04477611940297], [57.0, 346.0555555555556], [58.0, 438.5223880597015], [59.0, 385.7058823529412], [60.0, 391.64150943396214], [61.0, 725.2272727272726], [62.0, 221.03448275862067], [63.0, 355.64705882352945], [64.0, 231.41666666666666], [65.0, 388.94117647058823], [66.0, 431.36363636363626], [67.0, 240.09090909090907], [68.0, 202.07142857142856], [69.0, 622.9000000000001], [70.0, 428.65232974910407], [71.0, 285.1372549019607], [72.0, 654.1666666666667], [73.0, 262.78571428571433], [74.0, 278.7916666666667], [75.0, 206.8], [76.0, 304.84210526315786], [77.0, 483.6470588235294], [78.0, 325.5], [79.0, 681.8], [80.0, 482.551428571429], [81.0, 638.875], [82.0, 649.090909090909], [83.0, 962.2666666666665], [84.0, 564.2727272727274], [85.0, 562.8957055214723], [86.0, 944.2727272727273], [87.0, 576.1999999999999], [88.0, 447.7272727272727], [89.0, 466.51219512195127], [90.0, 428.81081081081084], [91.0, 613.5909090909092], [92.0, 499.53191489361706], [93.0, 688.3076923076923], [94.0, 245.0], [95.0, 583.3214285714286], [96.0, 560.0833333333334], [97.0, 640.125], [98.0, 393.0], [99.0, 402.50000000000006], [100.0, 654.3207118515706]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}, {"data": [[64.73620267470338, 395.63288754944426]], "isOverall": false, "label": "VNE-GET-quansu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 28046.85, "minX": 1.61727198E12, "maxY": 1.9020494166666668E7, "series": [{"data": [[1.6172721E12, 6482415.833333333], [1.61727198E12, 1.09045186E7], [1.61727204E12, 1.9020494166666668E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6172721E12, 28046.85], [1.61727198E12, 47580.9], [1.61727204E12, 82552.45]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6172721E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.7499999999999999, "minX": 1.61727198E12, "maxY": 551.1614705352329, "series": [{"data": [[1.6172721E12, 176.55325914149455], [1.61727198E12, 210.46407465007758], [1.61727204E12, 407.9147941758041]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727198E12, 42.91176470588236], [1.61727204E12, 0.84375]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727198E12, 30.926470588235286], [1.61727204E12, 0.7499999999999999]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.6172721E12, 169.15161119915464], [1.61727198E12, 258.8888539042827], [1.61727204E12, 551.1614705352329]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6172721E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61727198E12, "maxY": 283.57972317095084, "series": [{"data": [[1.6172721E12, 143.96396396396423], [1.61727198E12, 153.8286158631416], [1.61727204E12, 283.57972317095084]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727198E12, 0.0], [1.61727204E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727198E12, 0.0], [1.61727204E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.6172721E12, 28.615953512942415], [1.61727198E12, 31.51290931989922], [1.61727204E12, 54.0756893133897]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6172721E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61727198E12, "maxY": 214.5664209958654, "series": [{"data": [[1.6172721E12, 98.84631690514036], [1.61727198E12, 105.86687402799386], [1.61727204E12, 214.5664209958654]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727198E12, 0.0], [1.61727204E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727198E12, 0.0], [1.61727204E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.6172721E12, 0.0], [1.61727198E12, 0.0], [1.61727204E12, 0.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6172721E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61727198E12, "maxY": 14686.0, "series": [{"data": [[1.6172721E12, 10231.0], [1.61727198E12, 4553.0], [1.61727204E12, 14686.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6172721E12, 363.0], [1.61727198E12, 520.1999999999998], [1.61727204E12, 1301.300000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6172721E12, 1309.0900000000006], [1.61727198E12, 1473.880000000001], [1.61727204E12, 3005.3799999999974]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6172721E12, 581.9499999999998], [1.61727198E12, 822.5999999999995], [1.61727204E12, 1756.2999999999993]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6172721E12, 27.0], [1.61727198E12, 0.0], [1.61727204E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6172721E12, 76.0], [1.61727198E12, 124.0], [1.61727204E12, 179.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6172721E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 8.0, "maxY": 1335.5, "series": [{"data": [[8.0, 299.0], [20.0, 3.0], [35.0, 351.0], [54.0, 1335.5], [65.0, 301.0], [69.0, 1021.0], [75.0, 279.0], [76.0, 560.0], [79.0, 699.0], [82.0, 758.5], [95.0, 195.0], [93.0, 288.0], [97.0, 602.0], [104.0, 172.0], [110.0, 404.5], [113.0, 1083.0], [116.0, 338.5], [118.0, 1128.5], [123.0, 143.0], [122.0, 52.5], [125.0, 106.0], [124.0, 69.5], [143.0, 91.0], [139.0, 83.5], [136.0, 63.0], [148.0, 358.5], [145.0, 105.0], [146.0, 310.0], [150.0, 325.0], [151.0, 65.0], [154.0, 181.5], [159.0, 51.0], [161.0, 152.0], [162.0, 342.5], [160.0, 312.5], [164.0, 73.0], [173.0, 83.0], [174.0, 148.0], [171.0, 103.0], [168.0, 127.5], [169.0, 311.0], [172.0, 193.5], [178.0, 104.5], [183.0, 94.0], [181.0, 233.5], [176.0, 124.5], [177.0, 399.0], [190.0, 156.5], [184.0, 156.0], [186.0, 120.0], [195.0, 82.5], [196.0, 156.5], [199.0, 171.0], [203.0, 158.0], [202.0, 217.5], [205.0, 126.0], [211.0, 126.0], [215.0, 77.0], [214.0, 113.5], [209.0, 179.0], [212.0, 138.0], [222.0, 94.0], [219.0, 159.0], [218.0, 139.0], [221.0, 111.0], [220.0, 119.0], [227.0, 142.0], [230.0, 84.0], [231.0, 123.5], [228.0, 125.5], [226.0, 148.0], [229.0, 95.0], [224.0, 77.0], [232.0, 132.5], [233.0, 149.0], [240.0, 98.5], [241.0, 146.0], [243.0, 104.0], [250.0, 138.0], [251.0, 122.0], [255.0, 104.0], [262.0, 115.5], [283.0, 189.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 283.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 8.0, "maxY": 681.0, "series": [{"data": [[8.0, 0.0], [20.0, 0.0], [35.0, 225.0], [54.0, 681.0], [65.0, 91.0], [69.0, 192.0], [75.0, 80.0], [76.0, 130.5], [79.0, 299.0], [82.0, 107.0], [95.0, 72.0], [93.0, 82.0], [97.0, 81.0], [104.0, 63.0], [110.0, 74.5], [113.0, 152.0], [116.0, 87.0], [118.0, 201.0], [123.0, 75.0], [122.0, 41.5], [125.0, 51.0], [124.0, 48.0], [143.0, 35.0], [139.0, 44.0], [136.0, 42.5], [148.0, 97.5], [145.0, 43.0], [146.0, 56.5], [150.0, 59.5], [151.0, 43.0], [154.0, 52.5], [159.0, 41.0], [161.0, 44.0], [162.0, 64.5], [160.0, 57.0], [164.0, 43.0], [173.0, 46.0], [174.0, 58.5], [171.0, 57.0], [168.0, 59.0], [169.0, 110.0], [172.0, 59.5], [178.0, 55.5], [183.0, 50.0], [181.0, 64.5], [176.0, 46.5], [177.0, 61.0], [190.0, 67.5], [184.0, 49.5], [186.0, 56.0], [195.0, 43.0], [196.0, 60.5], [199.0, 76.0], [203.0, 60.0], [202.0, 63.5], [205.0, 48.0], [211.0, 60.0], [215.0, 45.0], [214.0, 46.0], [209.0, 49.0], [212.0, 59.5], [222.0, 48.0], [219.0, 64.0], [218.0, 71.0], [221.0, 48.0], [220.0, 56.0], [227.0, 69.0], [230.0, 48.5], [231.0, 47.0], [228.0, 51.0], [226.0, 66.5], [229.0, 57.0], [224.0, 44.0], [232.0, 62.5], [233.0, 60.0], [240.0, 49.0], [241.0, 63.0], [243.0, 53.0], [250.0, 61.5], [251.0, 68.0], [255.0, 49.0], [262.0, 53.0], [283.0, 76.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 283.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 62.083333333333336, "minX": 1.61727198E12, "maxY": 186.05, "series": [{"data": [[1.6172721E12, 62.083333333333336], [1.61727198E12, 109.91666666666667], [1.61727204E12, 186.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6172721E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 63.0, "minX": 1.61727198E12, "maxY": 186.26666666666668, "series": [{"data": [[1.6172721E12, 63.0], [1.61727198E12, 108.78333333333333], [1.61727204E12, 186.26666666666668]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6172721E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5333333333333333, "minX": 1.61727198E12, "maxY": 92.71666666666667, "series": [{"data": [[1.61727198E12, 1.1333333333333333], [1.61727204E12, 0.5333333333333333]], "isOverall": false, "label": "PROF - VNE - Random main action-success", "isController": false}, {"data": [[1.6172721E12, 31.55], [1.61727198E12, 52.93333333333333], [1.61727204E12, 92.48333333333333]], "isOverall": false, "label": "VNE-GET-quansu-success", "isController": false}, {"data": [[1.61727198E12, 1.1333333333333333], [1.61727204E12, 0.5333333333333333]], "isOverall": false, "label": "PROF - VNE - Test 01-success", "isController": false}, {"data": [[1.6172721E12, 31.45], [1.61727198E12, 53.583333333333336], [1.61727204E12, 92.71666666666667]], "isOverall": false, "label": "VNE-GET-bongda-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6172721E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 63.0, "minX": 1.61727198E12, "maxY": 186.26666666666668, "series": [{"data": [[1.6172721E12, 63.0], [1.61727198E12, 108.78333333333333], [1.61727204E12, 186.26666666666668]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6172721E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

