/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 22379.0, "series": [{"data": [[0.0, 45.0], [0.1, 47.0], [0.2, 48.0], [0.3, 50.0], [0.4, 51.0], [0.5, 52.0], [0.6, 53.0], [0.7, 55.0], [0.8, 56.0], [0.9, 57.0], [1.0, 58.0], [1.1, 60.0], [1.2, 61.0], [1.3, 62.0], [1.4, 63.0], [1.5, 64.0], [1.6, 64.0], [1.7, 65.0], [1.8, 66.0], [1.9, 66.0], [2.0, 67.0], [2.1, 68.0], [2.2, 68.0], [2.3, 69.0], [2.4, 70.0], [2.5, 70.0], [2.6, 71.0], [2.7, 71.0], [2.8, 71.0], [2.9, 72.0], [3.0, 72.0], [3.1, 73.0], [3.2, 73.0], [3.3, 74.0], [3.4, 74.0], [3.5, 75.0], [3.6, 75.0], [3.7, 75.0], [3.8, 76.0], [3.9, 76.0], [4.0, 76.0], [4.1, 77.0], [4.2, 77.0], [4.3, 77.0], [4.4, 78.0], [4.5, 78.0], [4.6, 78.0], [4.7, 79.0], [4.8, 79.0], [4.9, 79.0], [5.0, 80.0], [5.1, 80.0], [5.2, 80.0], [5.3, 80.0], [5.4, 81.0], [5.5, 81.0], [5.6, 81.0], [5.7, 82.0], [5.8, 82.0], [5.9, 82.0], [6.0, 82.0], [6.1, 83.0], [6.2, 83.0], [6.3, 83.0], [6.4, 83.0], [6.5, 84.0], [6.6, 84.0], [6.7, 84.0], [6.8, 84.0], [6.9, 85.0], [7.0, 85.0], [7.1, 85.0], [7.2, 85.0], [7.3, 86.0], [7.4, 86.0], [7.5, 86.0], [7.6, 86.0], [7.7, 87.0], [7.8, 87.0], [7.9, 87.0], [8.0, 87.0], [8.1, 87.0], [8.2, 88.0], [8.3, 88.0], [8.4, 88.0], [8.5, 88.0], [8.6, 89.0], [8.7, 89.0], [8.8, 89.0], [8.9, 90.0], [9.0, 90.0], [9.1, 90.0], [9.2, 91.0], [9.3, 91.0], [9.4, 91.0], [9.5, 91.0], [9.6, 92.0], [9.7, 92.0], [9.8, 92.0], [9.9, 92.0], [10.0, 93.0], [10.1, 93.0], [10.2, 93.0], [10.3, 93.0], [10.4, 94.0], [10.5, 94.0], [10.6, 95.0], [10.7, 95.0], [10.8, 95.0], [10.9, 95.0], [11.0, 96.0], [11.1, 96.0], [11.2, 96.0], [11.3, 97.0], [11.4, 97.0], [11.5, 97.0], [11.6, 97.0], [11.7, 97.0], [11.8, 98.0], [11.9, 98.0], [12.0, 99.0], [12.1, 99.0], [12.2, 99.0], [12.3, 99.0], [12.4, 100.0], [12.5, 100.0], [12.6, 100.0], [12.7, 100.0], [12.8, 101.0], [12.9, 101.0], [13.0, 101.0], [13.1, 102.0], [13.2, 102.0], [13.3, 102.0], [13.4, 102.0], [13.5, 103.0], [13.6, 103.0], [13.7, 104.0], [13.8, 104.0], [13.9, 104.0], [14.0, 104.0], [14.1, 105.0], [14.2, 105.0], [14.3, 105.0], [14.4, 106.0], [14.5, 106.0], [14.6, 106.0], [14.7, 106.0], [14.8, 107.0], [14.9, 107.0], [15.0, 108.0], [15.1, 108.0], [15.2, 108.0], [15.3, 109.0], [15.4, 109.0], [15.5, 109.0], [15.6, 110.0], [15.7, 110.0], [15.8, 111.0], [15.9, 111.0], [16.0, 112.0], [16.1, 112.0], [16.2, 112.0], [16.3, 113.0], [16.4, 113.0], [16.5, 114.0], [16.6, 114.0], [16.7, 114.0], [16.8, 115.0], [16.9, 115.0], [17.0, 115.0], [17.1, 116.0], [17.2, 116.0], [17.3, 116.0], [17.4, 117.0], [17.5, 117.0], [17.6, 118.0], [17.7, 118.0], [17.8, 118.0], [17.9, 119.0], [18.0, 119.0], [18.1, 119.0], [18.2, 120.0], [18.3, 120.0], [18.4, 120.0], [18.5, 120.0], [18.6, 121.0], [18.7, 121.0], [18.8, 121.0], [18.9, 122.0], [19.0, 122.0], [19.1, 122.0], [19.2, 123.0], [19.3, 123.0], [19.4, 123.0], [19.5, 124.0], [19.6, 124.0], [19.7, 125.0], [19.8, 125.0], [19.9, 125.0], [20.0, 125.0], [20.1, 126.0], [20.2, 126.0], [20.3, 127.0], [20.4, 127.0], [20.5, 127.0], [20.6, 128.0], [20.7, 128.0], [20.8, 128.0], [20.9, 129.0], [21.0, 129.0], [21.1, 130.0], [21.2, 130.0], [21.3, 131.0], [21.4, 131.0], [21.5, 131.0], [21.6, 132.0], [21.7, 132.0], [21.8, 133.0], [21.9, 133.0], [22.0, 133.0], [22.1, 134.0], [22.2, 134.0], [22.3, 134.0], [22.4, 135.0], [22.5, 135.0], [22.6, 135.0], [22.7, 136.0], [22.8, 136.0], [22.9, 136.0], [23.0, 137.0], [23.1, 137.0], [23.2, 138.0], [23.3, 138.0], [23.4, 138.0], [23.5, 139.0], [23.6, 140.0], [23.7, 140.0], [23.8, 141.0], [23.9, 141.0], [24.0, 142.0], [24.1, 142.0], [24.2, 143.0], [24.3, 143.0], [24.4, 144.0], [24.5, 144.0], [24.6, 144.0], [24.7, 145.0], [24.8, 145.0], [24.9, 145.0], [25.0, 146.0], [25.1, 146.0], [25.2, 146.0], [25.3, 147.0], [25.4, 147.0], [25.5, 147.0], [25.6, 147.0], [25.7, 148.0], [25.8, 148.0], [25.9, 149.0], [26.0, 149.0], [26.1, 150.0], [26.2, 150.0], [26.3, 151.0], [26.4, 151.0], [26.5, 151.0], [26.6, 152.0], [26.7, 152.0], [26.8, 153.0], [26.9, 153.0], [27.0, 154.0], [27.1, 155.0], [27.2, 155.0], [27.3, 155.0], [27.4, 156.0], [27.5, 156.0], [27.6, 157.0], [27.7, 157.0], [27.8, 158.0], [27.9, 158.0], [28.0, 159.0], [28.1, 159.0], [28.2, 160.0], [28.3, 161.0], [28.4, 161.0], [28.5, 162.0], [28.6, 162.0], [28.7, 163.0], [28.8, 164.0], [28.9, 164.0], [29.0, 165.0], [29.1, 166.0], [29.2, 166.0], [29.3, 167.0], [29.4, 167.0], [29.5, 168.0], [29.6, 168.0], [29.7, 169.0], [29.8, 169.0], [29.9, 170.0], [30.0, 170.0], [30.1, 171.0], [30.2, 172.0], [30.3, 172.0], [30.4, 173.0], [30.5, 173.0], [30.6, 174.0], [30.7, 174.0], [30.8, 175.0], [30.9, 175.0], [31.0, 176.0], [31.1, 177.0], [31.2, 177.0], [31.3, 178.0], [31.4, 178.0], [31.5, 179.0], [31.6, 180.0], [31.7, 181.0], [31.8, 181.0], [31.9, 182.0], [32.0, 182.0], [32.1, 184.0], [32.2, 185.0], [32.3, 186.0], [32.4, 187.0], [32.5, 187.0], [32.6, 188.0], [32.7, 188.0], [32.8, 189.0], [32.9, 190.0], [33.0, 190.0], [33.1, 191.0], [33.2, 193.0], [33.3, 194.0], [33.4, 195.0], [33.5, 196.0], [33.6, 197.0], [33.7, 197.0], [33.8, 198.0], [33.9, 199.0], [34.0, 200.0], [34.1, 200.0], [34.2, 201.0], [34.3, 202.0], [34.4, 203.0], [34.5, 204.0], [34.6, 204.0], [34.7, 205.0], [34.8, 206.0], [34.9, 207.0], [35.0, 208.0], [35.1, 209.0], [35.2, 210.0], [35.3, 211.0], [35.4, 212.0], [35.5, 212.0], [35.6, 213.0], [35.7, 214.0], [35.8, 214.0], [35.9, 215.0], [36.0, 216.0], [36.1, 217.0], [36.2, 217.0], [36.3, 218.0], [36.4, 219.0], [36.5, 219.0], [36.6, 220.0], [36.7, 220.0], [36.8, 221.0], [36.9, 222.0], [37.0, 223.0], [37.1, 224.0], [37.2, 225.0], [37.3, 225.0], [37.4, 226.0], [37.5, 227.0], [37.6, 228.0], [37.7, 228.0], [37.8, 229.0], [37.9, 230.0], [38.0, 230.0], [38.1, 231.0], [38.2, 231.0], [38.3, 232.0], [38.4, 232.0], [38.5, 233.0], [38.6, 234.0], [38.7, 234.0], [38.8, 235.0], [38.9, 237.0], [39.0, 238.0], [39.1, 239.0], [39.2, 239.0], [39.3, 240.0], [39.4, 241.0], [39.5, 241.0], [39.6, 242.0], [39.7, 242.0], [39.8, 243.0], [39.9, 243.0], [40.0, 244.0], [40.1, 245.0], [40.2, 245.0], [40.3, 246.0], [40.4, 247.0], [40.5, 248.0], [40.6, 249.0], [40.7, 250.0], [40.8, 251.0], [40.9, 251.0], [41.0, 252.0], [41.1, 253.0], [41.2, 254.0], [41.3, 255.0], [41.4, 256.0], [41.5, 256.0], [41.6, 257.0], [41.7, 258.0], [41.8, 260.0], [41.9, 261.0], [42.0, 262.0], [42.1, 262.0], [42.2, 263.0], [42.3, 264.0], [42.4, 265.0], [42.5, 266.0], [42.6, 266.0], [42.7, 267.0], [42.8, 267.0], [42.9, 268.0], [43.0, 269.0], [43.1, 270.0], [43.2, 271.0], [43.3, 271.0], [43.4, 272.0], [43.5, 273.0], [43.6, 274.0], [43.7, 276.0], [43.8, 277.0], [43.9, 277.0], [44.0, 278.0], [44.1, 278.0], [44.2, 279.0], [44.3, 279.0], [44.4, 280.0], [44.5, 281.0], [44.6, 282.0], [44.7, 282.0], [44.8, 283.0], [44.9, 284.0], [45.0, 286.0], [45.1, 287.0], [45.2, 288.0], [45.3, 289.0], [45.4, 289.0], [45.5, 290.0], [45.6, 291.0], [45.7, 291.0], [45.8, 292.0], [45.9, 294.0], [46.0, 295.0], [46.1, 295.0], [46.2, 297.0], [46.3, 297.0], [46.4, 298.0], [46.5, 299.0], [46.6, 300.0], [46.7, 300.0], [46.8, 301.0], [46.9, 302.0], [47.0, 303.0], [47.1, 304.0], [47.2, 304.0], [47.3, 304.0], [47.4, 305.0], [47.5, 306.0], [47.6, 307.0], [47.7, 307.0], [47.8, 308.0], [47.9, 309.0], [48.0, 310.0], [48.1, 310.0], [48.2, 311.0], [48.3, 311.0], [48.4, 312.0], [48.5, 312.0], [48.6, 313.0], [48.7, 313.0], [48.8, 314.0], [48.9, 314.0], [49.0, 315.0], [49.1, 315.0], [49.2, 316.0], [49.3, 317.0], [49.4, 318.0], [49.5, 320.0], [49.6, 320.0], [49.7, 321.0], [49.8, 321.0], [49.9, 321.0], [50.0, 322.0], [50.1, 323.0], [50.2, 323.0], [50.3, 324.0], [50.4, 325.0], [50.5, 326.0], [50.6, 326.0], [50.7, 327.0], [50.8, 327.0], [50.9, 328.0], [51.0, 328.0], [51.1, 329.0], [51.2, 329.0], [51.3, 330.0], [51.4, 330.0], [51.5, 331.0], [51.6, 331.0], [51.7, 332.0], [51.8, 333.0], [51.9, 334.0], [52.0, 334.0], [52.1, 335.0], [52.2, 336.0], [52.3, 336.0], [52.4, 337.0], [52.5, 338.0], [52.6, 339.0], [52.7, 339.0], [52.8, 340.0], [52.9, 341.0], [53.0, 341.0], [53.1, 342.0], [53.2, 343.0], [53.3, 343.0], [53.4, 344.0], [53.5, 345.0], [53.6, 345.0], [53.7, 346.0], [53.8, 346.0], [53.9, 348.0], [54.0, 348.0], [54.1, 350.0], [54.2, 351.0], [54.3, 352.0], [54.4, 353.0], [54.5, 354.0], [54.6, 355.0], [54.7, 356.0], [54.8, 356.0], [54.9, 357.0], [55.0, 358.0], [55.1, 358.0], [55.2, 360.0], [55.3, 360.0], [55.4, 360.0], [55.5, 362.0], [55.6, 362.0], [55.7, 363.0], [55.8, 364.0], [55.9, 365.0], [56.0, 366.0], [56.1, 367.0], [56.2, 368.0], [56.3, 369.0], [56.4, 370.0], [56.5, 371.0], [56.6, 372.0], [56.7, 373.0], [56.8, 373.0], [56.9, 374.0], [57.0, 375.0], [57.1, 377.0], [57.2, 377.0], [57.3, 378.0], [57.4, 379.0], [57.5, 380.0], [57.6, 381.0], [57.7, 383.0], [57.8, 384.0], [57.9, 385.0], [58.0, 387.0], [58.1, 389.0], [58.2, 390.0], [58.3, 391.0], [58.4, 392.0], [58.5, 393.0], [58.6, 394.0], [58.7, 395.0], [58.8, 396.0], [58.9, 398.0], [59.0, 400.0], [59.1, 402.0], [59.2, 403.0], [59.3, 404.0], [59.4, 405.0], [59.5, 407.0], [59.6, 408.0], [59.7, 409.0], [59.8, 411.0], [59.9, 412.0], [60.0, 413.0], [60.1, 414.0], [60.2, 416.0], [60.3, 417.0], [60.4, 419.0], [60.5, 420.0], [60.6, 422.0], [60.7, 422.0], [60.8, 423.0], [60.9, 424.0], [61.0, 425.0], [61.1, 427.0], [61.2, 428.0], [61.3, 430.0], [61.4, 431.0], [61.5, 433.0], [61.6, 434.0], [61.7, 435.0], [61.8, 436.0], [61.9, 437.0], [62.0, 439.0], [62.1, 440.0], [62.2, 441.0], [62.3, 443.0], [62.4, 444.0], [62.5, 445.0], [62.6, 446.0], [62.7, 448.0], [62.8, 450.0], [62.9, 452.0], [63.0, 453.0], [63.1, 456.0], [63.2, 456.0], [63.3, 458.0], [63.4, 461.0], [63.5, 462.0], [63.6, 463.0], [63.7, 465.0], [63.8, 466.0], [63.9, 467.0], [64.0, 470.0], [64.1, 473.0], [64.2, 475.0], [64.3, 476.0], [64.4, 477.0], [64.5, 479.0], [64.6, 481.0], [64.7, 482.0], [64.8, 484.0], [64.9, 485.0], [65.0, 486.0], [65.1, 488.0], [65.2, 491.0], [65.3, 492.0], [65.4, 494.0], [65.5, 497.0], [65.6, 498.0], [65.7, 500.0], [65.8, 502.0], [65.9, 503.0], [66.0, 505.0], [66.1, 509.0], [66.2, 512.0], [66.3, 513.0], [66.4, 515.0], [66.5, 516.0], [66.6, 520.0], [66.7, 521.0], [66.8, 522.0], [66.9, 523.0], [67.0, 524.0], [67.1, 526.0], [67.2, 528.0], [67.3, 529.0], [67.4, 530.0], [67.5, 531.0], [67.6, 534.0], [67.7, 535.0], [67.8, 536.0], [67.9, 538.0], [68.0, 541.0], [68.1, 542.0], [68.2, 544.0], [68.3, 545.0], [68.4, 547.0], [68.5, 548.0], [68.6, 550.0], [68.7, 552.0], [68.8, 554.0], [68.9, 557.0], [69.0, 558.0], [69.1, 560.0], [69.2, 562.0], [69.3, 563.0], [69.4, 565.0], [69.5, 567.0], [69.6, 570.0], [69.7, 572.0], [69.8, 576.0], [69.9, 577.0], [70.0, 579.0], [70.1, 581.0], [70.2, 584.0], [70.3, 585.0], [70.4, 588.0], [70.5, 591.0], [70.6, 592.0], [70.7, 595.0], [70.8, 597.0], [70.9, 599.0], [71.0, 600.0], [71.1, 602.0], [71.2, 603.0], [71.3, 605.0], [71.4, 607.0], [71.5, 609.0], [71.6, 611.0], [71.7, 613.0], [71.8, 615.0], [71.9, 618.0], [72.0, 619.0], [72.1, 623.0], [72.2, 625.0], [72.3, 627.0], [72.4, 629.0], [72.5, 630.0], [72.6, 633.0], [72.7, 636.0], [72.8, 637.0], [72.9, 638.0], [73.0, 640.0], [73.1, 641.0], [73.2, 644.0], [73.3, 645.0], [73.4, 648.0], [73.5, 650.0], [73.6, 651.0], [73.7, 653.0], [73.8, 654.0], [73.9, 656.0], [74.0, 658.0], [74.1, 660.0], [74.2, 661.0], [74.3, 664.0], [74.4, 666.0], [74.5, 668.0], [74.6, 670.0], [74.7, 671.0], [74.8, 673.0], [74.9, 675.0], [75.0, 678.0], [75.1, 681.0], [75.2, 682.0], [75.3, 685.0], [75.4, 688.0], [75.5, 690.0], [75.6, 693.0], [75.7, 697.0], [75.8, 700.0], [75.9, 702.0], [76.0, 704.0], [76.1, 707.0], [76.2, 711.0], [76.3, 715.0], [76.4, 718.0], [76.5, 721.0], [76.6, 724.0], [76.7, 725.0], [76.8, 727.0], [76.9, 729.0], [77.0, 730.0], [77.1, 733.0], [77.2, 735.0], [77.3, 738.0], [77.4, 740.0], [77.5, 741.0], [77.6, 743.0], [77.7, 745.0], [77.8, 747.0], [77.9, 748.0], [78.0, 749.0], [78.1, 752.0], [78.2, 755.0], [78.3, 759.0], [78.4, 761.0], [78.5, 762.0], [78.6, 765.0], [78.7, 767.0], [78.8, 770.0], [78.9, 772.0], [79.0, 774.0], [79.1, 776.0], [79.2, 778.0], [79.3, 780.0], [79.4, 787.0], [79.5, 790.0], [79.6, 793.0], [79.7, 797.0], [79.8, 800.0], [79.9, 801.0], [80.0, 806.0], [80.1, 811.0], [80.2, 815.0], [80.3, 819.0], [80.4, 822.0], [80.5, 825.0], [80.6, 830.0], [80.7, 832.0], [80.8, 835.0], [80.9, 842.0], [81.0, 846.0], [81.1, 852.0], [81.2, 859.0], [81.3, 865.0], [81.4, 871.0], [81.5, 877.0], [81.6, 884.0], [81.7, 890.0], [81.8, 894.0], [81.9, 906.0], [82.0, 916.0], [82.1, 928.0], [82.2, 932.0], [82.3, 941.0], [82.4, 950.0], [82.5, 956.0], [82.6, 961.0], [82.7, 966.0], [82.8, 972.0], [82.9, 981.0], [83.0, 985.0], [83.1, 988.0], [83.2, 996.0], [83.3, 1003.0], [83.4, 1009.0], [83.5, 1015.0], [83.6, 1022.0], [83.7, 1029.0], [83.8, 1035.0], [83.9, 1041.0], [84.0, 1047.0], [84.1, 1057.0], [84.2, 1062.0], [84.3, 1069.0], [84.4, 1073.0], [84.5, 1079.0], [84.6, 1080.0], [84.7, 1083.0], [84.8, 1085.0], [84.9, 1089.0], [85.0, 1091.0], [85.1, 1093.0], [85.2, 1097.0], [85.3, 1101.0], [85.4, 1104.0], [85.5, 1107.0], [85.6, 1112.0], [85.7, 1115.0], [85.8, 1120.0], [85.9, 1124.0], [86.0, 1128.0], [86.1, 1132.0], [86.2, 1136.0], [86.3, 1143.0], [86.4, 1149.0], [86.5, 1156.0], [86.6, 1159.0], [86.7, 1163.0], [86.8, 1169.0], [86.9, 1173.0], [87.0, 1177.0], [87.1, 1182.0], [87.2, 1186.0], [87.3, 1191.0], [87.4, 1199.0], [87.5, 1204.0], [87.6, 1210.0], [87.7, 1214.0], [87.8, 1218.0], [87.9, 1224.0], [88.0, 1230.0], [88.1, 1235.0], [88.2, 1242.0], [88.3, 1256.0], [88.4, 1264.0], [88.5, 1275.0], [88.6, 1282.0], [88.7, 1289.0], [88.8, 1297.0], [88.9, 1306.0], [89.0, 1314.0], [89.1, 1324.0], [89.2, 1327.0], [89.3, 1331.0], [89.4, 1335.0], [89.5, 1339.0], [89.6, 1346.0], [89.7, 1352.0], [89.8, 1362.0], [89.9, 1366.0], [90.0, 1370.0], [90.1, 1375.0], [90.2, 1381.0], [90.3, 1386.0], [90.4, 1391.0], [90.5, 1399.0], [90.6, 1404.0], [90.7, 1412.0], [90.8, 1422.0], [90.9, 1431.0], [91.0, 1434.0], [91.1, 1440.0], [91.2, 1447.0], [91.3, 1455.0], [91.4, 1462.0], [91.5, 1472.0], [91.6, 1485.0], [91.7, 1492.0], [91.8, 1503.0], [91.9, 1516.0], [92.0, 1521.0], [92.1, 1530.0], [92.2, 1538.0], [92.3, 1549.0], [92.4, 1553.0], [92.5, 1567.0], [92.6, 1580.0], [92.7, 1588.0], [92.8, 1606.0], [92.9, 1615.0], [93.0, 1624.0], [93.1, 1634.0], [93.2, 1639.0], [93.3, 1645.0], [93.4, 1655.0], [93.5, 1665.0], [93.6, 1676.0], [93.7, 1686.0], [93.8, 1697.0], [93.9, 1709.0], [94.0, 1726.0], [94.1, 1740.0], [94.2, 1751.0], [94.3, 1755.0], [94.4, 1768.0], [94.5, 1778.0], [94.6, 1782.0], [94.7, 1793.0], [94.8, 1801.0], [94.9, 1813.0], [95.0, 1826.0], [95.1, 1835.0], [95.2, 1853.0], [95.3, 1866.0], [95.4, 1890.0], [95.5, 1916.0], [95.6, 1939.0], [95.7, 1951.0], [95.8, 1970.0], [95.9, 1985.0], [96.0, 2008.0], [96.1, 2034.0], [96.2, 2046.0], [96.3, 2100.0], [96.4, 2119.0], [96.5, 2147.0], [96.6, 2170.0], [96.7, 2199.0], [96.8, 2214.0], [96.9, 2262.0], [97.0, 2290.0], [97.1, 2310.0], [97.2, 2349.0], [97.3, 2375.0], [97.4, 2467.0], [97.5, 2542.0], [97.6, 2613.0], [97.7, 2654.0], [97.8, 2717.0], [97.9, 2736.0], [98.0, 2786.0], [98.1, 2820.0], [98.2, 2855.0], [98.3, 3021.0], [98.4, 3079.0], [98.5, 3139.0], [98.6, 3267.0], [98.7, 3447.0], [98.8, 3552.0], [98.9, 3798.0], [99.0, 3951.0], [99.1, 4141.0], [99.2, 4349.0], [99.3, 4768.0], [99.4, 5044.0], [99.5, 5389.0], [99.6, 6179.0], [99.7, 7125.0], [99.8, 7948.0], [99.9, 14778.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 2.0], [88.1, 2.0], [88.2, 2.0], [88.3, 2.0], [88.4, 2.0], [88.5, 2.0], [88.6, 2.0], [88.7, 2.0], [88.8, 2.0], [88.9, 2.0], [89.0, 2.0], [89.1, 2.0], [89.2, 2.0], [89.3, 2.0], [89.4, 2.0], [89.5, 2.0], [89.6, 2.0], [89.7, 2.0], [89.8, 2.0], [89.9, 2.0], [90.0, 2.0], [90.1, 2.0], [90.2, 2.0], [90.3, 2.0], [90.4, 2.0], [90.5, 2.0], [90.6, 2.0], [90.7, 2.0], [90.8, 2.0], [90.9, 2.0], [91.0, 2.0], [91.1, 2.0], [91.2, 2.0], [91.3, 2.0], [91.4, 2.0], [91.5, 2.0], [91.6, 2.0], [91.7, 2.0], [91.8, 2.0], [91.9, 2.0], [92.0, 13.0], [92.1, 13.0], [92.2, 13.0], [92.3, 13.0], [92.4, 13.0], [92.5, 13.0], [92.6, 13.0], [92.7, 13.0], [92.8, 13.0], [92.9, 13.0], [93.0, 65.0], [93.1, 65.0], [93.2, 65.0], [93.3, 65.0], [93.4, 65.0], [93.5, 65.0], [93.6, 65.0], [93.7, 65.0], [93.8, 65.0], [93.9, 65.0], [94.0, 115.0], [94.1, 115.0], [94.2, 115.0], [94.3, 115.0], [94.4, 115.0], [94.5, 115.0], [94.6, 115.0], [94.7, 115.0], [94.8, 115.0], [94.9, 115.0], [95.0, 215.0], [95.1, 215.0], [95.2, 215.0], [95.3, 215.0], [95.4, 215.0], [95.5, 215.0], [95.6, 215.0], [95.7, 215.0], [95.8, 215.0], [95.9, 215.0], [96.0, 364.0], [96.1, 364.0], [96.2, 364.0], [96.3, 364.0], [96.4, 364.0], [96.5, 364.0], [96.6, 364.0], [96.7, 364.0], [96.8, 364.0], [96.9, 364.0], [97.0, 515.0], [97.1, 515.0], [97.2, 515.0], [97.3, 515.0], [97.4, 515.0], [97.5, 515.0], [97.6, 515.0], [97.7, 515.0], [97.8, 515.0], [97.9, 515.0], [98.0, 665.0], [98.1, 665.0], [98.2, 665.0], [98.3, 665.0], [98.4, 665.0], [98.5, 665.0], [98.6, 665.0], [98.7, 665.0], [98.8, 665.0], [98.9, 665.0], [99.0, 806.0], [99.1, 806.0], [99.2, 806.0], [99.3, 806.0], [99.4, 806.0], [99.5, 806.0], [99.6, 806.0], [99.7, 806.0], [99.8, 806.0], [99.9, 806.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 2.0], [84.1, 2.0], [84.2, 2.0], [84.3, 2.0], [84.4, 2.0], [84.5, 2.0], [84.6, 2.0], [84.7, 2.0], [84.8, 2.0], [84.9, 2.0], [85.0, 2.0], [85.1, 2.0], [85.2, 2.0], [85.3, 2.0], [85.4, 2.0], [85.5, 2.0], [85.6, 2.0], [85.7, 2.0], [85.8, 2.0], [85.9, 2.0], [86.0, 2.0], [86.1, 2.0], [86.2, 2.0], [86.3, 2.0], [86.4, 2.0], [86.5, 2.0], [86.6, 2.0], [86.7, 2.0], [86.8, 2.0], [86.9, 2.0], [87.0, 2.0], [87.1, 2.0], [87.2, 2.0], [87.3, 2.0], [87.4, 2.0], [87.5, 2.0], [87.6, 2.0], [87.7, 2.0], [87.8, 2.0], [87.9, 2.0], [88.0, 3.0], [88.1, 3.0], [88.2, 3.0], [88.3, 3.0], [88.4, 3.0], [88.5, 3.0], [88.6, 3.0], [88.7, 3.0], [88.8, 3.0], [88.9, 3.0], [89.0, 4.0], [89.1, 4.0], [89.2, 4.0], [89.3, 4.0], [89.4, 4.0], [89.5, 4.0], [89.6, 4.0], [89.7, 4.0], [89.8, 4.0], [89.9, 4.0], [90.0, 5.0], [90.1, 5.0], [90.2, 5.0], [90.3, 5.0], [90.4, 5.0], [90.5, 5.0], [90.6, 5.0], [90.7, 5.0], [90.8, 5.0], [90.9, 5.0], [91.0, 16.0], [91.1, 16.0], [91.2, 16.0], [91.3, 16.0], [91.4, 16.0], [91.5, 16.0], [91.6, 16.0], [91.7, 16.0], [91.8, 16.0], [91.9, 16.0], [92.0, 65.0], [92.1, 65.0], [92.2, 65.0], [92.3, 65.0], [92.4, 65.0], [92.5, 65.0], [92.6, 65.0], [92.7, 65.0], [92.8, 65.0], [92.9, 65.0], [93.0, 90.0], [93.1, 90.0], [93.2, 90.0], [93.3, 90.0], [93.4, 90.0], [93.5, 90.0], [93.6, 90.0], [93.7, 90.0], [93.8, 90.0], [93.9, 90.0], [94.0, 294.0], [94.1, 294.0], [94.2, 294.0], [94.3, 294.0], [94.4, 294.0], [94.5, 294.0], [94.6, 294.0], [94.7, 294.0], [94.8, 294.0], [94.9, 294.0], [95.0, 296.0], [95.1, 296.0], [95.2, 296.0], [95.3, 296.0], [95.4, 296.0], [95.5, 296.0], [95.6, 296.0], [95.7, 296.0], [95.8, 296.0], [95.9, 296.0], [96.0, 298.0], [96.1, 298.0], [96.2, 298.0], [96.3, 298.0], [96.4, 298.0], [96.5, 298.0], [96.6, 298.0], [96.7, 298.0], [96.8, 298.0], [96.9, 298.0], [97.0, 299.0], [97.1, 299.0], [97.2, 299.0], [97.3, 299.0], [97.4, 299.0], [97.5, 299.0], [97.6, 299.0], [97.7, 299.0], [97.8, 299.0], [97.9, 299.0], [98.0, 300.0], [98.1, 300.0], [98.2, 300.0], [98.3, 300.0], [98.4, 300.0], [98.5, 300.0], [98.6, 300.0], [98.7, 300.0], [98.8, 300.0], [98.9, 300.0], [99.0, 301.0], [99.1, 301.0], [99.2, 301.0], [99.3, 301.0], [99.4, 301.0], [99.5, 301.0], [99.6, 301.0], [99.7, 301.0], [99.8, 301.0], [99.9, 301.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 27.0], [0.1, 28.0], [0.2, 29.0], [0.3, 30.0], [0.4, 30.0], [0.5, 31.0], [0.6, 32.0], [0.7, 33.0], [0.8, 34.0], [0.9, 34.0], [1.0, 35.0], [1.1, 35.0], [1.2, 36.0], [1.3, 36.0], [1.4, 36.0], [1.5, 37.0], [1.6, 37.0], [1.7, 38.0], [1.8, 38.0], [1.9, 38.0], [2.0, 38.0], [2.1, 39.0], [2.2, 40.0], [2.3, 40.0], [2.4, 40.0], [2.5, 41.0], [2.6, 41.0], [2.7, 42.0], [2.8, 43.0], [2.9, 43.0], [3.0, 43.0], [3.1, 44.0], [3.2, 44.0], [3.3, 45.0], [3.4, 46.0], [3.5, 46.0], [3.6, 46.0], [3.7, 47.0], [3.8, 47.0], [3.9, 47.0], [4.0, 48.0], [4.1, 49.0], [4.2, 49.0], [4.3, 50.0], [4.4, 51.0], [4.5, 52.0], [4.6, 52.0], [4.7, 52.0], [4.8, 53.0], [4.9, 53.0], [5.0, 53.0], [5.1, 54.0], [5.2, 54.0], [5.3, 54.0], [5.4, 55.0], [5.5, 55.0], [5.6, 56.0], [5.7, 57.0], [5.8, 58.0], [5.9, 58.0], [6.0, 58.0], [6.1, 60.0], [6.2, 60.0], [6.3, 61.0], [6.4, 61.0], [6.5, 61.0], [6.6, 62.0], [6.7, 63.0], [6.8, 64.0], [6.9, 64.0], [7.0, 64.0], [7.1, 65.0], [7.2, 65.0], [7.3, 66.0], [7.4, 67.0], [7.5, 67.0], [7.6, 68.0], [7.7, 69.0], [7.8, 71.0], [7.9, 71.0], [8.0, 71.0], [8.1, 73.0], [8.2, 73.0], [8.3, 75.0], [8.4, 76.0], [8.5, 77.0], [8.6, 79.0], [8.7, 79.0], [8.8, 80.0], [8.9, 80.0], [9.0, 81.0], [9.1, 82.0], [9.2, 83.0], [9.3, 83.0], [9.4, 84.0], [9.5, 85.0], [9.6, 85.0], [9.7, 86.0], [9.8, 86.0], [9.9, 86.0], [10.0, 88.0], [10.1, 88.0], [10.2, 89.0], [10.3, 89.0], [10.4, 90.0], [10.5, 91.0], [10.6, 91.0], [10.7, 92.0], [10.8, 93.0], [10.9, 94.0], [11.0, 95.0], [11.1, 95.0], [11.2, 96.0], [11.3, 97.0], [11.4, 97.0], [11.5, 98.0], [11.6, 99.0], [11.7, 99.0], [11.8, 101.0], [11.9, 101.0], [12.0, 103.0], [12.1, 104.0], [12.2, 104.0], [12.3, 105.0], [12.4, 106.0], [12.5, 106.0], [12.6, 107.0], [12.7, 107.0], [12.8, 109.0], [12.9, 110.0], [13.0, 110.0], [13.1, 110.0], [13.2, 111.0], [13.3, 113.0], [13.4, 114.0], [13.5, 114.0], [13.6, 115.0], [13.7, 115.0], [13.8, 116.0], [13.9, 117.0], [14.0, 118.0], [14.1, 119.0], [14.2, 120.0], [14.3, 121.0], [14.4, 122.0], [14.5, 122.0], [14.6, 123.0], [14.7, 123.0], [14.8, 124.0], [14.9, 124.0], [15.0, 124.0], [15.1, 125.0], [15.2, 125.0], [15.3, 126.0], [15.4, 126.0], [15.5, 127.0], [15.6, 128.0], [15.7, 129.0], [15.8, 130.0], [15.9, 130.0], [16.0, 131.0], [16.1, 131.0], [16.2, 132.0], [16.3, 132.0], [16.4, 133.0], [16.5, 134.0], [16.6, 135.0], [16.7, 136.0], [16.8, 137.0], [16.9, 137.0], [17.0, 137.0], [17.1, 138.0], [17.2, 139.0], [17.3, 139.0], [17.4, 140.0], [17.5, 140.0], [17.6, 141.0], [17.7, 142.0], [17.8, 142.0], [17.9, 143.0], [18.0, 145.0], [18.1, 146.0], [18.2, 146.0], [18.3, 147.0], [18.4, 147.0], [18.5, 148.0], [18.6, 149.0], [18.7, 150.0], [18.8, 150.0], [18.9, 151.0], [19.0, 151.0], [19.1, 152.0], [19.2, 153.0], [19.3, 154.0], [19.4, 154.0], [19.5, 154.0], [19.6, 155.0], [19.7, 156.0], [19.8, 156.0], [19.9, 157.0], [20.0, 158.0], [20.1, 158.0], [20.2, 159.0], [20.3, 160.0], [20.4, 160.0], [20.5, 161.0], [20.6, 161.0], [20.7, 162.0], [20.8, 162.0], [20.9, 163.0], [21.0, 164.0], [21.1, 164.0], [21.2, 165.0], [21.3, 166.0], [21.4, 167.0], [21.5, 167.0], [21.6, 168.0], [21.7, 169.0], [21.8, 169.0], [21.9, 170.0], [22.0, 170.0], [22.1, 171.0], [22.2, 172.0], [22.3, 173.0], [22.4, 173.0], [22.5, 173.0], [22.6, 173.0], [22.7, 173.0], [22.8, 174.0], [22.9, 174.0], [23.0, 175.0], [23.1, 175.0], [23.2, 176.0], [23.3, 176.0], [23.4, 177.0], [23.5, 177.0], [23.6, 178.0], [23.7, 179.0], [23.8, 180.0], [23.9, 181.0], [24.0, 181.0], [24.1, 182.0], [24.2, 182.0], [24.3, 183.0], [24.4, 183.0], [24.5, 184.0], [24.6, 184.0], [24.7, 185.0], [24.8, 186.0], [24.9, 187.0], [25.0, 187.0], [25.1, 188.0], [25.2, 189.0], [25.3, 190.0], [25.4, 190.0], [25.5, 191.0], [25.6, 192.0], [25.7, 192.0], [25.8, 192.0], [25.9, 193.0], [26.0, 194.0], [26.1, 194.0], [26.2, 195.0], [26.3, 196.0], [26.4, 196.0], [26.5, 197.0], [26.6, 197.0], [26.7, 197.0], [26.8, 198.0], [26.9, 198.0], [27.0, 198.0], [27.1, 199.0], [27.2, 200.0], [27.3, 201.0], [27.4, 201.0], [27.5, 202.0], [27.6, 202.0], [27.7, 203.0], [27.8, 203.0], [27.9, 203.0], [28.0, 204.0], [28.1, 205.0], [28.2, 206.0], [28.3, 207.0], [28.4, 207.0], [28.5, 207.0], [28.6, 208.0], [28.7, 208.0], [28.8, 208.0], [28.9, 210.0], [29.0, 210.0], [29.1, 211.0], [29.2, 212.0], [29.3, 213.0], [29.4, 213.0], [29.5, 215.0], [29.6, 215.0], [29.7, 216.0], [29.8, 216.0], [29.9, 217.0], [30.0, 218.0], [30.1, 219.0], [30.2, 220.0], [30.3, 220.0], [30.4, 221.0], [30.5, 221.0], [30.6, 222.0], [30.7, 222.0], [30.8, 223.0], [30.9, 223.0], [31.0, 225.0], [31.1, 225.0], [31.2, 226.0], [31.3, 227.0], [31.4, 227.0], [31.5, 228.0], [31.6, 229.0], [31.7, 230.0], [31.8, 231.0], [31.9, 232.0], [32.0, 233.0], [32.1, 233.0], [32.2, 233.0], [32.3, 235.0], [32.4, 236.0], [32.5, 236.0], [32.6, 236.0], [32.7, 237.0], [32.8, 237.0], [32.9, 238.0], [33.0, 240.0], [33.1, 240.0], [33.2, 241.0], [33.3, 242.0], [33.4, 244.0], [33.5, 245.0], [33.6, 247.0], [33.7, 248.0], [33.8, 249.0], [33.9, 249.0], [34.0, 250.0], [34.1, 251.0], [34.2, 253.0], [34.3, 253.0], [34.4, 254.0], [34.5, 255.0], [34.6, 255.0], [34.7, 256.0], [34.8, 257.0], [34.9, 258.0], [35.0, 259.0], [35.1, 261.0], [35.2, 262.0], [35.3, 264.0], [35.4, 264.0], [35.5, 265.0], [35.6, 267.0], [35.7, 268.0], [35.8, 269.0], [35.9, 269.0], [36.0, 270.0], [36.1, 271.0], [36.2, 272.0], [36.3, 273.0], [36.4, 274.0], [36.5, 274.0], [36.6, 275.0], [36.7, 276.0], [36.8, 277.0], [36.9, 277.0], [37.0, 278.0], [37.1, 279.0], [37.2, 279.0], [37.3, 280.0], [37.4, 281.0], [37.5, 282.0], [37.6, 283.0], [37.7, 284.0], [37.8, 284.0], [37.9, 285.0], [38.0, 286.0], [38.1, 287.0], [38.2, 288.0], [38.3, 288.0], [38.4, 289.0], [38.5, 291.0], [38.6, 292.0], [38.7, 293.0], [38.8, 294.0], [38.9, 294.0], [39.0, 295.0], [39.1, 295.0], [39.2, 298.0], [39.3, 298.0], [39.4, 299.0], [39.5, 300.0], [39.6, 302.0], [39.7, 303.0], [39.8, 304.0], [39.9, 305.0], [40.0, 305.0], [40.1, 306.0], [40.2, 307.0], [40.3, 307.0], [40.4, 309.0], [40.5, 310.0], [40.6, 311.0], [40.7, 313.0], [40.8, 314.0], [40.9, 315.0], [41.0, 316.0], [41.1, 316.0], [41.2, 317.0], [41.3, 318.0], [41.4, 319.0], [41.5, 320.0], [41.6, 322.0], [41.7, 323.0], [41.8, 324.0], [41.9, 325.0], [42.0, 325.0], [42.1, 326.0], [42.2, 327.0], [42.3, 328.0], [42.4, 329.0], [42.5, 329.0], [42.6, 331.0], [42.7, 332.0], [42.8, 334.0], [42.9, 334.0], [43.0, 335.0], [43.1, 338.0], [43.2, 339.0], [43.3, 339.0], [43.4, 340.0], [43.5, 340.0], [43.6, 341.0], [43.7, 342.0], [43.8, 344.0], [43.9, 344.0], [44.0, 345.0], [44.1, 345.0], [44.2, 345.0], [44.3, 346.0], [44.4, 347.0], [44.5, 348.0], [44.6, 348.0], [44.7, 349.0], [44.8, 350.0], [44.9, 352.0], [45.0, 355.0], [45.1, 355.0], [45.2, 358.0], [45.3, 359.0], [45.4, 360.0], [45.5, 361.0], [45.6, 362.0], [45.7, 362.0], [45.8, 363.0], [45.9, 365.0], [46.0, 365.0], [46.1, 367.0], [46.2, 367.0], [46.3, 368.0], [46.4, 369.0], [46.5, 370.0], [46.6, 371.0], [46.7, 372.0], [46.8, 372.0], [46.9, 373.0], [47.0, 374.0], [47.1, 375.0], [47.2, 375.0], [47.3, 377.0], [47.4, 378.0], [47.5, 379.0], [47.6, 379.0], [47.7, 379.0], [47.8, 380.0], [47.9, 380.0], [48.0, 382.0], [48.1, 382.0], [48.2, 384.0], [48.3, 385.0], [48.4, 386.0], [48.5, 386.0], [48.6, 387.0], [48.7, 389.0], [48.8, 391.0], [48.9, 393.0], [49.0, 394.0], [49.1, 395.0], [49.2, 396.0], [49.3, 397.0], [49.4, 398.0], [49.5, 400.0], [49.6, 401.0], [49.7, 402.0], [49.8, 403.0], [49.9, 405.0], [50.0, 406.0], [50.1, 406.0], [50.2, 408.0], [50.3, 408.0], [50.4, 409.0], [50.5, 410.0], [50.6, 411.0], [50.7, 412.0], [50.8, 413.0], [50.9, 415.0], [51.0, 417.0], [51.1, 418.0], [51.2, 418.0], [51.3, 420.0], [51.4, 420.0], [51.5, 421.0], [51.6, 421.0], [51.7, 423.0], [51.8, 424.0], [51.9, 425.0], [52.0, 425.0], [52.1, 427.0], [52.2, 428.0], [52.3, 428.0], [52.4, 429.0], [52.5, 430.0], [52.6, 431.0], [52.7, 432.0], [52.8, 434.0], [52.9, 435.0], [53.0, 436.0], [53.1, 437.0], [53.2, 438.0], [53.3, 439.0], [53.4, 440.0], [53.5, 441.0], [53.6, 442.0], [53.7, 443.0], [53.8, 445.0], [53.9, 445.0], [54.0, 447.0], [54.1, 448.0], [54.2, 450.0], [54.3, 450.0], [54.4, 451.0], [54.5, 453.0], [54.6, 455.0], [54.7, 456.0], [54.8, 457.0], [54.9, 459.0], [55.0, 461.0], [55.1, 463.0], [55.2, 464.0], [55.3, 465.0], [55.4, 467.0], [55.5, 468.0], [55.6, 469.0], [55.7, 470.0], [55.8, 472.0], [55.9, 473.0], [56.0, 474.0], [56.1, 476.0], [56.2, 479.0], [56.3, 480.0], [56.4, 483.0], [56.5, 484.0], [56.6, 487.0], [56.7, 488.0], [56.8, 489.0], [56.9, 489.0], [57.0, 492.0], [57.1, 493.0], [57.2, 493.0], [57.3, 495.0], [57.4, 496.0], [57.5, 497.0], [57.6, 498.0], [57.7, 500.0], [57.8, 502.0], [57.9, 505.0], [58.0, 506.0], [58.1, 506.0], [58.2, 508.0], [58.3, 508.0], [58.4, 510.0], [58.5, 511.0], [58.6, 513.0], [58.7, 514.0], [58.8, 516.0], [58.9, 520.0], [59.0, 522.0], [59.1, 523.0], [59.2, 525.0], [59.3, 530.0], [59.4, 532.0], [59.5, 533.0], [59.6, 535.0], [59.7, 536.0], [59.8, 538.0], [59.9, 541.0], [60.0, 542.0], [60.1, 544.0], [60.2, 547.0], [60.3, 548.0], [60.4, 550.0], [60.5, 551.0], [60.6, 551.0], [60.7, 553.0], [60.8, 554.0], [60.9, 555.0], [61.0, 558.0], [61.1, 559.0], [61.2, 562.0], [61.3, 563.0], [61.4, 564.0], [61.5, 566.0], [61.6, 568.0], [61.7, 569.0], [61.8, 572.0], [61.9, 573.0], [62.0, 579.0], [62.1, 581.0], [62.2, 582.0], [62.3, 584.0], [62.4, 585.0], [62.5, 586.0], [62.6, 588.0], [62.7, 590.0], [62.8, 592.0], [62.9, 594.0], [63.0, 596.0], [63.1, 597.0], [63.2, 597.0], [63.3, 599.0], [63.4, 604.0], [63.5, 606.0], [63.6, 608.0], [63.7, 610.0], [63.8, 611.0], [63.9, 612.0], [64.0, 614.0], [64.1, 614.0], [64.2, 617.0], [64.3, 618.0], [64.4, 620.0], [64.5, 622.0], [64.6, 625.0], [64.7, 626.0], [64.8, 628.0], [64.9, 630.0], [65.0, 633.0], [65.1, 634.0], [65.2, 635.0], [65.3, 638.0], [65.4, 638.0], [65.5, 640.0], [65.6, 641.0], [65.7, 644.0], [65.8, 646.0], [65.9, 648.0], [66.0, 652.0], [66.1, 654.0], [66.2, 656.0], [66.3, 662.0], [66.4, 663.0], [66.5, 664.0], [66.6, 666.0], [66.7, 670.0], [66.8, 671.0], [66.9, 674.0], [67.0, 677.0], [67.1, 679.0], [67.2, 680.0], [67.3, 681.0], [67.4, 683.0], [67.5, 685.0], [67.6, 688.0], [67.7, 690.0], [67.8, 694.0], [67.9, 695.0], [68.0, 698.0], [68.1, 699.0], [68.2, 701.0], [68.3, 703.0], [68.4, 704.0], [68.5, 706.0], [68.6, 708.0], [68.7, 709.0], [68.8, 710.0], [68.9, 712.0], [69.0, 713.0], [69.1, 714.0], [69.2, 716.0], [69.3, 719.0], [69.4, 721.0], [69.5, 726.0], [69.6, 729.0], [69.7, 731.0], [69.8, 732.0], [69.9, 734.0], [70.0, 736.0], [70.1, 741.0], [70.2, 742.0], [70.3, 743.0], [70.4, 747.0], [70.5, 748.0], [70.6, 749.0], [70.7, 753.0], [70.8, 758.0], [70.9, 762.0], [71.0, 762.0], [71.1, 767.0], [71.2, 773.0], [71.3, 775.0], [71.4, 780.0], [71.5, 782.0], [71.6, 783.0], [71.7, 786.0], [71.8, 788.0], [71.9, 790.0], [72.0, 794.0], [72.1, 797.0], [72.2, 798.0], [72.3, 808.0], [72.4, 812.0], [72.5, 814.0], [72.6, 816.0], [72.7, 820.0], [72.8, 823.0], [72.9, 827.0], [73.0, 830.0], [73.1, 836.0], [73.2, 838.0], [73.3, 839.0], [73.4, 845.0], [73.5, 847.0], [73.6, 856.0], [73.7, 859.0], [73.8, 865.0], [73.9, 870.0], [74.0, 876.0], [74.1, 889.0], [74.2, 891.0], [74.3, 896.0], [74.4, 899.0], [74.5, 906.0], [74.6, 912.0], [74.7, 913.0], [74.8, 914.0], [74.9, 922.0], [75.0, 924.0], [75.1, 928.0], [75.2, 934.0], [75.3, 936.0], [75.4, 939.0], [75.5, 943.0], [75.6, 950.0], [75.7, 952.0], [75.8, 965.0], [75.9, 968.0], [76.0, 979.0], [76.1, 981.0], [76.2, 983.0], [76.3, 989.0], [76.4, 991.0], [76.5, 995.0], [76.6, 1002.0], [76.7, 1006.0], [76.8, 1012.0], [76.9, 1019.0], [77.0, 1022.0], [77.1, 1029.0], [77.2, 1032.0], [77.3, 1036.0], [77.4, 1038.0], [77.5, 1040.0], [77.6, 1047.0], [77.7, 1053.0], [77.8, 1056.0], [77.9, 1072.0], [78.0, 1079.0], [78.1, 1081.0], [78.2, 1086.0], [78.3, 1092.0], [78.4, 1096.0], [78.5, 1103.0], [78.6, 1105.0], [78.7, 1107.0], [78.8, 1112.0], [78.9, 1114.0], [79.0, 1117.0], [79.1, 1123.0], [79.2, 1126.0], [79.3, 1130.0], [79.4, 1135.0], [79.5, 1142.0], [79.6, 1144.0], [79.7, 1145.0], [79.8, 1146.0], [79.9, 1154.0], [80.0, 1156.0], [80.1, 1159.0], [80.2, 1164.0], [80.3, 1169.0], [80.4, 1173.0], [80.5, 1177.0], [80.6, 1182.0], [80.7, 1186.0], [80.8, 1190.0], [80.9, 1193.0], [81.0, 1197.0], [81.1, 1199.0], [81.2, 1208.0], [81.3, 1210.0], [81.4, 1214.0], [81.5, 1216.0], [81.6, 1221.0], [81.7, 1228.0], [81.8, 1236.0], [81.9, 1243.0], [82.0, 1249.0], [82.1, 1255.0], [82.2, 1258.0], [82.3, 1264.0], [82.4, 1267.0], [82.5, 1272.0], [82.6, 1277.0], [82.7, 1286.0], [82.8, 1290.0], [82.9, 1307.0], [83.0, 1308.0], [83.1, 1315.0], [83.2, 1317.0], [83.3, 1321.0], [83.4, 1325.0], [83.5, 1327.0], [83.6, 1332.0], [83.7, 1334.0], [83.8, 1349.0], [83.9, 1355.0], [84.0, 1358.0], [84.1, 1366.0], [84.2, 1370.0], [84.3, 1373.0], [84.4, 1377.0], [84.5, 1378.0], [84.6, 1386.0], [84.7, 1391.0], [84.8, 1401.0], [84.9, 1402.0], [85.0, 1404.0], [85.1, 1411.0], [85.2, 1417.0], [85.3, 1420.0], [85.4, 1424.0], [85.5, 1430.0], [85.6, 1433.0], [85.7, 1444.0], [85.8, 1453.0], [85.9, 1460.0], [86.0, 1462.0], [86.1, 1468.0], [86.2, 1481.0], [86.3, 1491.0], [86.4, 1496.0], [86.5, 1500.0], [86.6, 1505.0], [86.7, 1510.0], [86.8, 1520.0], [86.9, 1525.0], [87.0, 1530.0], [87.1, 1534.0], [87.2, 1547.0], [87.3, 1553.0], [87.4, 1566.0], [87.5, 1573.0], [87.6, 1581.0], [87.7, 1595.0], [87.8, 1599.0], [87.9, 1610.0], [88.0, 1618.0], [88.1, 1628.0], [88.2, 1640.0], [88.3, 1657.0], [88.4, 1659.0], [88.5, 1665.0], [88.6, 1672.0], [88.7, 1679.0], [88.8, 1685.0], [88.9, 1689.0], [89.0, 1697.0], [89.1, 1702.0], [89.2, 1712.0], [89.3, 1725.0], [89.4, 1738.0], [89.5, 1746.0], [89.6, 1754.0], [89.7, 1762.0], [89.8, 1773.0], [89.9, 1781.0], [90.0, 1784.0], [90.1, 1787.0], [90.2, 1806.0], [90.3, 1816.0], [90.4, 1820.0], [90.5, 1828.0], [90.6, 1838.0], [90.7, 1846.0], [90.8, 1859.0], [90.9, 1870.0], [91.0, 1873.0], [91.1, 1880.0], [91.2, 1887.0], [91.3, 1905.0], [91.4, 1919.0], [91.5, 1934.0], [91.6, 1947.0], [91.7, 1962.0], [91.8, 1970.0], [91.9, 1983.0], [92.0, 1991.0], [92.1, 1999.0], [92.2, 2031.0], [92.3, 2034.0], [92.4, 2047.0], [92.5, 2070.0], [92.6, 2084.0], [92.7, 2099.0], [92.8, 2106.0], [92.9, 2120.0], [93.0, 2127.0], [93.1, 2141.0], [93.2, 2150.0], [93.3, 2164.0], [93.4, 2177.0], [93.5, 2206.0], [93.6, 2225.0], [93.7, 2230.0], [93.8, 2240.0], [93.9, 2242.0], [94.0, 2250.0], [94.1, 2270.0], [94.2, 2283.0], [94.3, 2304.0], [94.4, 2322.0], [94.5, 2349.0], [94.6, 2367.0], [94.7, 2373.0], [94.8, 2394.0], [94.9, 2408.0], [95.0, 2433.0], [95.1, 2454.0], [95.2, 2478.0], [95.3, 2497.0], [95.4, 2565.0], [95.5, 2590.0], [95.6, 2620.0], [95.7, 2629.0], [95.8, 2636.0], [95.9, 2656.0], [96.0, 2682.0], [96.1, 2732.0], [96.2, 2743.0], [96.3, 2777.0], [96.4, 2793.0], [96.5, 2823.0], [96.6, 2829.0], [96.7, 2874.0], [96.8, 2884.0], [96.9, 2978.0], [97.0, 3017.0], [97.1, 3078.0], [97.2, 3111.0], [97.3, 3145.0], [97.4, 3187.0], [97.5, 3214.0], [97.6, 3337.0], [97.7, 3358.0], [97.8, 3385.0], [97.9, 3435.0], [98.0, 3478.0], [98.1, 3602.0], [98.2, 3659.0], [98.3, 3696.0], [98.4, 3771.0], [98.5, 3830.0], [98.6, 4001.0], [98.7, 4047.0], [98.8, 4060.0], [98.9, 4204.0], [99.0, 4274.0], [99.1, 4452.0], [99.2, 4569.0], [99.3, 4752.0], [99.4, 5048.0], [99.5, 5334.0], [99.6, 5449.0], [99.7, 5742.0], [99.8, 5942.0], [99.9, 7422.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1790.0, "series": [{"data": [[0.0, 1025.0], [600.0, 397.0], [700.0, 331.0], [800.0, 172.0], [900.0, 115.0], [1000.0, 167.0], [1100.0, 179.0], [1200.0, 116.0], [1300.0, 140.0], [1400.0, 103.0], [1500.0, 84.0], [1600.0, 88.0], [1700.0, 80.0], [1800.0, 54.0], [1900.0, 41.0], [2000.0, 29.0], [2100.0, 34.0], [2300.0, 24.0], [2200.0, 27.0], [2400.0, 11.0], [2500.0, 9.0], [2600.0, 19.0], [2700.0, 22.0], [2800.0, 13.0], [2900.0, 7.0], [3000.0, 14.0], [3100.0, 5.0], [3200.0, 9.0], [3300.0, 3.0], [3400.0, 4.0], [3500.0, 10.0], [3700.0, 4.0], [3600.0, 1.0], [3800.0, 6.0], [3900.0, 5.0], [4000.0, 2.0], [4200.0, 4.0], [4100.0, 6.0], [4300.0, 4.0], [4400.0, 4.0], [4600.0, 2.0], [4800.0, 3.0], [4700.0, 1.0], [4900.0, 4.0], [5000.0, 2.0], [5100.0, 2.0], [5300.0, 4.0], [5200.0, 1.0], [5400.0, 1.0], [5500.0, 1.0], [5800.0, 2.0], [5900.0, 1.0], [6100.0, 4.0], [6500.0, 2.0], [6400.0, 1.0], [6700.0, 2.0], [6900.0, 1.0], [7100.0, 3.0], [7000.0, 1.0], [7200.0, 1.0], [7300.0, 2.0], [7400.0, 1.0], [7500.0, 1.0], [7900.0, 1.0], [8500.0, 1.0], [8400.0, 1.0], [8300.0, 1.0], [8800.0, 1.0], [9200.0, 1.0], [10500.0, 1.0], [10300.0, 1.0], [14700.0, 1.0], [14900.0, 1.0], [15400.0, 1.0], [16700.0, 1.0], [18900.0, 1.0], [20700.0, 2.0], [21000.0, 1.0], [22300.0, 1.0], [100.0, 1790.0], [200.0, 1043.0], [300.0, 1026.0], [400.0, 554.0], [500.0, 440.0]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[0.0, 94.0], [300.0, 1.0], [600.0, 1.0], [800.0, 1.0], [200.0, 1.0], [100.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[0.0, 94.0], [300.0, 2.0], [200.0, 4.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[0.0, 414.0], [600.0, 169.0], [700.0, 144.0], [800.0, 78.0], [900.0, 76.0], [1000.0, 68.0], [1100.0, 93.0], [1200.0, 61.0], [1300.0, 69.0], [1400.0, 60.0], [1500.0, 47.0], [1600.0, 44.0], [1700.0, 38.0], [1800.0, 41.0], [1900.0, 29.0], [2000.0, 22.0], [2100.0, 27.0], [2200.0, 28.0], [2300.0, 20.0], [2400.0, 16.0], [2500.0, 8.0], [2600.0, 18.0], [2700.0, 14.0], [2800.0, 14.0], [2900.0, 4.0], [3000.0, 7.0], [3100.0, 11.0], [3200.0, 3.0], [3300.0, 10.0], [3400.0, 8.0], [3500.0, 1.0], [3600.0, 8.0], [3700.0, 4.0], [3800.0, 5.0], [3900.0, 1.0], [4000.0, 10.0], [4200.0, 4.0], [4300.0, 3.0], [4100.0, 1.0], [4600.0, 2.0], [4500.0, 2.0], [4400.0, 2.0], [4800.0, 2.0], [4700.0, 2.0], [5000.0, 2.0], [5300.0, 3.0], [5200.0, 1.0], [5500.0, 2.0], [5400.0, 3.0], [5800.0, 1.0], [5700.0, 1.0], [5900.0, 2.0], [6300.0, 2.0], [7400.0, 2.0], [7300.0, 1.0], [15200.0, 1.0], [16700.0, 1.0], [100.0, 547.0], [200.0, 434.0], [300.0, 355.0], [400.0, 289.0], [500.0, 201.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 22300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7680.0, "series": [{"data": [[0.0, 7680.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3177.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1156.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 31.682755153343418, "minX": 1.6172703E12, "maxY": 88.81853162998323, "series": [{"data": [[1.61727036E12, 88.81853162998323], [1.61727042E12, 31.682755153343418], [1.6172703E12, 36.84083828943649]], "isOverall": false, "label": "jp@gc - Stepping Thread Group (deprecated)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727042E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 3381.5, "series": [{"data": [[3.0, 282.0], [4.0, 309.0], [6.0, 51.0], [7.0, 58.0], [8.0, 59.0], [9.0, 83.0], [10.0, 113.63235294117646], [11.0, 219.0], [12.0, 217.03703703703707], [13.0, 402.0], [14.0, 140.5], [15.0, 76.0], [16.0, 279.66666666666663], [17.0, 117.0], [18.0, 717.75], [19.0, 1199.857142857143], [20.0, 175.6730506155952], [21.0, 147.75], [22.0, 130.68000000000004], [23.0, 102.33333333333333], [24.0, 210.83333333333331], [25.0, 287.847619047619], [26.0, 374.92307692307696], [27.0, 439.5714285714286], [28.0, 463.25], [29.0, 325.62500000000006], [30.0, 233.91666666666669], [31.0, 454.625], [32.0, 396.8888888888889], [33.0, 408.8333333333333], [34.0, 317.25], [35.0, 428.1666666666667], [36.0, 478.25], [37.0, 110.75], [38.0, 530.0], [39.0, 508.375], [40.0, 284.2528089887639], [41.0, 274.82812500000006], [42.0, 411.48148148148147], [43.0, 555.2142857142857], [44.0, 522.4166666666667], [45.0, 398.31249999999994], [46.0, 544.1666666666666], [47.0, 446.0909090909091], [48.0, 142.0], [49.0, 559.5], [50.0, 1085.6666666666667], [51.0, 173.5], [52.0, 682.8], [54.0, 622.6666666666666], [55.0, 398.5701754385966], [57.0, 477.93700787401553], [56.0, 434.4848484848484], [59.0, 534.0], [58.0, 583.5], [60.0, 1292.2566037735853], [61.0, 603.315789473684], [62.0, 1346.611111111111], [63.0, 325.71999999999997], [64.0, 249.99999999999997], [65.0, 649.6666666666667], [66.0, 576.5333333333333], [67.0, 1281.3157894736844], [68.0, 1079.111111111111], [69.0, 1667.5238095238094], [70.0, 717.2757201646089], [71.0, 700.688888888889], [72.0, 410.5652173913043], [73.0, 410.6785714285714], [74.0, 534.4081632653061], [75.0, 1737.8421052631577], [76.0, 333.0000000000001], [77.0, 670.1333333333334], [78.0, 433.1052631578948], [79.0, 364.1428571428571], [80.0, 902.6584362139927], [81.0, 617.8421052631579], [82.0, 519.25], [83.0, 528.4], [84.0, 502.57894736842104], [85.0, 569.6332574031892], [86.0, 947.6923076923076], [87.0, 1176.7499999999998], [88.0, 976.4347826086956], [89.0, 524.3], [90.0, 983.9583333333334], [91.0, 1173.8666666666666], [92.0, 784.2380952380953], [93.0, 808.0], [94.0, 587.0400000000001], [95.0, 798.5937499999998], [96.0, 700.9166666666667], [97.0, 742.7272727272727], [98.0, 906.2857142857143], [99.0, 597.875], [100.0, 853.0647644927541]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[64.28957855331466, 592.3703658978366]], "isOverall": false, "label": "VNE-GET-bongda-Aggregated", "isController": false}, {"data": [[6.0, 438.3333333333333], [7.0, 115.0], [8.0, 2.0], [9.0, 2.0], [10.0, 1.0], [11.0, 1.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 1.0], [17.0, 1.0], [18.0, 13.0], [19.0, 1.0], [20.0, 1.0], [21.0, 0.0], [22.0, 1.0], [23.0, 0.0], [24.0, 1.0], [25.0, 1.0], [26.0, 1.0], [27.0, 0.0], [28.0, 0.0], [29.0, 1.0], [30.0, 0.0], [31.0, 2.0], [32.0, 0.0], [33.0, 1.0], [34.0, 1.0], [35.0, 0.0], [36.0, 1.0], [37.0, 1.0], [38.0, 0.0], [39.0, 0.0], [40.0, 1.0], [41.0, 1.0], [42.0, 2.0], [43.0, 0.0], [44.0, 0.0], [45.0, 1.0], [46.0, 1.0], [47.0, 1.0], [48.0, 0.0], [49.0, 0.0], [50.0, 0.0], [51.0, 0.0], [52.0, 1.0], [53.0, 1.0], [54.0, 1.0], [55.0, 0.0], [56.0, 1.0], [57.0, 0.0], [58.0, 0.0], [59.0, 0.0], [60.0, 1.0], [61.0, 1.0], [62.0, 0.0], [63.0, 0.0], [64.0, 1.0], [65.0, 0.0], [66.0, 0.0], [67.0, 1.0], [68.0, 1.0], [69.0, 0.0], [70.0, 0.0], [71.0, 0.0], [72.0, 0.0], [73.0, 0.0], [74.0, 0.0], [75.0, 1.0], [76.0, 1.0], [77.0, 1.0], [78.0, 1.0], [79.0, 0.0], [80.0, 1.0], [81.0, 1.0], [82.0, 0.0], [83.0, 0.0], [84.0, 1.0], [85.0, 0.0], [86.0, 1.0], [87.0, 1.0], [88.0, 1.0], [89.0, 1.0], [90.0, 0.0], [91.0, 0.0], [92.0, 0.0], [93.0, 0.0], [94.0, 0.0], [95.0, 0.0], [96.0, 0.0], [97.0, 0.0], [98.0, 1.0], [99.0, 1.0], [100.0, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[50.64999999999999, 28.07999999999998]], "isOverall": false, "label": "PROF - VNE - Test 01-Aggregated", "isController": false}, {"data": [[8.0, 242.875], [9.0, 5.0], [10.0, 0.0], [11.0, 2.0], [12.0, 0.0], [13.0, 1.0], [14.0, 1.0], [15.0, 1.0], [16.0, 1.0], [17.0, 1.0], [18.0, 1.0], [19.0, 1.0], [20.0, 16.0], [21.0, 1.0], [22.0, 1.0], [23.0, 1.0], [24.0, 0.0], [25.0, 0.0], [26.0, 1.0], [27.0, 2.0], [28.0, 0.0], [29.0, 2.0], [30.0, 1.0], [31.0, 4.0], [32.0, 2.0], [33.0, 1.0], [34.0, 0.0], [35.0, 1.0], [36.0, 1.0], [37.0, 1.0], [38.0, 1.0], [39.0, 1.0], [40.0, 0.0], [41.0, 1.0], [42.0, 1.0], [43.0, 0.0], [44.0, 0.0], [45.0, 0.0], [46.0, 2.0], [47.0, 1.0], [48.0, 1.0], [49.0, 1.0], [50.0, 1.0], [51.0, 1.0], [52.0, 1.0], [53.0, 1.0], [54.0, 1.0], [55.0, 1.0], [56.0, 1.0], [57.0, 0.0], [58.0, 1.0], [59.0, 0.0], [60.0, 1.0], [61.0, 0.0], [62.0, 1.0], [63.0, 1.0], [64.0, 2.0], [65.0, 1.0], [66.0, 0.0], [67.0, 1.0], [68.0, 3.0], [69.0, 1.0], [70.0, 1.0], [71.0, 1.0], [72.0, 1.0], [73.0, 2.0], [74.0, 1.0], [75.0, 1.0], [76.0, 0.0], [77.0, 0.0], [78.0, 2.0], [79.0, 1.0], [80.0, 1.0], [81.0, 0.0], [82.0, 1.0], [83.0, 1.0], [84.0, 0.0], [85.0, 1.0], [86.0, 0.0], [87.0, 0.0], [88.0, 0.0], [89.0, 0.0], [90.0, 1.0], [91.0, 1.0], [92.0, 0.0], [93.0, 1.0], [94.0, 1.0], [95.0, 0.0], [96.0, 1.0], [97.0, 0.0], [98.0, 0.0], [99.0, 1.0], [100.0, 1.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[50.78, 20.409999999999997]], "isOverall": false, "label": "PROF - VNE - Random main action-Aggregated", "isController": false}, {"data": [[2.0, 305.0], [5.0, 67.0], [10.0, 148.41025641025635], [11.0, 385.4], [12.0, 190.3], [15.0, 195.0], [16.0, 372.0], [19.0, 150.0], [20.0, 267.7264150943394], [21.0, 69.0], [22.0, 148.54545454545456], [23.0, 147.14285714285714], [25.0, 351.1640625000001], [26.0, 369.66666666666663], [27.0, 604.0], [28.0, 459.33333333333337], [29.0, 686.75], [30.0, 224.49999999999997], [31.0, 517.0], [32.0, 848.6666666666666], [33.0, 755.0], [34.0, 428.75], [35.0, 761.0], [36.0, 606.4285714285714], [37.0, 479.66666666666663], [38.0, 165.25], [39.0, 486.0], [40.0, 327.5522875816995], [41.0, 369.4347826086957], [42.0, 233.33333333333334], [43.0, 496.50000000000006], [44.0, 441.25], [45.0, 393.25], [47.0, 877.8], [46.0, 405.0], [48.0, 465.0], [49.0, 599.5], [50.0, 972.0], [51.0, 1348.5], [53.0, 468.5], [55.0, 605.7264150943397], [56.0, 758.0357142857142], [57.0, 705.6538461538463], [59.0, 792.1428571428572], [58.0, 1050.7142857142858], [60.0, 951.098214285714], [61.0, 660.0], [62.0, 374.0], [63.0, 593.1666666666666], [64.0, 786.0], [65.0, 1326.2], [66.0, 480.1666666666667], [67.0, 775.5], [68.0, 3381.5], [69.0, 1648.1666666666667], [70.0, 1123.7500000000005], [71.0, 906.4782608695652], [72.0, 569.9583333333334], [73.0, 794.3333333333334], [74.0, 1179.3636363636365], [75.0, 616.0689655172414], [76.0, 463.75], [77.0, 360.5], [78.0, 1700.875], [79.0, 307.6923076923077], [80.0, 881.664383561644], [81.0, 1116.25], [82.0, 911.375], [84.0, 1190.3333333333335], [85.0, 842.1091954022987], [86.0, 755.0], [87.0, 990.0999999999999], [88.0, 1114.25], [89.0, 757.5], [90.0, 1021.2352941176472], [91.0, 1294.6], [92.0, 1028.923076923077], [93.0, 1382.3749999999998], [94.0, 1228.6], [95.0, 734.5714285714287], [96.0, 854.8571428571428], [97.0, 899.0], [98.0, 1194.0], [99.0, 604.25], [100.0, 1155.9979466119094], [1.0, 1079.0]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}, {"data": [[64.37528280542969, 732.5494909502278]], "isOverall": false, "label": "VNE-GET-quansu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 17358.85, "minX": 1.6172703E12, "maxY": 8110478.783333333, "series": [{"data": [[1.61727036E12, 8110478.783333333], [1.61727042E12, 2511265.15], [1.6172703E12, 4244762.166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61727036E12, 56227.85], [1.61727042E12, 17358.85], [1.6172703E12, 29651.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727042E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.46428571428571436, "minX": 1.6172703E12, "maxY": 1018.4060072501286, "series": [{"data": [[1.61727036E12, 787.2037694013311], [1.61727042E12, 282.2654676258998], [1.6172703E12, 404.359932801344]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727036E12, 0.46428571428571436], [1.6172703E12, 38.81944444444442]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727036E12, 0.6428571428571429], [1.6172703E12, 28.097222222222214]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727036E12, 1018.4060072501286], [1.61727042E12, 376.9649415692817], [1.6172703E12, 395.57753479125273]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727042E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6172703E12, "maxY": 611.5800443458982, "series": [{"data": [[1.61727036E12, 611.5800443458982], [1.61727042E12, 194.68057553956837], [1.6172703E12, 356.1205375892477]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727036E12, 0.0], [1.6172703E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727036E12, 0.0], [1.6172703E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727036E12, 440.82858622475425], [1.61727042E12, 137.24707846410664], [1.6172703E12, 224.84791252485076]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727042E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6172703E12, "maxY": 509.6698447893567, "series": [{"data": [[1.61727036E12, 509.6698447893567], [1.61727042E12, 142.826618705036], [1.6172703E12, 271.605207895842]], "isOverall": false, "label": "VNE-GET-bongda", "isController": false}, {"data": [[1.61727036E12, 0.0], [1.6172703E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Test 01", "isController": false}, {"data": [[1.61727036E12, 0.0], [1.6172703E12, 0.0]], "isOverall": false, "label": "PROF - VNE - Random main action", "isController": false}, {"data": [[1.61727036E12, 346.0150181253236], [1.61727042E12, 97.8113522537563], [1.6172703E12, 164.7157057654076]], "isOverall": false, "label": "VNE-GET-quansu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727042E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6172703E12, "maxY": 22379.0, "series": [{"data": [[1.61727036E12, 22379.0], [1.61727042E12, 4163.0], [1.6172703E12, 10521.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61727036E12, 1806.0], [1.61727042E12, 749.0], [1.6172703E12, 582.8000000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61727036E12, 4017.1799999999985], [1.61727042E12, 1789.2999999999997], [1.6172703E12, 5055.479999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61727036E12, 2336.9999999999927], [1.61727042E12, 1109.0], [1.6172703E12, 1166.5999999999985]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61727036E12, 0.0], [1.61727042E12, 36.0], [1.6172703E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61727036E12, 568.0], [1.61727042E12, 156.0], [1.6172703E12, 212.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727042E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 2.0, "maxY": 21040.0, "series": [{"data": [[2.0, 2328.0], [7.0, 623.0], [12.0, 1430.5], [15.0, 1.0], [21.0, 1.0], [24.0, 102.5], [30.0, 125.5], [35.0, 697.5], [37.0, 416.0], [38.0, 690.0], [48.0, 374.5], [52.0, 1221.0], [56.0, 1177.5], [58.0, 340.0], [59.0, 1525.0], [61.0, 606.0], [62.0, 573.5], [63.0, 803.0], [65.0, 391.0], [64.0, 107.0], [69.0, 85.5], [70.0, 169.5], [72.0, 233.5], [73.0, 959.0], [74.0, 1071.0], [76.0, 85.5], [81.0, 912.0], [83.0, 830.0], [86.0, 266.0], [84.0, 84.0], [89.0, 266.0], [91.0, 110.0], [94.0, 757.5], [95.0, 420.0], [99.0, 202.0], [98.0, 159.0], [96.0, 587.5], [103.0, 1284.0], [101.0, 665.5], [104.0, 323.5], [106.0, 315.0], [105.0, 145.0], [109.0, 309.5], [108.0, 451.5], [111.0, 445.5], [114.0, 525.5], [117.0, 145.0], [119.0, 329.0], [122.0, 368.5], [121.0, 332.0], [123.0, 358.0], [120.0, 332.5], [125.0, 281.0], [124.0, 318.5], [126.0, 410.5], [127.0, 363.0], [130.0, 156.5], [128.0, 443.0], [134.0, 651.0], [132.0, 426.0], [129.0, 677.0], [131.0, 467.0], [137.0, 270.0], [139.0, 360.0], [136.0, 331.0], [142.0, 626.0], [141.0, 552.0], [144.0, 131.5], [147.0, 175.5], [159.0, 244.0], [152.0, 712.0], [155.0, 630.0], [164.0, 423.0], [168.0, 218.5], [169.0, 604.0], [181.0, 235.0], [178.0, 420.5], [197.0, 278.0], [204.0, 178.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[139.0, 21040.0], [81.0, 20772.5], [52.0, 18959.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 204.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 2321.0, "series": [{"data": [[2.0, 2321.0], [7.0, 598.0], [12.0, 1279.5], [15.0, 0.0], [21.0, 0.0], [24.0, 0.0], [30.0, 91.0], [35.0, 214.5], [37.0, 358.0], [38.0, 413.0], [48.0, 213.0], [52.0, 530.0], [56.0, 586.5], [58.0, 229.5], [59.0, 593.0], [61.0, 310.0], [62.0, 410.5], [63.0, 288.0], [65.0, 246.0], [64.0, 62.0], [69.0, 66.5], [70.0, 73.0], [72.0, 137.5], [73.0, 371.0], [74.0, 1064.5], [76.0, 59.0], [81.0, 490.0], [83.0, 254.0], [86.0, 123.0], [84.0, 61.0], [89.0, 109.0], [91.0, 67.0], [94.0, 130.0], [95.0, 137.0], [99.0, 135.0], [98.0, 107.5], [96.0, 448.0], [103.0, 1242.5], [101.0, 593.0], [104.0, 167.5], [106.0, 114.5], [105.0, 67.0], [109.0, 136.0], [108.0, 275.0], [111.0, 314.5], [114.0, 225.0], [117.0, 103.0], [119.0, 145.0], [122.0, 222.0], [121.0, 111.0], [123.0, 124.0], [120.0, 86.0], [125.0, 183.0], [124.0, 91.5], [126.0, 192.0], [127.0, 136.0], [130.0, 94.0], [128.0, 229.5], [134.0, 490.0], [132.0, 411.5], [129.0, 524.0], [131.0, 176.0], [137.0, 208.0], [139.0, 92.0], [136.0, 124.0], [142.0, 284.5], [141.0, 497.0], [144.0, 100.0], [147.0, 130.5], [159.0, 205.0], [152.0, 685.5], [155.0, 589.0], [164.0, 254.5], [168.0, 169.0], [169.0, 592.5], [181.0, 213.0], [178.0, 389.5], [197.0, 219.0], [204.0, 145.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[139.0, 0.0], [81.0, 0.0], [52.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 204.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 32.233333333333334, "minX": 1.6172703E12, "maxY": 108.0, "series": [{"data": [[1.61727036E12, 108.0], [1.61727042E12, 32.233333333333334], [1.6172703E12, 60.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727042E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6172703E12, "maxY": 108.21666666666667, "series": [{"data": [[1.61727036E12, 108.21666666666667], [1.61727042E12, 33.15], [1.6172703E12, 58.85]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61727036E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.61727036E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.61727036E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.ConnectTimeoutException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61727042E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.6172703E12, "maxY": 75.1, "series": [{"data": [[1.61727036E12, 0.4666666666666667], [1.6172703E12, 1.2]], "isOverall": false, "label": "PROF - VNE - Random main action-success", "isController": false}, {"data": [[1.61727036E12, 32.18333333333333], [1.61727042E12, 9.983333333333333], [1.6172703E12, 16.766666666666666]], "isOverall": false, "label": "VNE-GET-quansu-success", "isController": false}, {"data": [[1.61727036E12, 0.06666666666666667]], "isOverall": false, "label": "VNE-GET-bongda-failure", "isController": false}, {"data": [[1.61727036E12, 0.4666666666666667], [1.6172703E12, 1.2]], "isOverall": false, "label": "PROF - VNE - Test 01-success", "isController": false}, {"data": [[1.61727036E12, 75.1], [1.61727042E12, 23.166666666666668], [1.6172703E12, 39.68333333333333]], "isOverall": false, "label": "VNE-GET-bongda-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727042E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.6172703E12, "maxY": 108.21666666666667, "series": [{"data": [[1.61727036E12, 108.21666666666667], [1.61727042E12, 33.15], [1.6172703E12, 58.85]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61727036E12, 0.06666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61727042E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

