{
	"info": {
		"_postman_id": "695908a9-ca13-466b-b504-a7309c0a6958",
		"name": "ZaitenLLC - CS Commercial Nghia",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Application Flow",
			"item": [
				{
					"name": "Green Zone - Link Debit Card",
					"item": [
						{
							"name": "Maintenance Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Maintenance Config] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Maintenance Config] Response body should have ${isTurnOn} property\", function () {",
											"    pm.expect(jsonData).to.have.property(\"isTurnOn\");",
											"    pm.expect(jsonData.isTurnOn).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/public/maintenance/configuration",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"maintenance",
										"configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Welcome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Welcome] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Welcome] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Welcome] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											"",
											"pm.environment.set(\"leadUuid\", jsonData.data.leadUuid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let stringRandom = utils.makeid(6);",
											"let envName = pm.environment.get(\"envName\");",
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"email\", `testing_${envName}_${stringRandom}@yopmail.com`);",
											"    pm.environment.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
											"    pm.environment.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Date  of Birth",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode) || !pm.environment.get(\"dateOfBirth\")) {",
											"    pm.environment.set(\"dateOfBirth\", \"1990-11-11\");",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Date of Birth] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"dateOfBirth\": \"{{dateOfBirth}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mobile Phone",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mobilePhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Mobile Phone] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body data must have leadUuid property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"mobilePhoneNumber\": \"{{mobilePhoneNumber}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Personal Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Personal Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"addressLine1\": \"12040 AURORA AVE n\",\n    \"addressLine2\": \"\",\n    \"zipCode\": 98133,\n    \"city\": \"seattle\",\n    \"state\": \"WA\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"password\", \"Test!234\");",
											"}",
											"",
											"pm.environment.set(\"baseUrl\", environment.envName === 'local' ? 'http://localhost:4400' : `https://csc-${environment.envName}-customer-ui.business.creditstrong.com`);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"pm.test(\"[Password] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Password] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Password] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baseUrl\": \"{{baseUrl}}\",\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"password\": \"{{password}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth - Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Auth - Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Auth - Token] Response body data must have ${access_token} and ${user_uuid} properties\", function () {",
											"    pm.expect(jsonData).to.have.property(\"access_token\");",
											"    pm.expect(jsonData).to.have.property(\"user_uuid\");",
											"});",
											"",
											"pm.environment.set(\"userUuid\", jsonData.user_uuid);",
											"pm.environment.set(\"accessToken\", jsonData.access_token);",
											"pm.environment.set(\"ked\", jsonData.ked);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "Content-type",
										"value": "application/x-www-form-urlencoded; charset=UTF-8"
									},
									{
										"key": "Authorization",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "customer-portal",
											"type": "text"
										},
										{
											"key": "baseUrl",
											"value": "{{baseUrl}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiURL}}/auth/oauth/token",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"auth",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Applicants By Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"pm.environment.set(\"emailEncrypt\", utils.encrypt(environment.email));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Applicants By Email] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Applicants By Email] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData).to.have.property(\"uuid\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationUUID\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationId\");",
											"    pm.expect(jsonData).to.have.property(\"customerUUID\");",
											"    pm.expect(jsonData).to.have.property(\"customerId\");",
											"});",
											"",
											"pm.environment.set(\"applicantId\", jsonData.id);",
											"pm.environment.set(\"applicantUuid\", jsonData.uuid);",
											"pm.environment.set(\"applicationUuid\", jsonData.latestApplicationUUID);",
											"pm.environment.set(\"applicationId\", jsonData.latestApplicationId);",
											"pm.environment.set(\"customerUUID\", jsonData.customerUUID);",
											"pm.environment.set(\"customerId\", jsonData.customerId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/applicants/email?email={{emailEncrypt}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"applicants",
										"email"
									],
									"query": [
										{
											"key": "email",
											"value": "{{emailEncrypt}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Social Security Number",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ssn = utils.randomSSN();",
											"",
											"    pm.environment.set(\"ssn\", ssn);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Social Security Number] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body data must have ${csApplicantUuid} and ${csApplicationUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicantUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicationUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssn\": \"{{ssn}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/ssn",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"ssn"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Suffixes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"",
											"const index = utils.randomize(jsonData);",
											"const suffix = jsonData[index].code;",
											"",
											"pm.test(\"[Get Suffixes] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Suffixes] Response data must be array\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});",
											"",
											"pm.environment.set(\"suffix\", suffix);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/suffixes",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"suffixes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/getPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"getPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body data must have ${applicationUuid} and ${applicantUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"applicantUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"ssn\": \"{{ssn}}\",\n    \"birthDate\": \"{{dateOfBirth}}\",\n    \"middleInitial\": null,\n    \"suffix\": \"{{suffix}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/verifyPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"verifyPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let productList = [];",
											"",
											"jsonData.forEach(product => {",
											"    if (product.productCodeType === \"COMMERCIAL\" && !product.disabled) {",
											"        productList.push(product);",
											"    }",
											"});",
											"const index = utils.randomize(productList);",
											"const productSelected = productList[index].uuid;",
											"",
											"pm.environment.set(\"productUuid\", productSelected);",
											"",
											"pm.test(\"[Get Product List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Product List] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/products",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Selected Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Selected Product] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Selected Product] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productUuid\": \"{{productUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/selected-offer",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"selected-offer"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Company Name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"companyLegalName\", pm.variables.replaceIn('{{$randomCompanyName}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - Company Name] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Industry List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let industryList = [];",
											"",
											"jsonData.forEach(industry => {",
											"    if (industry.isEnabled && industry.isSupported) {",
											"        industryList.push(industry);",
											"    }",
											"});",
											"const index = utils.randomize(industryList);",
											"const industrySelected = industryList[index].uuid;",
											"",
											"pm.environment.set(\"industryUuid\", industrySelected);",
											"",
											"pm.test(\"[Business - Get Industry List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Get Industry List] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/industry/industries",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"industry",
										"industries"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Industry and Internet",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"website\", pm.variables.replaceIn('{{$randomUrl}}'));",
											"    pm.environment.set(\"businessDescription\", pm.variables.replaceIn('{{$randomLoremSentence}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Industry and Internet] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"industryUuid\": \"{{industryUuid}}\",\n    \"businessDescription\": \"{{businessDescription}}\",\n    \"website\": \"{{website}}\",\n    \"businessWebpage\": []\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Percentage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let percentage = utils.randomPercentage();",
											"",
											"pm.environment.set(\"percentage\", percentage);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Percentage] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Business Information By Application Uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Business Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/applications/{{applicationUuid}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"applications",
										"{{applicationUuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Google Map Verify",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Google Map Verify] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Google Map Verify] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"address1\");",
											"    pm.expect(jsonData).to.have.property(\"address2\");",
											"    pm.expect(jsonData).to.have.property(\"city\");",
											"    pm.expect(jsonData).to.have.property(\"state\");",
											"    pm.expect(jsonData).to.have.property(\"zip4\");",
											"    pm.expect(jsonData).to.have.property(\"zip5\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"googleAddressDTO\": {\n        \"address\": \"12040 Aurora Ave N, Seattle, WA 98133, USA\",\n        \"addressComponents\": [\n            {\n                \"long_name\": \"12040\",\n                \"short_name\": \"12040\",\n                \"types\": [\n                    \"street_number\"\n                ]\n            },\n            {\n                \"long_name\": \"Aurora Avenue North\",\n                \"short_name\": \"Aurora Ave N\",\n                \"types\": [\n                    \"route\"\n                ]\n            },\n            {\n                \"long_name\": \"Northwest Seattle\",\n                \"short_name\": \"Northwest Seattle\",\n                \"types\": [\n                    \"neighborhood\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Seattle\",\n                \"short_name\": \"Seattle\",\n                \"types\": [\n                    \"locality\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"King County\",\n                \"short_name\": \"King County\",\n                \"types\": [\n                    \"administrative_area_level_2\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Washington\",\n                \"short_name\": \"WA\",\n                \"types\": [\n                    \"administrative_area_level_1\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"United States\",\n                \"short_name\": \"US\",\n                \"types\": [\n                    \"country\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"98133\",\n                \"short_name\": \"98133\",\n                \"types\": [\n                    \"postal_code\"\n                ]\n            },\n            {\n                \"long_name\": \"8250\",\n                \"short_name\": \"8250\",\n                \"types\": [\n                    \"postal_code_suffix\"\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{apiURL}}/core/public/address/google/verify",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"public",
										"address",
										"google",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Business Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business Address] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": {\n        \"addressLine1\": \"12040 Aurora Avenue North\",\n        \"addressLine2\": \"\",\n        \"zipCode\": \"98133\",\n        \"city\": \"Seattle\",\n        \"state\": \"WA\"\n    },\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - EIN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ein = utils.randomEIN();",
											"",
											"    pm.environment.set(\"ein\", ein);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - EIN] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Business Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Business Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Sentilink",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Sentilink] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Sentilink] Response body status is SENTILINK_GREEN\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SENTILINK_GREEN\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zoneBySsn\": \"111-11-1100\",\n    \"firstName\": \"ANNE\",\n    \"lastName\": \"APPLEBEE\",\n    \"birthDate\": \"1988-01-01\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/senti-link",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"senti-link"
									]
								}
							},
							"response": []
						},
						{
							"name": "Factor Trust",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Factor Trust] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Factor Trust] Response body status is FACTOR_TRUST_APPROVED\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"FACTOR_TRUST_APPROVED\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "COMMERCIAL"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "0"
									},
									{
										"key": "X-User-UUID",
										"value": "3e11e51e-d929-488e-895a-7a5b2633bbb0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backupWithholding\": false,\n    \"fatcaCode\": null,\n    \"usCitizen\": true,\n    \"beneficiaryChecked\": true,\n    \"taxIdNumberChecked\": true,\n    \"beneficiary\": null,\n    \"military\": null\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/factor-trust",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"factor-trust"
									]
								}
							},
							"response": []
						},
						{
							"name": "Middesk Evaluation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Middesk Evaluation] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Middesk Evaluation] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Middesk Evaluation] Response body data must have ${objectId}, ${status} and ${status} is open\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data).to.have.property(\"objectId\");",
											"    pm.expect(jsonData.data.status).to.equal(\"open\");",
											"    pm.environment.set(\"objectId\", jsonData.data.objectId);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Middesk Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Update Middesk Status] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Update Middesk Status] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Update Middesk Status] Response body data must have ${status} property and ${status} is approved\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data.status).to.equal(\"approved\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"approved\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk/{{objectId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk",
										"{{objectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Middesk Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Middesk Status] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Middesk Status] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Middesk Status] Response body data must have ${status} property and ${status} is approved\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data.status).to.equal(\"approved\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk/{{objectId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk",
										"{{objectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Add Payment] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Add Payment] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let url = `${environment.vantivUrl}/eProtect/paypage?paypageId=${environment.paypageId}&reportGroup=${environment.reportGroup}&id=${utils.randomId(25)}&orderId=${utils.randomId(18)}&encryptedAccount=B1e7Fq3GebNZF1%2BcKncvwuyxhMqhjWUTF2PeGSTR3M6TIybqT1Ent3Ev4sZY6zikIEyKwwFLvG5wtCh1D3j6itRmiUeJ1V8tQ95SRpcux2xVW1HGz%2F5yPzJsH2HQHeYLbwfZH7uyYn3zOEn3UjnNauWrkKjrevB9PrJwGC%2Bp90yADwWokSclIZTZCQxE4wsW02VggNcds9ghXJ4gWfufZeceOWWEqIDk77SULECDmo9qDuhtQ5VXoWFeO2DzN8H%2BFuuuUSqfYYkzxEln03AhCxglz%2BF6w%2FlYLP6ZcPiByLuElgtm5kUbSxn65mui7JxyQqYia6m4YKAC3sVYM3tSbA%3D%3D&pciNonSensitive=false&encryptedCvv=ZsTj6%2BO9kPaCSE6pttrRgIBUfexI2SKFr0BAslN5U9ANz45BxP2%2FHdN4iR4hSB%2FycNtF69QxIzXBXLURN7cnG6Yt9pEdHqqrn5LH4l9DbgZcCyOsO5tz9PWdqdd5UPURsWegaIZXec99Xj%2BFy0JjN%2BqYUpH8Vop%2BB36rug%2BE%2FwekAEsQoFxRCt6HcqDU634jXkPiKvAuIIkW9yFoTWesRWiboiObkEftGNKAn3O5UeTNlbw8%2BRuAg4TmLjf70rwC4kSEYgjt9CVXdG41lz%2BB35A3QBdn060kActCHc%2B7b3cMlacsU8qdIpPA4oWUgzbMw6Crylu80NRNckWu%2B8g8gw%3D%3D&publicKeyId=1&requestType=eProtect&targetServer=primary&jsoncallback=jsonp1616596537869`;",
											"",
											"// Link Worldpay",
											"pm.sendRequest({",
											"    url,",
											"    method: 'GET'",
											"}, (err, responseBody) => {",
											"    if (err) {",
											"        console.log(\"[eProtectRequest error: ]\", err);",
											"    } else {",
											"        var res = responseBody.text();",
											"        var getdata = res.slice (res.indexOf(\"(\") + 1, res.indexOf(\")\"));",
											"        var payment = JSON.parse(getdata);",
											"",
											"        pm.test(\"[Add Payment] Link vantiv\", function () {",
											"            pm.expect(payment).to.have.property(\"response\");",
											"            pm.expect(payment.response).to.equal(\"870\");",
											"        });",
											"",
											"        pm.environment.set(\"paypageRegistrationId\", payment.paypageRegistrationId);",
											"        pm.environment.set(\"vantivTxnId\", payment.vantivTxnId);",
											"        pm.environment.set(\"vativId\", payment.id);",
											"        pm.environment.set(\"vantivOrderId\", payment.orderId);",
											"    }",
											"    ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"paypageRegistrationId\": \"{{paypageRegistrationId}}\",\n    \"bin\": \"411111\",\n    \"type\": \"VI\",\n    \"targetServer\": \"primary\",\n    \"vantivTxnId\": \"{{vantivTxnId}}\",\n    \"orderId\": \"{{vantivOrderId}}\",\n    \"response\": \"870\",\n    \"responseTime\": \"2021-03-23 08:51:27\",\n    \"message\": \"Success\",\n    \"reportGroup\": \"{{reportGroup}}\",\n    \"id\": \"{{vativId}}\",\n    \"firstSix\": \"411111\",\n    \"lastFour\": \"1111\",\n    \"name\": \"Cartes Bancaires\",\n    \"billingZipCode\": \"23454\",\n    \"expMonth\": \"11\",\n    \"expYear\": \"24\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/add-payment",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"add-payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pre Sign Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Pre Sign Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Pre Sign Contract] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/pre-sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"pre-sign-contract"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Contract] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Contract] Response data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"sign-contract"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Sign Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Sign Contract] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Sign Contract] Response body data must have ${accountCreated}, ${chargeApproved} properties and all of them are boolean\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"accountCreated\");",
											"    pm.expect(jsonData.data).to.have.property(\"chargeApproved\");",
											"    pm.expect(jsonData.data.accountCreated).to.have.a(\"boolean\");",
											"    pm.expect(jsonData.data.chargeApproved).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"sign-contract"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Green Zone - Plaid Same Day Micro-deposits",
					"item": [
						{
							"name": "Maintenance Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Maintenance Config] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Maintenance Config] Response body should have ${isTurnOn} property\", function () {",
											"    pm.expect(jsonData).to.have.property(\"isTurnOn\");",
											"    pm.expect(jsonData.isTurnOn).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/public/maintenance/configuration",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"maintenance",
										"configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Welcome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Welcome] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Welcome] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Welcome] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											"",
											"pm.environment.set(\"leadUuid\", jsonData.data.leadUuid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let stringRandom = utils.makeid(6);",
											"let envName = pm.environment.get(\"envName\");",
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"email\", `testing_${envName}_${stringRandom}@yopmail.com`);",
											"    pm.environment.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
											"    pm.environment.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Date  of Birth",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode) || !pm.environment.get(\"dateOfBirth\")) {",
											"    pm.environment.set(\"dateOfBirth\", \"1990-11-11\");",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Date of Birth] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"dateOfBirth\": \"{{dateOfBirth}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mobile Phone",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mobilePhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Mobile Phone] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body data must have leadUuid property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"mobilePhoneNumber\": \"{{mobilePhoneNumber}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Personal Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Personal Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"addressLine1\": \"12040 AURORA AVE n\",\n    \"addressLine2\": \"\",\n    \"zipCode\": 98133,\n    \"city\": \"seattle\",\n    \"state\": \"WA\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"password\", \"Test!234\");",
											"}",
											"",
											"pm.environment.set(\"baseUrl\", environment.envName === 'local' ? 'http://localhost:4400' : `https://csc-${environment.envName}-customer-ui.business.creditstrong.com`);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"pm.test(\"[Password] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Password] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Password] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baseUrl\": \"{{baseUrl}}\",\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"password\": \"{{password}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth - Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Auth - Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Auth - Token] Response body data must have ${access_token} and ${user_uuid} properties\", function () {",
											"    pm.expect(jsonData).to.have.property(\"access_token\");",
											"    pm.expect(jsonData).to.have.property(\"user_uuid\");",
											"});",
											"",
											"pm.environment.set(\"userUuid\", jsonData.user_uuid);",
											"pm.environment.set(\"accessToken\", jsonData.access_token);",
											"pm.environment.set(\"ked\", jsonData.ked);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-type",
										"value": "application/x-www-form-urlencoded; charset=UTF-8"
									},
									{
										"key": "Authorization",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "customer-portal",
											"type": "text"
										},
										{
											"key": "baseUrl",
											"value": "{{baseUrl}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiURL}}/auth/oauth/token",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"auth",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Applicants By Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"pm.environment.set(\"emailEncrypt\", utils.encrypt(environment.email));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Applicants By Email] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Applicants By Email] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData).to.have.property(\"uuid\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationUUID\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationId\");",
											"    pm.expect(jsonData).to.have.property(\"customerUUID\");",
											"    pm.expect(jsonData).to.have.property(\"customerId\");",
											"});",
											"",
											"pm.environment.set(\"applicantId\", jsonData.id);",
											"pm.environment.set(\"applicantUuid\", jsonData.uuid);",
											"pm.environment.set(\"applicationUuid\", jsonData.latestApplicationUUID);",
											"pm.environment.set(\"applicationId\", jsonData.latestApplicationId);",
											"pm.environment.set(\"customerUUID\", jsonData.customerUUID);",
											"pm.environment.set(\"customerId\", jsonData.customerId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/applicants/email?email={{emailEncrypt}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"applicants",
										"email"
									],
									"query": [
										{
											"key": "email",
											"value": "{{emailEncrypt}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Social Security Number",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ssn = utils.randomSSN();",
											"",
											"    pm.environment.set(\"ssn\", ssn);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Social Security Number] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body data must have ${csApplicantUuid} and ${csApplicationUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicantUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicationUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssn\": \"{{ssn}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/ssn",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"ssn"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Suffixes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"",
											"const index = utils.randomize(jsonData);",
											"const suffix = jsonData[index].code;",
											"",
											"pm.test(\"[Get Suffixes] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Suffixes] Response data must be array\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});",
											"",
											"pm.environment.set(\"suffix\", suffix);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/suffixes",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"suffixes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/getPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"getPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body data must have ${applicationUuid} and ${applicantUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"applicantUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"ssn\": \"{{ssn}}\",\n    \"birthDate\": \"{{dateOfBirth}}\",\n    \"middleInitial\": null,\n    \"suffix\": \"{{suffix}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/verifyPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"verifyPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let productList = [];",
											"",
											"jsonData.forEach(product => {",
											"    if (product.productCodeType === \"COMMERCIAL\" && !product.disabled) {",
											"        productList.push(product);",
											"    }",
											"});",
											"const index = utils.randomize(productList);",
											"const productSelected = productList[index].uuid;",
											"",
											"pm.environment.set(\"productUuid\", productSelected);",
											"",
											"pm.test(\"[Get Product List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Product List] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/products",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Selected Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Selected Product] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Selected Product] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productUuid\": \"{{productUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/selected-offer",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"selected-offer"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Company Name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"companyLegalName\", pm.variables.replaceIn('{{$randomCompanyName}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - Company Name] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Industry List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let industryList = [];",
											"",
											"jsonData.forEach(industry => {",
											"    if (industry.isEnabled && industry.isSupported) {",
											"        industryList.push(industry);",
											"    }",
											"});",
											"const index = utils.randomize(industryList);",
											"const industrySelected = industryList[index].uuid;",
											"",
											"pm.environment.set(\"industryUuid\", industrySelected);",
											"",
											"pm.test(\"[Business - Get Industry List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Get Industry List] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/industry/industries",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"industry",
										"industries"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Industry and Internet",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"website\", pm.variables.replaceIn('{{$randomUrl}}'));",
											"    pm.environment.set(\"businessDescription\", pm.variables.replaceIn('{{$randomLoremSentence}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Industry and Internet] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"industryUuid\": \"{{industryUuid}}\",\n    \"businessDescription\": \"{{businessDescription}}\",\n    \"website\": \"{{website}}\",\n    \"businessWebpage\": []\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Percentage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let percentage = utils.randomPercentage();",
											"",
											"pm.environment.set(\"percentage\", percentage);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Percentage] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Business Information By Application Uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Business Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/applications/{{applicationUuid}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"applications",
										"{{applicationUuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Google Map Verify",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Google Map Verify] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Google Map Verify] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"address1\");",
											"    pm.expect(jsonData).to.have.property(\"address2\");",
											"    pm.expect(jsonData).to.have.property(\"city\");",
											"    pm.expect(jsonData).to.have.property(\"state\");",
											"    pm.expect(jsonData).to.have.property(\"zip4\");",
											"    pm.expect(jsonData).to.have.property(\"zip5\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"googleAddressDTO\": {\n        \"address\": \"12040 Aurora Ave N, Seattle, WA 98133, USA\",\n        \"addressComponents\": [\n            {\n                \"long_name\": \"12040\",\n                \"short_name\": \"12040\",\n                \"types\": [\n                    \"street_number\"\n                ]\n            },\n            {\n                \"long_name\": \"Aurora Avenue North\",\n                \"short_name\": \"Aurora Ave N\",\n                \"types\": [\n                    \"route\"\n                ]\n            },\n            {\n                \"long_name\": \"Northwest Seattle\",\n                \"short_name\": \"Northwest Seattle\",\n                \"types\": [\n                    \"neighborhood\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Seattle\",\n                \"short_name\": \"Seattle\",\n                \"types\": [\n                    \"locality\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"King County\",\n                \"short_name\": \"King County\",\n                \"types\": [\n                    \"administrative_area_level_2\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Washington\",\n                \"short_name\": \"WA\",\n                \"types\": [\n                    \"administrative_area_level_1\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"United States\",\n                \"short_name\": \"US\",\n                \"types\": [\n                    \"country\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"98133\",\n                \"short_name\": \"98133\",\n                \"types\": [\n                    \"postal_code\"\n                ]\n            },\n            {\n                \"long_name\": \"8250\",\n                \"short_name\": \"8250\",\n                \"types\": [\n                    \"postal_code_suffix\"\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{apiURL}}/core/public/address/google/verify",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"public",
										"address",
										"google",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Business Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business Address] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": {\n        \"addressLine1\": \"12040 Aurora Avenue North\",\n        \"addressLine2\": \"\",\n        \"zipCode\": \"98133\",\n        \"city\": \"Seattle\",\n        \"state\": \"WA\"\n    },\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - EIN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ein = utils.randomEIN();",
											"",
											"    pm.environment.set(\"ein\", ein);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - EIN] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Business Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Business Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Sentilink",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Sentilink] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Sentilink] Response body status is SENTILINK_GREEN\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SENTILINK_GREEN\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zoneBySsn\": \"111-11-1100\",\n    \"firstName\": \"ANNE\",\n    \"lastName\": \"APPLEBEE\",\n    \"birthDate\": \"1988-01-01\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/senti-link",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"senti-link"
									]
								}
							},
							"response": []
						},
						{
							"name": "Factor Trust",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Factor Trust] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Factor Trust] Response body status is FACTOR_TRUST_APPROVED\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"FACTOR_TRUST_APPROVED\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "COMMERCIAL"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "0"
									},
									{
										"key": "X-User-UUID",
										"value": "3e11e51e-d929-488e-895a-7a5b2633bbb0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backupWithholding\": false,\n    \"fatcaCode\": null,\n    \"usCitizen\": true,\n    \"beneficiaryChecked\": true,\n    \"taxIdNumberChecked\": true,\n    \"beneficiary\": null,\n    \"military\": null\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/factor-trust",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"factor-trust"
									]
								}
							},
							"response": []
						},
						{
							"name": "Middesk Evaluation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Middesk Evaluation] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Middesk Evaluation] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Middesk Evaluation] Response body data must have ${objectId}, ${status} and ${status} is open\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data).to.have.property(\"objectId\");",
											"    pm.expect(jsonData.data.status).to.equal(\"open\");",
											"    pm.environment.set(\"objectId\", jsonData.data.objectId);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Middesk Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Update Middesk Status] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Update Middesk Status] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Update Middesk Status] Response body data must have ${status} property and ${status} is approved\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data.status).to.equal(\"approved\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"approved\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk/{{objectId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk",
										"{{objectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Middesk Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Middesk Status] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Middesk Status] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Middesk Status] Response body data must have ${status} property and ${status} is approved\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data.status).to.equal(\"approved\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk/{{objectId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk",
										"{{objectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plaid - Create Plaid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Plaid - Create Plaid Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Plaid - Create Plaid Token] Response body data must have ${link_token} property and ${link_token} must have value\", function () {",
											"    pm.expect(jsonData).to.have.property(\"link_token\");",
											"    pm.expect(jsonData.link_token).to.be.not.empty;",
											"});",
											"",
											"pm.environment.set('plaidLinkToken', jsonData.link_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/customer/customers/plaid/create/link/token",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"customer",
										"customers",
										"plaid",
										"create",
										"link",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plaid - Get Link Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Plaid - Get Link Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Plaid - Get Link Token] must have ${link_session_id}\", function () {",
											"    pm.expect(jsonData).to.have.property(\"link_session_id\");",
											"    pm.expect(jsonData.link_session_id).to.be.not.empty;",
											"});",
											"",
											"pm.environment.set('linkSessionIdPlaid', jsonData.link_session_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"link_open_id\": \"d2b7d21b-0edf-4b34-8420-777c8a244605\",\n    \"link_persistent_id\": \"db0dc391-ef22-481c-a197-077ba2207083\",\n    \"link_version\": \"2.0.956\",\n    \"link_token\": \"{{plaidLinkToken}}\",\n    \"country_codes\": [\n        \"US\"\n    ],\n    \"initial_products\": [\n        \"auth\"\n    ],\n    \"user\": {},\n    \"options\": {},\n    \"integration_mode\": 1\n}"
								},
								"url": {
									"raw": "https://sandbox.plaid.com/link/client/get",
									"protocol": "https",
									"host": [
										"sandbox",
										"plaid",
										"com"
									],
									"path": [
										"link",
										"client",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plaid - Create With Microdeposits",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"[Plaid - Create With Microdeposits] Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"[Plaid - Create With Microdeposits] must have ${public_token}\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"public_token\");\r",
											"    pm.expect(jsonData.public_token).to.be.not.empty;\r",
											"});\r",
											"\r",
											"pm.environment.set(\"plaidAccountId\", jsonData.accounts[0].account_id);\r",
											"pm.environment.set(\"plaidCheckingAccountName\", jsonData.accounts[0].name);\r",
											"pm.environment.set(\"plaidPublicToken\", jsonData.public_token);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"plaidAccountNumber\", \"1111222233330000\");",
											"    pm.environment.set(\"plaidRoutingNumber\", \"021000021\");",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"link_token\": \"{{plaidLinkToken}}\",\r\n    \"link_open_id\": \"d2b7d21b-0edf-4b34-8420-777c8a244605\",\r\n    \"link_persistent_id\": \"db0dc391-ef22-481c-a197-077ba2207083\",\r\n    \"link_session_id\": \"{{linkSessionIdPlaid}}\",\r\n    \"account_subtype\": \"checking\",\r\n    \"class_type\": \"personal\",\r\n    \"initial_products\": [\r\n        \"auth\"\r\n    ],\r\n    \"display_language\": \"en\",\r\n    \"numbers\": {\r\n        \"ach\": {\r\n            \"account\": \"{{plaidAccountNumber}}\",\r\n            \"routing\": \"{{plaidRoutingNumber}}\"\r\n        }\r\n    },\r\n    \"user\": {\r\n        \"legal_name\": \"{{firstName}} {{lastName}}\"\r\n    },\r\n    \"options\": {\r\n        \"use_public_token_nonce\": false\r\n    },\r\n    \"debit_enabled\": true\r\n}"
								},
								"url": {
									"raw": "https://sandbox.plaid.com/link/item/create_with_microdeposits",
									"protocol": "https",
									"host": [
										"sandbox",
										"plaid",
										"com"
									],
									"path": [
										"link",
										"item",
										"create_with_microdeposits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Add Payment] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Add Payment] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountName\": \"{{plaidCheckingAccountName}}\",\n    \"plaidAccountId\": \"{{plaidAccountId}}\",\n    \"plaidItemPublicToken\": \"{{plaidPublicToken}}\",\n    \"plaidVerificationStatus\": \"PENDING_MANUAL_VERIFICATION\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/add-payment",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"add-payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pre Sign Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Pre Sign Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Pre Sign Contract] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/pre-sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"pre-sign-contract"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Contract] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Contract] Response data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"sign-contract"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Sign Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Sign Contract] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Sign Contract] Response body data must have ${accountCreated}, ${chargeApproved} properties and all of them are boolean\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"accountCreated\");",
											"    pm.expect(jsonData.data).to.have.property(\"chargeApproved\");",
											"    pm.expect(jsonData.data.accountCreated).to.have.a(\"boolean\");",
											"    pm.expect(jsonData.data.chargeApproved).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"sign-contract"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Green Zone - Plaid Automated  Micro-deposits",
					"item": [
						{
							"name": "Maintenance Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Maintenance Config] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Maintenance Config] Response body should have ${isTurnOn} property\", function () {",
											"    pm.expect(jsonData).to.have.property(\"isTurnOn\");",
											"    pm.expect(jsonData.isTurnOn).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/public/maintenance/configuration",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"maintenance",
										"configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Welcome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Welcome] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Welcome] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Welcome] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											"",
											"pm.environment.set(\"leadUuid\", jsonData.data.leadUuid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let stringRandom = utils.makeid(6);",
											"let envName = pm.environment.get(\"envName\");",
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"email\", `testing_${envName}_${stringRandom}@yopmail.com`);",
											"    pm.environment.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
											"    pm.environment.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Date  of Birth",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode) || !pm.environment.get(\"dateOfBirth\")) {",
											"    pm.environment.set(\"dateOfBirth\", \"1990-11-11\");",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Date of Birth] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"dateOfBirth\": \"{{dateOfBirth}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mobile Phone",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mobilePhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Mobile Phone] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body data must have leadUuid property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"mobilePhoneNumber\": \"{{mobilePhoneNumber}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Personal Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Personal Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"addressLine1\": \"12040 AURORA AVE n\",\n    \"addressLine2\": \"\",\n    \"zipCode\": 98133,\n    \"city\": \"seattle\",\n    \"state\": \"WA\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"password\", \"Test!234\");",
											"}",
											"",
											"pm.environment.set(\"baseUrl\", environment.envName === 'local' ? 'http://localhost:4400' : `https://csc-${environment.envName}-customer-ui.business.creditstrong.com`);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"pm.test(\"[Password] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Password] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Password] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baseUrl\": \"{{baseUrl}}\",\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"password\": \"{{password}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth - Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Auth - Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Auth - Token] Response body data must have ${access_token} and ${user_uuid} properties\", function () {",
											"    pm.expect(jsonData).to.have.property(\"access_token\");",
											"    pm.expect(jsonData).to.have.property(\"user_uuid\");",
											"});",
											"",
											"pm.environment.set(\"userUuid\", jsonData.user_uuid);",
											"pm.environment.set(\"accessToken\", jsonData.access_token);",
											"pm.environment.set(\"ked\", jsonData.ked);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-type",
										"value": "application/x-www-form-urlencoded; charset=UTF-8"
									},
									{
										"key": "Authorization",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "customer-portal",
											"type": "text"
										},
										{
											"key": "baseUrl",
											"value": "{{baseUrl}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiURL}}/auth/oauth/token",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"auth",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Applicants By Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"pm.environment.set(\"emailEncrypt\", utils.encrypt(environment.email));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Applicants By Email] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Applicants By Email] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData).to.have.property(\"uuid\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationUUID\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationId\");",
											"    pm.expect(jsonData).to.have.property(\"customerUUID\");",
											"    pm.expect(jsonData).to.have.property(\"customerId\");",
											"});",
											"",
											"pm.environment.set(\"applicantId\", jsonData.id);",
											"pm.environment.set(\"applicantUuid\", jsonData.uuid);",
											"pm.environment.set(\"applicationUuid\", jsonData.latestApplicationUUID);",
											"pm.environment.set(\"applicationId\", jsonData.latestApplicationId);",
											"pm.environment.set(\"customerUUID\", jsonData.customerUUID);",
											"pm.environment.set(\"customerId\", jsonData.customerId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/applicants/email?email={{emailEncrypt}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"applicants",
										"email"
									],
									"query": [
										{
											"key": "email",
											"value": "{{emailEncrypt}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Social Security Number",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ssn = utils.randomSSN();",
											"",
											"    pm.environment.set(\"ssn\", ssn);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Social Security Number] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body data must have ${csApplicantUuid} and ${csApplicationUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicantUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicationUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssn\": \"{{ssn}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/ssn",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"ssn"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Suffixes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"",
											"const index = utils.randomize(jsonData);",
											"const suffix = jsonData[index].code;",
											"",
											"pm.test(\"[Get Suffixes] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Suffixes] Response data must be array\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});",
											"",
											"pm.environment.set(\"suffix\", suffix);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/suffixes",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"suffixes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/getPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"getPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body data must have ${applicationUuid} and ${applicantUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"applicantUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"ssn\": \"{{ssn}}\",\n    \"birthDate\": \"{{dateOfBirth}}\",\n    \"middleInitial\": null,\n    \"suffix\": \"{{suffix}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/verifyPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"verifyPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let productList = [];",
											"",
											"jsonData.forEach(product => {",
											"    if (product.productCodeType === \"COMMERCIAL\" && !product.disabled) {",
											"        productList.push(product);",
											"    }",
											"});",
											"const index = utils.randomize(productList);",
											"const productSelected = productList[index].uuid;",
											"",
											"pm.environment.set(\"productUuid\", productSelected);",
											"",
											"pm.test(\"[Get Product List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Product List] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/products",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Selected Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Selected Product] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Selected Product] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productUuid\": \"{{productUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/selected-offer",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"selected-offer"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Company Name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"companyLegalName\", pm.variables.replaceIn('{{$randomCompanyName}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - Company Name] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Industry List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let industryList = [];",
											"",
											"jsonData.forEach(industry => {",
											"    if (industry.isEnabled && industry.isSupported) {",
											"        industryList.push(industry);",
											"    }",
											"});",
											"const index = utils.randomize(industryList);",
											"const industrySelected = industryList[index].uuid;",
											"",
											"pm.environment.set(\"industryUuid\", industrySelected);",
											"",
											"pm.test(\"[Business - Get Industry List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Get Industry List] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/industry/industries",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"industry",
										"industries"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Industry and Internet",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"website\", pm.variables.replaceIn('{{$randomUrl}}'));",
											"    pm.environment.set(\"businessDescription\", pm.variables.replaceIn('{{$randomLoremSentence}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Industry and Internet] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"industryUuid\": \"{{industryUuid}}\",\n    \"businessDescription\": \"{{businessDescription}}\",\n    \"website\": \"{{website}}\",\n    \"businessWebpage\": []\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Percentage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let percentage = utils.randomPercentage();",
											"",
											"pm.environment.set(\"percentage\", percentage);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Percentage] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Business Information By Application Uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Business Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/applications/{{applicationUuid}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"applications",
										"{{applicationUuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Google Map Verify",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Google Map Verify] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Google Map Verify] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"address1\");",
											"    pm.expect(jsonData).to.have.property(\"address2\");",
											"    pm.expect(jsonData).to.have.property(\"city\");",
											"    pm.expect(jsonData).to.have.property(\"state\");",
											"    pm.expect(jsonData).to.have.property(\"zip4\");",
											"    pm.expect(jsonData).to.have.property(\"zip5\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"googleAddressDTO\": {\n        \"address\": \"12040 Aurora Ave N, Seattle, WA 98133, USA\",\n        \"addressComponents\": [\n            {\n                \"long_name\": \"12040\",\n                \"short_name\": \"12040\",\n                \"types\": [\n                    \"street_number\"\n                ]\n            },\n            {\n                \"long_name\": \"Aurora Avenue North\",\n                \"short_name\": \"Aurora Ave N\",\n                \"types\": [\n                    \"route\"\n                ]\n            },\n            {\n                \"long_name\": \"Northwest Seattle\",\n                \"short_name\": \"Northwest Seattle\",\n                \"types\": [\n                    \"neighborhood\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Seattle\",\n                \"short_name\": \"Seattle\",\n                \"types\": [\n                    \"locality\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"King County\",\n                \"short_name\": \"King County\",\n                \"types\": [\n                    \"administrative_area_level_2\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Washington\",\n                \"short_name\": \"WA\",\n                \"types\": [\n                    \"administrative_area_level_1\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"United States\",\n                \"short_name\": \"US\",\n                \"types\": [\n                    \"country\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"98133\",\n                \"short_name\": \"98133\",\n                \"types\": [\n                    \"postal_code\"\n                ]\n            },\n            {\n                \"long_name\": \"8250\",\n                \"short_name\": \"8250\",\n                \"types\": [\n                    \"postal_code_suffix\"\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{apiURL}}/core/public/address/google/verify",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"public",
										"address",
										"google",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Business Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business Address] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": {\n        \"addressLine1\": \"12040 Aurora Avenue North\",\n        \"addressLine2\": \"\",\n        \"zipCode\": \"98133\",\n        \"city\": \"Seattle\",\n        \"state\": \"WA\"\n    },\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - EIN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ein = utils.randomEIN();",
											"",
											"    pm.environment.set(\"ein\", ein);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - EIN] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Business Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Business Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Sentilink",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Sentilink] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Sentilink] Response body status is SENTILINK_GREEN\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SENTILINK_GREEN\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zoneBySsn\": \"111-11-1100\",\n    \"firstName\": \"ANNE\",\n    \"lastName\": \"APPLEBEE\",\n    \"birthDate\": \"1988-01-01\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/senti-link",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"senti-link"
									]
								}
							},
							"response": []
						},
						{
							"name": "Factor Trust",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Factor Trust] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Factor Trust] Response body status is FACTOR_TRUST_APPROVED\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"FACTOR_TRUST_APPROVED\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "COMMERCIAL"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "0"
									},
									{
										"key": "X-User-UUID",
										"value": "3e11e51e-d929-488e-895a-7a5b2633bbb0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backupWithholding\": false,\n    \"fatcaCode\": null,\n    \"usCitizen\": true,\n    \"beneficiaryChecked\": true,\n    \"taxIdNumberChecked\": true,\n    \"beneficiary\": null,\n    \"military\": null\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/factor-trust",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"factor-trust"
									]
								}
							},
							"response": []
						},
						{
							"name": "Middesk Evaluation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Middesk Evaluation] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Middesk Evaluation] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Middesk Evaluation] Response body data must have ${objectId}, ${status} and ${status} is open\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data).to.have.property(\"objectId\");",
											"    pm.expect(jsonData.data.status).to.equal(\"open\");",
											"    pm.environment.set(\"objectId\", jsonData.data.objectId);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Middesk Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Update Middesk Status] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Update Middesk Status] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Update Middesk Status] Response body data must have ${status} property and ${status} is approved\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data.status).to.equal(\"approved\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"approved\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk/{{objectId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk",
										"{{objectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Middesk Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Middesk Status] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Middesk Status] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Middesk Status] Response body data must have ${status} property and ${status} is approved\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data.status).to.equal(\"approved\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk/{{objectId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk",
										"{{objectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plaid - Create Plaid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Plaid - Create Plaid Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Plaid - Create Plaid Token] Response body data must have ${link_token} property and ${link_token} must have value\", function () {",
											"    pm.expect(jsonData).to.have.property(\"link_token\");",
											"    pm.expect(jsonData.link_token).to.be.not.empty;",
											"});",
											"",
											"pm.environment.set('plaidLinkToken', jsonData.link_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/customer/customers/plaid/create/link/token",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"customer",
										"customers",
										"plaid",
										"create",
										"link",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plaid - Get Link Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Plaid - Get Link Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Plaid - Get Link Token] must have ${link_session_id}\", function () {",
											"    pm.expect(jsonData).to.have.property(\"link_session_id\");",
											"    pm.expect(jsonData.link_session_id).to.be.not.empty;",
											"});",
											"",
											"pm.environment.set('linkSessionIdPlaid', jsonData.link_session_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"link_open_id\": \"d2b7d21b-0edf-4b34-8420-777c8a244605\",\n    \"link_persistent_id\": \"db0dc391-ef22-481c-a197-077ba2207083\",\n    \"link_version\": \"2.0.956\",\n    \"link_token\": \"{{plaidLinkToken}}\",\n    \"country_codes\": [\n        \"US\"\n    ],\n    \"initial_products\": [\n        \"auth\"\n    ],\n    \"user\": {},\n    \"options\": {},\n    \"integration_mode\": 1\n}"
								},
								"url": {
									"raw": "https://sandbox.plaid.com/link/client/get",
									"protocol": "https",
									"host": [
										"sandbox",
										"plaid",
										"com"
									],
									"path": [
										"link",
										"client",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plaid - Create Link Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Plaid - Create Link Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Plaid - Create Link Token] must have ${public_token}\", function () {",
											"    pm.expect(jsonData).to.have.property(\"public_token\");",
											"    pm.expect(jsonData.public_token).to.be.not.empty;",
											"});",
											"",
											"pm.environment.set(\"plaidCheckingAccountName\", jsonData.accounts[0].name);",
											"pm.environment.set(\"plaidAccountId\", jsonData.accounts[0].account_id);",
											"pm.environment.set(\"plaidPublicToken\", jsonData.public_token);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"link_token\": \"{{plaidLinkToken}}\",\n    \"credentials\": {\n        \"username\": \"user_good\",\n        \"password\": \"microdeposits_good\"\n    },\n    \"flexible_input_responses\": null,\n    \"initial_products\": [\n        \"auth\"\n    ],\n    \"institution_id\": \"ins_109512\",\n    \"link_open_id\": \"1875b117-643b-457e-b534-6ebb5ab6efc7\",\n    \"link_persistent_id\": \"db0dc391-ef22-481c-a197-077ba2207083\",\n    \"link_session_id\": \"{{linkSessionIdPlaid}}\",\n    \"display_language\": \"en\",\n    \"options\": {\n        \"link_configuration\": {\n            \"version\": \"1.0\",\n            \"userConfig\": {\n                \"clientName\": \"Plaid Walkthrough\",\n                \"countryCodes\": [\n                    \"US\"\n                ],\n                \"env\": \"sandbox\",\n                \"forceIframe\": true,\n                \"isPrivacyPortalItemAdd\": false,\n                \"isMobile\": false,\n                \"isParentInlineStylesheetSupported\": true,\n                \"isParentMetaViewportSet\": true,\n                \"isSimpleIntegration\": false,\n                \"isUsingOnEventCallback\": false,\n                \"isUsingOnExitCallback\": true,\n                \"isUsingOnLoadCallback\": true,\n                \"logInternalAnalytics\": false,\n                \"origin\": \"https://csc-qa-customer-ui.business.creditstrong.com\",\n                \"parentMetaViewport\": \"width=device-width, initial-scale=1\",\n                \"product\": [\n                    \"auth\"\n                ],\n                \"selectAccount\": false,\n                \"token\": \"{{plaidLinkToken}}\",\n                \"uniqueId\": \"1\",\n                \"version\": \"2.0.956\",\n                \"webhook\": null,\n                \"isLinkInitialize\": \"true\",\n                \"language\": \"en\",\n                \"accountSubtypes\": null,\n                \"paymentToken\": null,\n                \"institutionId\": null,\n                \"isInitializedWithLinkToken\": true,\n                \"optionalProducts\": [],\n                \"oauthRedirectUri\": null,\n                \"publicToken\": null,\n                \"apiVersion\": \"v2\",\n                \"customizations\": null\n            },\n            \"selectedInstitution\": {\n                \"accountLocked\": null,\n                \"accountSetup\": null,\n                \"brandName\": \"Houndstooth Bank\",\n                \"brandSubheading\": null,\n                \"colors\": {\n                    \"dark\": \"#003b57\",\n                    \"darker\": \"#001e37\",\n                    \"light\": \"#28617f\",\n                    \"primary\": \"#004966\"\n                },\n                \"fields\": [\n                    {\n                        \"label\": \"Username\",\n                        \"name\": \"username\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Password\",\n                        \"name\": \"password\",\n                        \"type\": \"password\"\n                    }\n                ],\n                \"forgottenPassword\": null,\n                \"healthStatus\": \"HEALTH_STATUS_GREEN\",\n                \"id\": \"ins_109512\",\n                \"inputSpec\": \"fixed\",\n                \"legacyInstitutionCode\": \"ins_109512\",\n                \"legacyInstitutionCodeOrType\": \"ins_109512\",\n                \"legacyInstitutionType\": null,\n                \"logo\": null,\n                \"mfaCodeType\": \"numeric\",\n                \"name\": \"Houndstooth Bank\",\n                \"nameBreak\": null,\n                \"oauth\": false,\n                \"oauthLoginUrl\": null,\n                \"isNoResponseFlexInput\": false,\n                \"products\": {\n                    \"auth\": false,\n                    \"connect\": true,\n                    \"income\": true,\n                    \"info\": true,\n                    \"account_verify\": true,\n                    \"assets\": true,\n                    \"bank_transfer\": false,\n                    \"ddta\": false,\n                    \"deposit_switch\": false,\n                    \"holdings\": false,\n                    \"income_verification\": false,\n                    \"investments_auth\": false,\n                    \"investments\": true,\n                    \"liabilities\": true,\n                    \"payment_initiation\": false,\n                    \"sba_verification\": false,\n                    \"liabilities_report\": false\n                },\n                \"type\": \"ins_109512\",\n                \"url\": \"https://www.plaid.com/\",\n                \"countryCodes\": [\n                    \"US\"\n                ],\n                \"mobileAuth\": false,\n                \"filterType\": \"FILTER_TYPE_NULL\"\n            },\n            \"isCustomInitializer\": false,\n            \"isPatch\": false\n        },\n        \"is_longtail_auth\": true,\n        \"use_public_token_nonce\": false\n    },\n    \"payment_token\": null\n}"
								},
								"url": {
									"raw": "https://sandbox.plaid.com/link/item/create",
									"protocol": "https",
									"host": [
										"sandbox",
										"plaid",
										"com"
									],
									"path": [
										"link",
										"item",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plaid -  Update item numbers with microdeposits",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"plaidAccountNumber\", \"1111222233330000\");",
											"    pm.environment.set(\"plaidRoutingNumber\", \"021000021\");",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "User-Agent",
										"value": "{{useragent-chrome}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{creditstrong-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"link_token\": \"{{plaidLinkToken}}\",\r\n    \"account_id\": \"{{plaidAccountId}}\",\r\n    \"link_open_id\": \"1875b117-643b-457e-b534-6ebb5ab6efc7\",\r\n    \"link_persistent_id\": \"db0dc391-ef22-481c-a197-077ba2207083\",\r\n    \"link_session_id\": \"{{linkSessionIdPlaid}}\",\r\n    \"class_type\": \"personal\",\r\n    \"public_token\": \"{{plaidPublicToken}}\",\r\n    \"numbers\": {\r\n        \"ach\": {\r\n            \"account\": \"{{plaidAccountNumber}}\",\r\n            \"routing\": \"{{plaidRoutingNumber}}\"\r\n        }\r\n    },\r\n    \"user\": {\r\n        \"legal_name\": \"{{firstName}} {{lastName}}\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://sandbox.plaid.com/link/item/numbers/update_with_microdeposits",
									"protocol": "https",
									"host": [
										"sandbox",
										"plaid",
										"com"
									],
									"path": [
										"link",
										"item",
										"numbers",
										"update_with_microdeposits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Add Payment] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Add Payment] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bankName\": \"Houndstooth Bank\",\n    \"accountName\": \"{{plaidCheckingAccountName}}\",\n    \"plaidAccountId\": \"{{plaidAccountId}}\",\n    \"plaidItemPublicToken\": \"{{plaidPublicToken}}\",\n    \"plaidVerificationStatus\": \"PENDING_AUTOMATIC_VERIFICATION\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/add-payment",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"add-payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pre Sign Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Pre Sign Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Pre Sign Contract] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/pre-sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"pre-sign-contract"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Contract] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Contract] Response data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"sign-contract"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Sign Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Sign Contract] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Sign Contract] Response body data must have ${accountCreated}, ${chargeApproved} properties and all of them are boolean\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"accountCreated\");",
											"    pm.expect(jsonData.data).to.have.property(\"chargeApproved\");",
											"    pm.expect(jsonData.data.accountCreated).to.have.a(\"boolean\");",
											"    pm.expect(jsonData.data.chargeApproved).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"sign-contract"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Green Zone - Plaid",
					"item": [
						{
							"name": "Maintenance Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Maintenance Config] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Maintenance Config] Response body should have ${isTurnOn} property\", function () {",
											"    pm.expect(jsonData).to.have.property(\"isTurnOn\");",
											"    pm.expect(jsonData.isTurnOn).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/public/maintenance/configuration",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"maintenance",
										"configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Welcome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Welcome] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Welcome] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Welcome] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											"",
											"pm.environment.set(\"leadUuid\", jsonData.data.leadUuid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let stringRandom = utils.makeid(6);",
											"let envName = pm.environment.get(\"envName\");",
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"email\", `testing_${envName}_${stringRandom}@yopmail.com`);",
											"    pm.environment.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
											"    pm.environment.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Date  of Birth",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode) || !pm.environment.get(\"dateOfBirth\")) {",
											"    pm.environment.set(\"dateOfBirth\", \"1990-11-11\");",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Date of Birth] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"dateOfBirth\": \"{{dateOfBirth}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mobile Phone",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mobilePhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Mobile Phone] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body data must have leadUuid property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"mobilePhoneNumber\": \"{{mobilePhoneNumber}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Personal Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Personal Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"addressLine1\": \"12040 AURORA AVE n\",\n    \"addressLine2\": \"\",\n    \"zipCode\": 98133,\n    \"city\": \"seattle\",\n    \"state\": \"WA\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"password\", \"Test!234\");",
											"}",
											"",
											"pm.environment.set(\"baseUrl\", environment.envName === 'local' ? 'http://localhost:4400' : `https://csc-${environment.envName}-customer-ui.business.creditstrong.com`);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"pm.test(\"[Password] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Password] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Password] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baseUrl\": \"{{baseUrl}}\",\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"password\": \"{{password}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth - Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Auth - Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Auth - Token] Response body data must have ${access_token} and ${user_uuid} properties\", function () {",
											"    pm.expect(jsonData).to.have.property(\"access_token\");",
											"    pm.expect(jsonData).to.have.property(\"user_uuid\");",
											"});",
											"",
											"pm.environment.set(\"userUuid\", jsonData.user_uuid);",
											"pm.environment.set(\"accessToken\", jsonData.access_token);",
											"pm.environment.set(\"ked\", jsonData.ked);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-type",
										"value": "application/x-www-form-urlencoded; charset=UTF-8"
									},
									{
										"key": "Authorization",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "customer-portal",
											"type": "text"
										},
										{
											"key": "baseUrl",
											"value": "{{baseUrl}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiURL}}/auth/oauth/token",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"auth",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Applicants By Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"pm.environment.set(\"emailEncrypt\", utils.encrypt(environment.email));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Applicants By Email] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Applicants By Email] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData).to.have.property(\"uuid\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationUUID\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationId\");",
											"    pm.expect(jsonData).to.have.property(\"customerUUID\");",
											"    pm.expect(jsonData).to.have.property(\"customerId\");",
											"});",
											"",
											"pm.environment.set(\"applicantId\", jsonData.id);",
											"pm.environment.set(\"applicantUuid\", jsonData.uuid);",
											"pm.environment.set(\"applicationUuid\", jsonData.latestApplicationUUID);",
											"pm.environment.set(\"applicationId\", jsonData.latestApplicationId);",
											"pm.environment.set(\"customerUUID\", jsonData.customerUUID);",
											"pm.environment.set(\"customerId\", jsonData.customerId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/applicants/email?email={{emailEncrypt}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"applicants",
										"email"
									],
									"query": [
										{
											"key": "email",
											"value": "{{emailEncrypt}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Social Security Number",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ssn = utils.randomSSN();",
											"",
											"    pm.environment.set(\"ssn\", ssn);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Social Security Number] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body data must have ${csApplicantUuid} and ${csApplicationUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicantUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicationUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssn\": \"{{ssn}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/ssn",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"ssn"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Suffixes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"",
											"const index = utils.randomize(jsonData);",
											"const suffix = jsonData[index].code;",
											"",
											"pm.test(\"[Get Suffixes] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Suffixes] Response data must be array\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});",
											"",
											"pm.environment.set(\"suffix\", suffix);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/suffixes",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"suffixes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/getPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"getPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body data must have ${applicationUuid} and ${applicantUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"applicantUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"ssn\": \"{{ssn}}\",\n    \"birthDate\": \"{{dateOfBirth}}\",\n    \"middleInitial\": null,\n    \"suffix\": \"{{suffix}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/verifyPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"verifyPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let productList = [];",
											"",
											"jsonData.forEach(product => {",
											"    if (product.productCodeType === \"COMMERCIAL\" && !product.disabled) {",
											"        productList.push(product);",
											"    }",
											"});",
											"const index = utils.randomize(productList);",
											"const productSelected = productList[index].uuid;",
											"",
											"pm.environment.set(\"productUuid\", productSelected);",
											"",
											"pm.test(\"[Get Product List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Product List] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/products",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Selected Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Selected Product] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Selected Product] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productUuid\": \"{{productUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/selected-offer",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"selected-offer"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Company Name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"companyLegalName\", pm.variables.replaceIn('{{$randomCompanyName}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - Company Name] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Industry List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let industryList = [];",
											"",
											"jsonData.forEach(industry => {",
											"    if (industry.isEnabled && industry.isSupported) {",
											"        industryList.push(industry);",
											"    }",
											"});",
											"const index = utils.randomize(industryList);",
											"const industrySelected = industryList[index].uuid;",
											"",
											"pm.environment.set(\"industryUuid\", industrySelected);",
											"",
											"pm.test(\"[Business - Get Industry List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Get Industry List] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/industry/industries",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"industry",
										"industries"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Industry and Internet",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"website\", pm.variables.replaceIn('{{$randomUrl}}'));",
											"    pm.environment.set(\"businessDescription\", pm.variables.replaceIn('{{$randomLoremSentence}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Industry and Internet] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"industryUuid\": \"{{industryUuid}}\",\n    \"businessDescription\": \"{{businessDescription}}\",\n    \"website\": \"{{website}}\",\n    \"businessWebpage\": []\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Percentage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let percentage = utils.randomPercentage();",
											"",
											"pm.environment.set(\"percentage\", percentage);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Percentage] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Business Information By Application Uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Business Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/applications/{{applicationUuid}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"applications",
										"{{applicationUuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Google Map Verify",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Google Map Verify] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Google Map Verify] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"address1\");",
											"    pm.expect(jsonData).to.have.property(\"address2\");",
											"    pm.expect(jsonData).to.have.property(\"city\");",
											"    pm.expect(jsonData).to.have.property(\"state\");",
											"    pm.expect(jsonData).to.have.property(\"zip4\");",
											"    pm.expect(jsonData).to.have.property(\"zip5\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"googleAddressDTO\": {\n        \"address\": \"12040 Aurora Ave N, Seattle, WA 98133, USA\",\n        \"addressComponents\": [\n            {\n                \"long_name\": \"12040\",\n                \"short_name\": \"12040\",\n                \"types\": [\n                    \"street_number\"\n                ]\n            },\n            {\n                \"long_name\": \"Aurora Avenue North\",\n                \"short_name\": \"Aurora Ave N\",\n                \"types\": [\n                    \"route\"\n                ]\n            },\n            {\n                \"long_name\": \"Northwest Seattle\",\n                \"short_name\": \"Northwest Seattle\",\n                \"types\": [\n                    \"neighborhood\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Seattle\",\n                \"short_name\": \"Seattle\",\n                \"types\": [\n                    \"locality\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"King County\",\n                \"short_name\": \"King County\",\n                \"types\": [\n                    \"administrative_area_level_2\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Washington\",\n                \"short_name\": \"WA\",\n                \"types\": [\n                    \"administrative_area_level_1\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"United States\",\n                \"short_name\": \"US\",\n                \"types\": [\n                    \"country\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"98133\",\n                \"short_name\": \"98133\",\n                \"types\": [\n                    \"postal_code\"\n                ]\n            },\n            {\n                \"long_name\": \"8250\",\n                \"short_name\": \"8250\",\n                \"types\": [\n                    \"postal_code_suffix\"\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{apiURL}}/core/public/address/google/verify",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"public",
										"address",
										"google",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Business Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business Address] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": {\n        \"addressLine1\": \"12040 Aurora Avenue North\",\n        \"addressLine2\": \"\",\n        \"zipCode\": \"98133\",\n        \"city\": \"Seattle\",\n        \"state\": \"WA\"\n    },\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - EIN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ein = utils.randomEIN();",
											"",
											"    pm.environment.set(\"ein\", ein);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - EIN] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Business Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Business Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Sentilink",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Sentilink] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Sentilink] Response body status is SENTILINK_GREEN\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SENTILINK_GREEN\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zoneBySsn\": \"111-11-1100\",\n    \"firstName\": \"ANNE\",\n    \"lastName\": \"APPLEBEE\",\n    \"birthDate\": \"1988-01-01\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/senti-link",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"senti-link"
									]
								}
							},
							"response": []
						},
						{
							"name": "Factor Trust",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Factor Trust] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Factor Trust] Response body status is FACTOR_TRUST_APPROVED\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"FACTOR_TRUST_APPROVED\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "COMMERCIAL"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "0"
									},
									{
										"key": "X-User-UUID",
										"value": "3e11e51e-d929-488e-895a-7a5b2633bbb0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backupWithholding\": false,\n    \"fatcaCode\": null,\n    \"usCitizen\": true,\n    \"beneficiaryChecked\": true,\n    \"taxIdNumberChecked\": true,\n    \"beneficiary\": null,\n    \"military\": null\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/factor-trust",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"factor-trust"
									]
								}
							},
							"response": []
						},
						{
							"name": "Middesk Evaluation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Middesk Evaluation] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Middesk Evaluation] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Middesk Evaluation] Response body data must have ${objectId}, ${status} and ${status} is open\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data).to.have.property(\"objectId\");",
											"    pm.expect(jsonData.data.status).to.equal(\"open\");",
											"    pm.environment.set(\"objectId\", jsonData.data.objectId);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Middesk Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Update Middesk Status] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Update Middesk Status] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Update Middesk Status] Response body data must have ${status} property and ${status} is approved\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data.status).to.equal(\"approved\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"approved\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk/{{objectId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk",
										"{{objectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Middesk Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Middesk Status] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Middesk Status] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Middesk Status] Response body data must have ${status} property and ${status} is approved\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data.status).to.equal(\"approved\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk/{{objectId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk",
										"{{objectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plaid - Create Plaid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Plaid - Create Plaid Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Plaid - Create Plaid Token] Response body data must have ${link_token} property and ${link_token} must have value\", function () {",
											"    pm.expect(jsonData).to.have.property(\"link_token\");",
											"    pm.expect(jsonData.link_token).to.be.not.empty;",
											"});",
											"",
											"pm.environment.set('plaidLinkToken', jsonData.link_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/customer/customers/plaid/create/link/token",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"customer",
										"customers",
										"plaid",
										"create",
										"link",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plaid - Get Link Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Plaid - Get Link Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Plaid - Get Link Token] must have ${link_session_id}\", function () {",
											"    pm.expect(jsonData).to.have.property(\"link_session_id\");",
											"    pm.expect(jsonData.link_session_id).to.be.not.empty;",
											"});",
											"",
											"pm.environment.set('linkSessionIdPlaid', jsonData.link_session_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"link_open_id\": \"d2b7d21b-0edf-4b34-8420-777c8a244605\",\n    \"link_persistent_id\": \"db0dc391-ef22-481c-a197-077ba2207083\",\n    \"link_version\": \"2.0.956\",\n    \"link_token\": \"{{plaidLinkToken}}\",\n    \"country_codes\": [\n        \"US\"\n    ],\n    \"initial_products\": [\n        \"auth\"\n    ],\n    \"user\": {},\n    \"options\": {},\n    \"integration_mode\": 1\n}"
								},
								"url": {
									"raw": "https://sandbox.plaid.com/link/client/get",
									"protocol": "https",
									"host": [
										"sandbox",
										"plaid",
										"com"
									],
									"path": [
										"link",
										"client",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Plaid - Create Link Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Plaid - Create Link Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Plaid - Create Link Token] must have ${public_token}\", function () {",
											"    pm.expect(jsonData).to.have.property(\"public_token\");",
											"    pm.expect(jsonData.public_token).to.be.not.empty;",
											"});",
											"",
											"pm.environment.set(\"plaidAccountId\", jsonData.accounts[0].account_id);",
											"pm.environment.set(\"plaidCheckingAccountName\", jsonData.accounts[0].name);",
											"pm.environment.set(\"plaidPublicToken\", jsonData.public_token);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"link_token\": \"{{plaidLinkToken}}\",\n    \"credentials\": {\n        \"username\": \"user_good\",\n        \"password\": \"pass_good\"\n    },\n    \"flexible_input_responses\": null,\n    \"initial_products\": [\n        \"auth\"\n    ],\n    \"institution_id\": \"ins_3\",\n    \"link_open_id\": \"d2b7d21b-0edf-4b34-8420-777c8a244605\",\n    \"link_persistent_id\": \"db0dc391-ef22-481c-a197-077ba2207083\",\n    \"link_session_id\": \"{{linkSessionIdPlaid}}\",\n    \"display_language\": \"en\",\n    \"options\": {\n        \"link_configuration\": {\n            \"version\": \"1.0\",\n            \"userConfig\": {\n                \"clientName\": \"Plaid Walkthrough\",\n                \"countryCodes\": [\n                    \"US\"\n                ],\n                \"env\": \"sandbox\",\n                \"forceIframe\": true,\n                \"isPrivacyPortalItemAdd\": false,\n                \"isMobile\": false,\n                \"isParentInlineStylesheetSupported\": true,\n                \"isParentMetaViewportSet\": true,\n                \"isSimpleIntegration\": false,\n                \"isUsingOnEventCallback\": false,\n                \"isUsingOnExitCallback\": true,\n                \"isUsingOnLoadCallback\": true,\n                \"logInternalAnalytics\": false,\n                \"origin\": \"https://csc-qa-customer-ui.business.creditstrong.com\",\n                \"parentMetaViewport\": \"width=device-width, initial-scale=1\",\n                \"product\": [\n                    \"auth\"\n                ],\n                \"selectAccount\": false,\n                \"token\": \"{{plaidLinkToken}}\",\n                \"uniqueId\": \"1\",\n                \"version\": \"2.0.956\",\n                \"webhook\": null,\n                \"isLinkInitialize\": \"true\",\n                \"language\": \"en\",\n                \"accountSubtypes\": null,\n                \"paymentToken\": null,\n                \"institutionId\": null,\n                \"isInitializedWithLinkToken\": true,\n                \"optionalProducts\": [],\n                \"oauthRedirectUri\": null,\n                \"publicToken\": null,\n                \"apiVersion\": \"v2\",\n                \"customizations\": null\n            },\n            \"selectedInstitution\": {\n                \"accountLocked\": null,\n                \"accountSetup\": \"https://secure01a.chase.com/web/auth/enrollment#/enroll/onlineEnrollment/gettingStarted/index?LOB=RGBLogon\",\n                \"brandName\": \"Chase\",\n                \"brandSubheading\": null,\n                \"colors\": {\n                    \"dark\": \"#085095\",\n                    \"darker\": \"#002e71\",\n                    \"light\": \"#3a72c1\",\n                    \"primary\": \"#095aa6\"\n                },\n                \"fields\": [\n                    {\n                        \"label\": \"User ID\",\n                        \"name\": \"username\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Password\",\n                        \"name\": \"password\",\n                        \"type\": \"password\"\n                    }\n                ],\n                \"forgottenPassword\": \"https://secure01a.chase.com/web/auth/#/logon/forgotLoginDetails/identifyCustomer?lang=en\",\n                \"healthStatus\": \"HEALTH_STATUS_GREEN\",\n                \"id\": \"chase\",\n                \"inputSpec\": \"fixed\",\n                \"legacyInstitutionCode\": null,\n                \"legacyInstitutionCodeOrType\": \"chase\",\n                \"legacyInstitutionType\": \"chase\",\n                \"logo\": \"iVBORw0KGgoAAAANSUhEUgAAAJgAAACYCAMAAAAvHNATAAAANlBMVEVHcEwOW6f///8IVqUPW6gQXKgRXKkPW6gTYKwPW6gbYqsxcbJ3ocza5vDs8/b0+Pmlwt1Vir96WNmQAAAACnRSTlMA////5HhLoCDGuAtrFAAABQNJREFUeNrt3H9vpCAQBuACIuC6wn7/L3vuXttb8UX5MdjJpVya3D9tngDiqDPz8dE67KiNcc4NgxDDsP7HGD3aj58cVhu3avAYnNE/wbOjSZredObauctCveGuWsAC1aet/6Ja7UTVcF1t1oiGYSxLVjdaO6sLjYZFT9OTIBuTpju2nCAdbmS2irTrOQ6iwxiaJ02LTqNtp9n07lJT7kjtNNtjGdUt3JfMMSvq5Uwvo3osMn+kZLXLaTDp9jyL7rJkBJGgGTKXeCw3teqKXH6VCTKZw/Pl/RM2y8KRnDNHcjk+t1YdTIZJUVycdsCX4rrlK2Fp2WBb11Hcnlu+FibvU/tq4nV8uaphXt5vrTJz4KqfMemTMtNyTny6GmBStsnwef99pLbA5JKSZdwDRnzH/j7qm2ByeSRkY9VBoaYgKWA+LTs9NNAFqUSQkmbG1t9PyFzNBguSDiZ9ItjQxRts42qHJWVj6QYLkhaWCtAOtpk5d5HAEjJTtJCxgQSWCNDG/CtyT6CB4QDNZV+RQEAEwzJ4ZdoJBazdYDBAm2zWzkcuOhgM0MD+t3kuQphHMns+YYlnRzoYDNDM6YS9Avy+MBig2bMJS7hoYUBmjifsK5DuDQNhkD2asLSLGuZ3MnMwYQcuahiYM5s+9NdA2l8G24WOOnWXVIfvcuhhcYDmEiv5HuBfA4vDIAtX8uXyJ7DHnXg88FoOyUAaw8REPjahLAwQg8yArSFL0b+/v5L8UYmA0aQD6RSs7zC7lVx3te8CU2dDgLW04A0FMWwKx2OO/qiNt1gnmLqdrUP0MWCMt1g32FJ2/Jv4sPg5mAwq3mRWsIDdp3iTaY4wHYVibGAmiizYwFx0o2QDe+5+wREmoliMD8xuQws+sHEb7vOB6e2DGx+Y4QtzPGHuF1YMG3jCBr4wwRMm+MJ+91gp7Pcc+29gv9FFKYxtoMg2tGb7MML28Y3vAy/bVwRsX6qwfQ3F9sUdk1edG9jA5+XwFmbi1+mKCWyMP0BkfO+7BGb3H98CB9gAvtRP890fjqUTbJn2H7m2eWPT7XjUfOLK+DLyPmMj/JAqSr6TkcHeM0OG/jU+2bDNBtHwY70iHxmwbe6FRekN6jETj+fH/RPY1uVwQsitrIAmK3XhBBZlhGicQnOSdtEBFmeq2FTSEbHsDBYnEpuDNK1wHczvknXtUWJbuG7GZnWcC7hN71HhKtiszrInzVY2XwML6jTf1J7kWHeBhdPcSZANOPvusH1as8lIacb5uZSwkJfSvLuVE8mSMJBsrfPS5svqTkthwOVyCw1IZBDmYQr4mFuaoRTBLR3PWGZqerKYhUAGYagK7qhmahT0MgSD1XljWcFUswzAoEuXlpg9AzRPCoNPgK6iKK8tQNvBYF3eeSXvKIhlMQzXC45VhZ+qJUCLYLhaUNeWyjYEaFsYdjUU8dbLtrC5wYVrzapDx3cYrmBsLRSf606Nd1irK1FoObfCoGsoa0YAa3mrArR/sADnq7SDCZYtDbDQuo5H12aF7AsG6xapWoSoCtknDNagVrnw+7zyYOMF87DdRXXvHtgep1D2Kn65IVdLtyN0cRbO2WvLT8Dl2vpD6TbZkuw/09zsCyynmkrec8IxEHT6svDqzH8zDK9GmrZt1Y3RUj1U6Do+Mm0lx7j5Ht92hYwbPDJuicm4iSjjtqucG9Vybu37vagMmyG/z12X9tF/APITr9CCbDsMAAAAAElFTkSuQmCC\",\n                \"mfaCodeType\": \"numeric\",\n                \"name\": \"Chase\",\n                \"nameBreak\": null,\n                \"oauth\": false,\n                \"oauthLoginUrl\": null,\n                \"isNoResponseFlexInput\": false,\n                \"products\": {\n                    \"auth\": true,\n                    \"connect\": true,\n                    \"income\": true,\n                    \"info\": true,\n                    \"account_verify\": true,\n                    \"assets\": true,\n                    \"bank_transfer\": false,\n                    \"ddta\": false,\n                    \"deposit_switch\": false,\n                    \"holdings\": false,\n                    \"income_verification\": false,\n                    \"investments_auth\": false,\n                    \"investments\": true,\n                    \"liabilities\": true,\n                    \"payment_initiation\": false,\n                    \"sba_verification\": false,\n                    \"liabilities_report\": false\n                },\n                \"type\": \"chase\",\n                \"url\": \"https://www.chase.com\",\n                \"countryCodes\": [\n                    \"US\"\n                ],\n                \"mobileAuth\": false,\n                \"filterType\": \"FILTER_TYPE_NULL\"\n            },\n            \"isCustomInitializer\": false,\n            \"isPatch\": false\n        },\n        \"use_public_token_nonce\": false\n    },\n    \"payment_token\": null\n}"
								},
								"url": {
									"raw": "https://sandbox.plaid.com/link/item/create",
									"protocol": "https",
									"host": [
										"sandbox",
										"plaid",
										"com"
									],
									"path": [
										"link",
										"item",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Add Payment] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Add Payment] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bankName\": \"Chase\",\n    \"accountName\": \"{{plaidCheckingAccountName}}\",\n    \"plaidAccountId\": \"{{plaidAccountId}}\",\n    \"plaidItemPublicToken\": \"{{plaidPublicToken}}\",\n    \"plaidVerificationStatus\": null\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/add-payment",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"add-payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pre Sign Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Pre Sign Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Pre Sign Contract] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/pre-sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"pre-sign-contract"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Contract] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Contract] Response data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"sign-contract"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Sign Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Sign Contract] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Sign Contract] Response body data must have ${accountCreated}, ${chargeApproved} properties and all of them are boolean\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"accountCreated\");",
											"    pm.expect(jsonData.data).to.have.property(\"chargeApproved\");",
											"    pm.expect(jsonData.data.accountCreated).to.have.a(\"boolean\");",
											"    pm.expect(jsonData.data.chargeApproved).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"sign-contract"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Yellow Zone",
					"item": [
						{
							"name": "Maintenance Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Maintenance Config] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Maintenance Config] Response body should have ${isTurnOn} property\", function () {",
											"    pm.expect(jsonData).to.have.property(\"isTurnOn\");",
											"    pm.expect(jsonData.isTurnOn).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/public/maintenance/configuration",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"maintenance",
										"configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Welcome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Welcome] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Welcome] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Welcome] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											"",
											"pm.environment.set(\"leadUuid\", jsonData.data.leadUuid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let stringRandom = utils.makeid(6);",
											"let envName = pm.environment.get(\"envName\");",
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"email\", `testing_${envName}_${stringRandom}@yopmail.com`);",
											"    pm.environment.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
											"    pm.environment.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Date  of Birth",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode) || !pm.environment.get(\"dateOfBirth\")) {",
											"    pm.environment.set(\"dateOfBirth\", \"1990-11-11\");",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Date of Birth] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"dateOfBirth\": \"{{dateOfBirth}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mobile Phone",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mobilePhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Mobile Phone] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body data must have leadUuid property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"mobilePhoneNumber\": \"{{mobilePhoneNumber}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Personal Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Personal Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"addressLine1\": \"12040 AURORA AVE n\",\n    \"addressLine2\": \"\",\n    \"zipCode\": 98133,\n    \"city\": \"seattle\",\n    \"state\": \"WA\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"password\", \"Test!234\");",
											"}",
											"",
											"pm.environment.set(\"baseUrl\", environment.envName === 'local' ? 'http://localhost:4400' : `https://csc-${environment.envName}-customer-ui.business.creditstrong.com`);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"pm.test(\"[Password] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Password] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Password] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baseUrl\": \"{{baseUrl}}\",\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"password\": \"{{password}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth - Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Auth - Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Auth - Token] Response body data must have ${access_token} and ${user_uuid} properties\", function () {",
											"    pm.expect(jsonData).to.have.property(\"access_token\");",
											"    pm.expect(jsonData).to.have.property(\"user_uuid\");",
											"});",
											"",
											"pm.environment.set(\"userUuid\", jsonData.user_uuid);",
											"pm.environment.set(\"accessToken\", jsonData.access_token);",
											"pm.environment.set(\"ked\", jsonData.ked);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-type",
										"value": "application/x-www-form-urlencoded; charset=UTF-8"
									},
									{
										"key": "Authorization",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "customer-portal",
											"type": "text"
										},
										{
											"key": "baseUrl",
											"value": "{{baseUrl}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiURL}}/auth/oauth/token",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"auth",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Applicants By Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"pm.environment.set(\"emailEncrypt\", utils.encrypt(environment.email));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Applicants By Email] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Applicants By Email] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData).to.have.property(\"uuid\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationUUID\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationId\");",
											"    pm.expect(jsonData).to.have.property(\"customerUUID\");",
											"    pm.expect(jsonData).to.have.property(\"customerId\");",
											"});",
											"",
											"pm.environment.set(\"applicantId\", jsonData.id);",
											"pm.environment.set(\"applicantUuid\", jsonData.uuid);",
											"pm.environment.set(\"applicationUuid\", jsonData.latestApplicationUUID);",
											"pm.environment.set(\"applicationId\", jsonData.latestApplicationId);",
											"pm.environment.set(\"customerUUID\", jsonData.customerUUID);",
											"pm.environment.set(\"customerId\", jsonData.customerId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/applicants/email?email={{emailEncrypt}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"applicants",
										"email"
									],
									"query": [
										{
											"key": "email",
											"value": "{{emailEncrypt}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Social Security Number",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ssn = utils.randomSSN();",
											"",
											"    pm.environment.set(\"ssn\", ssn);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Social Security Number] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body data must have ${csApplicantUuid} and ${csApplicationUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicantUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicationUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssn\": \"{{ssn}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/ssn",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"ssn"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Suffixes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"",
											"const index = utils.randomize(jsonData);",
											"const suffix = jsonData[index].code;",
											"",
											"pm.test(\"[Get Suffixes] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Suffixes] Response data must be array\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});",
											"",
											"pm.environment.set(\"suffix\", suffix);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/suffixes",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"suffixes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/getPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"getPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body data must have ${applicationUuid} and ${applicantUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"applicantUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"ssn\": \"{{ssn}}\",\n    \"birthDate\": \"{{dateOfBirth}}\",\n    \"middleInitial\": null,\n    \"suffix\": \"{{suffix}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/verifyPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"verifyPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let productList = [];",
											"",
											"jsonData.forEach(product => {",
											"    if (product.productCodeType === \"COMMERCIAL\" && !product.disabled) {",
											"        productList.push(product);",
											"    }",
											"});",
											"const index = utils.randomize(productList);",
											"const productSelected = productList[index].uuid;",
											"",
											"pm.environment.set(\"productUuid\", productSelected);",
											"",
											"pm.test(\"[Get Product List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Product List] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/products",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Selected Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Selected Product] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Selected Product] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productUuid\": \"{{productUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/selected-offer",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"selected-offer"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Company Name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"companyLegalName\", pm.variables.replaceIn('{{$randomCompanyName}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - Company Name] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Industry List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let industryList = [];",
											"",
											"jsonData.forEach(industry => {",
											"    if (industry.isEnabled && industry.isSupported) {",
											"        industryList.push(industry);",
											"    }",
											"});",
											"const index = utils.randomize(industryList);",
											"const industrySelected = industryList[index].uuid;",
											"",
											"pm.environment.set(\"industryUuid\", industrySelected);",
											"",
											"pm.test(\"[Business - Get Industry List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Get Industry List] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/industry/industries",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"industry",
										"industries"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Industry and Internet",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"website\", pm.variables.replaceIn('{{$randomUrl}}'));",
											"    pm.environment.set(\"businessDescription\", pm.variables.replaceIn('{{$randomLoremSentence}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Industry and Internet] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"industryUuid\": \"{{industryUuid}}\",\n    \"businessDescription\": \"{{businessDescription}}\",\n    \"website\": \"{{website}}\",\n    \"businessWebpage\": []\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Percentage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let percentage = utils.randomPercentage();",
											"",
											"pm.environment.set(\"percentage\", percentage);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Percentage] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Business Information By Application Uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Business Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/applications/{{applicationUuid}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"applications",
										"{{applicationUuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Google Map Verify",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Google Map Verify] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Google Map Verify] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"address1\");",
											"    pm.expect(jsonData).to.have.property(\"address2\");",
											"    pm.expect(jsonData).to.have.property(\"city\");",
											"    pm.expect(jsonData).to.have.property(\"state\");",
											"    pm.expect(jsonData).to.have.property(\"zip4\");",
											"    pm.expect(jsonData).to.have.property(\"zip5\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"googleAddressDTO\": {\n        \"address\": \"12040 Aurora Ave N, Seattle, WA 98133, USA\",\n        \"addressComponents\": [\n            {\n                \"long_name\": \"12040\",\n                \"short_name\": \"12040\",\n                \"types\": [\n                    \"street_number\"\n                ]\n            },\n            {\n                \"long_name\": \"Aurora Avenue North\",\n                \"short_name\": \"Aurora Ave N\",\n                \"types\": [\n                    \"route\"\n                ]\n            },\n            {\n                \"long_name\": \"Northwest Seattle\",\n                \"short_name\": \"Northwest Seattle\",\n                \"types\": [\n                    \"neighborhood\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Seattle\",\n                \"short_name\": \"Seattle\",\n                \"types\": [\n                    \"locality\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"King County\",\n                \"short_name\": \"King County\",\n                \"types\": [\n                    \"administrative_area_level_2\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Washington\",\n                \"short_name\": \"WA\",\n                \"types\": [\n                    \"administrative_area_level_1\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"United States\",\n                \"short_name\": \"US\",\n                \"types\": [\n                    \"country\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"98133\",\n                \"short_name\": \"98133\",\n                \"types\": [\n                    \"postal_code\"\n                ]\n            },\n            {\n                \"long_name\": \"8250\",\n                \"short_name\": \"8250\",\n                \"types\": [\n                    \"postal_code_suffix\"\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{apiURL}}/core/public/address/google/verify",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"public",
										"address",
										"google",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Business Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business Address] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": {\n        \"addressLine1\": \"12040 Aurora Avenue North\",\n        \"addressLine2\": \"\",\n        \"zipCode\": \"98133\",\n        \"city\": \"Seattle\",\n        \"state\": \"WA\"\n    },\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - EIN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ein = utils.randomEIN();",
											"",
											"    pm.environment.set(\"ein\", ein);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - EIN] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Business Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Business Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Sentilink",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Sentilink] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Sentilink] Response body status is SENTILINK_YELLOW\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SENTILINK_YELLOW\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zoneBySsn\": \"111-11-1500\",\n    \"firstName\": \"ANNE\",\n    \"lastName\": \"APPLEBEE\",\n    \"birthDate\": \"1988-01-02\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/senti-link",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"senti-link"
									]
								}
							},
							"response": []
						},
						{
							"name": "Trouble Verifying Personal Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Trouble Verifying Personal Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Trouble Verifying Personal Info] Response body status is NOT_INFO_UPDATED\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"NOT_INFO_UPDATED\");",
											"});",
											"",
											"pm.test(\"[Trouble Verifying Personal Info] Response body data must have ${applicationUuid} and ${applicantUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"applicantUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"ssn\": \"{{ssn}}\",\n    \"birthDate\": \"{{dateOfBirth}}\",\n    \"middleInitial\": null,\n    \"suffix\": \"{{suffix}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/senti-link/personal-info",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"senti-link",
										"personal-info"
									]
								}
							},
							"response": []
						},
						{
							"name": "Jumio - Initiate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Jumio Initiate] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Jumio Initiate] Response body status is JUMIO_INITIATE_SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"JUMIO_INITIATE_SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Jumio Initiate] Response body data must have ${redirectUrl} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"redirectUrl\");",
											"    pm.expect(jsonData.data.redirectUrl).to.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/jumio/initiate/{{applicationUuid}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"jumio",
										"initiate",
										"{{applicationUuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Jumio - Get Transaction Reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Jumio Transaction Reference] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Jumio Transaction Reference] Response body status is JUMIO_INITIATE_SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"JUMIO_INITIATE_SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Jumio Transaction Reference] Response body data must have ${data} property and ${data} properties must have valid value\", function () {",
											"    pm.expect(jsonData).to.have.property(\"data\");",
											"    pm.expect(jsonData.data).to.have.property(\"jumioTransactionReference\");",
											"    pm.expect(jsonData.data).to.have.property(\"jumioStatus\");",
											"    pm.expect(jsonData.data.jumioStatus).to.equal(\"PENDING\");",
											"    pm.expect(jsonData.data.jumioTransactionReference).to.a(\"string\");",
											"});",
											"",
											"pm.environment.set(\"jumioTransactionReference\", jsonData.data.jumioTransactionReference);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/jumio/check/{{applicationUuid}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"jumio",
										"check",
										"{{applicationUuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Jumio - Handle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/handle?transactionStatus=SUCCESS&transactionReference={{jumioTransactionReference}}&customerInternalReference={{customerId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"handle"
									],
									"query": [
										{
											"key": "transactionStatus",
											"value": "SUCCESS"
										},
										{
											"key": "transactionReference",
											"value": "{{jumioTransactionReference}}"
										},
										{
											"key": "customerInternalReference",
											"value": "{{customerId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Jumio - Callback",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Jumio - Callback] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Jumio - Callback] Response body is true\", function () {",
											"    pm.expect(jsonData).to.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "callBackType",
											"value": "NETVERIFYID",
											"type": "text"
										},
										{
											"key": "jumioIdScanReference",
											"value": "{{jumioTransactionReference}}",
											"type": "text"
										},
										{
											"key": "verificationStatus",
											"value": "APPROVED_VERIFIED",
											"type": "text"
										},
										{
											"key": "idScanStatus",
											"value": "SUCCESS",
											"type": "text"
										},
										{
											"key": "idScanSource",
											"value": "WEB_UPLOAD",
											"type": "text"
										},
										{
											"key": "idCheckDataPositions",
											"value": "OK",
											"type": "text"
										},
										{
											"key": "idCheckDocumentValidation",
											"value": "OK",
											"type": "text"
										},
										{
											"key": "idCheckHologram",
											"value": "OK",
											"type": "text"
										},
										{
											"key": "idCheckMRZcode",
											"value": "N/A",
											"type": "text"
										},
										{
											"key": "idCheckMicroprint",
											"value": "OK",
											"type": "text"
										},
										{
											"key": "idCheckSecurityFeatures",
											"value": "OK",
											"type": "text"
										},
										{
											"key": "idCheckSignature",
											"value": "OK",
											"type": "text"
										},
										{
											"key": "transactionDate",
											"value": "2021-04-02T09:11:14.017Z",
											"type": "text"
										},
										{
											"key": "callbackDate",
											"value": "2021-04-02T09:13:15.885Z",
											"type": "text"
										},
										{
											"key": "identityVerification",
											"value": "{'similarity': 'MATCH', 'validity': true}",
											"type": "text"
										},
										{
											"key": "idType",
											"value": "ID_CARD",
											"type": "text"
										},
										{
											"key": "idSubtype",
											"value": "NATIONAL_ID",
											"type": "text"
										},
										{
											"key": "idCountry",
											"value": "VNM",
											"type": "text"
										},
										{
											"key": "rejectReason",
											"value": "",
											"type": "text"
										},
										{
											"key": "idScanImage",
											"value": "https://netverify.com/recognition/v1/idscan/{{jumioTransactionReference}}/front",
											"type": "text"
										},
										{
											"key": "idScanImageFace",
											"value": "https://netverify.com/recognition/v1/idscan/{{jumioTransactionReference}}/face",
											"type": "text"
										},
										{
											"key": "idScanImageBackside",
											"value": "https://netverify.com/recognition/v1/idscan/{{jumioTransactionReference}}/back",
											"type": "text"
										},
										{
											"key": "idNumber",
											"value": "012345678",
											"type": "text"
										},
										{
											"key": "idFirstName",
											"value": "{{firstName}}",
											"type": "text"
										},
										{
											"key": "idLastName",
											"value": "{{lastName}}",
											"type": "text"
										},
										{
											"key": "idDob",
											"value": "{{dateOfBirth}}",
											"type": "text"
										},
										{
											"key": "idExpiry",
											"value": "",
											"type": "text"
										},
										{
											"key": "idUsState",
											"value": "",
											"type": "text"
										},
										{
											"key": "personalNumber",
											"value": "N/A",
											"type": "text"
										},
										{
											"key": "idAddress",
											"value": "",
											"type": "text"
										},
										{
											"key": "merchantIdScanReference",
											"value": "{{customerId}}",
											"type": "text"
										},
										{
											"key": "merchantReportingCriteria",
											"value": "",
											"type": "text"
										},
										{
											"key": "customerId",
											"value": "{{customerId}}",
											"type": "text"
										},
										{
											"key": "clientIp",
											"value": "14.161.35.34",
											"type": "text"
										},
										{
											"key": "firstAttemptDate",
											"value": "20211-04-02T09:12:45.670Z",
											"type": "text"
										},
										{
											"key": "optionalData1",
											"value": "",
											"type": "text"
										},
										{
											"key": "optionalData2",
											"value": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/jumio/callback",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"jumio",
										"callback"
									]
								}
							},
							"response": []
						},
						{
							"name": "Jumio - Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Jumio Transaction Reference] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Jumio Transaction Reference] Response body status is JUMIO_SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"JUMIO_SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Jumio Transaction Reference] Response body data must have ${data} property and ${data} properties must have valid value\", function () {",
											"    pm.expect(jsonData).to.have.property(\"data\");",
											"    pm.expect(jsonData.data).to.have.property(\"updatedInformation\");",
											"    pm.expect(jsonData.data).to.have.property(\"jumioStatus\");",
											"    pm.expect(jsonData.data.jumioStatus).to.equal(\"SUCCESS\");",
											"    pm.expect(jsonData.data.updatedInformation).to.equal(true);",
											"});",
											"",
											"pm.environment.set(\"jumioTransactionReference\", jsonData.data.jumioTransactionReference);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/jumio/check/{{applicationUuid}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"jumio",
										"check",
										"{{applicationUuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sentilink ECBSV",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Sentilink ECBSV] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Sentilink ECBSV] Response body data must have ${sentilinkEcbsvApproved} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"sentilinkEcbsvApproved\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/senti-link-ecbsv",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"senti-link-ecbsv"
									]
								}
							},
							"response": []
						},
						{
							"name": "Factor Trust",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Factor Trust] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Factor Trust] Response body status is FACTOR_TRUST_APPROVED\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"FACTOR_TRUST_APPROVED\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "COMMERCIAL"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "0"
									},
									{
										"key": "X-User-UUID",
										"value": "3e11e51e-d929-488e-895a-7a5b2633bbb0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backupWithholding\": false,\n    \"fatcaCode\": null,\n    \"usCitizen\": true,\n    \"beneficiaryChecked\": true,\n    \"taxIdNumberChecked\": true,\n    \"beneficiary\": null,\n    \"military\": null\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/factor-trust",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"factor-trust"
									]
								}
							},
							"response": []
						},
						{
							"name": "Middesk Evaluation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Middesk Evaluation] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Middesk Evaluation] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Middesk Evaluation] Response body data must have ${objectId}, ${status} and ${status} is open\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data).to.have.property(\"objectId\");",
											"    pm.expect(jsonData.data.status).to.equal(\"open\");",
											"    pm.environment.set(\"objectId\", jsonData.data.objectId);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Middesk Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Update Middesk Status] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Update Middesk Status] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Update Middesk Status] Response body data must have ${status} property and ${status} is approved\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data.status).to.equal(\"approved\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"approved\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk/{{objectId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk",
										"{{objectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Middesk Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Middesk Status] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Middesk Status] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Middesk Status] Response body data must have ${status} property and ${status} is approved\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"status\");",
											"    pm.expect(jsonData.data.status).to.equal(\"approved\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/middesk/{{objectId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"middesk",
										"{{objectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Add Payment] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Add Payment] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let url = `${environment.vantivUrl}/eProtect/paypage?paypageId=${environment.paypageId}&reportGroup=${environment.reportGroup}&id=${utils.randomId(25)}&orderId=${utils.randomId(18)}&encryptedAccount=B1e7Fq3GebNZF1%2BcKncvwuyxhMqhjWUTF2PeGSTR3M6TIybqT1Ent3Ev4sZY6zikIEyKwwFLvG5wtCh1D3j6itRmiUeJ1V8tQ95SRpcux2xVW1HGz%2F5yPzJsH2HQHeYLbwfZH7uyYn3zOEn3UjnNauWrkKjrevB9PrJwGC%2Bp90yADwWokSclIZTZCQxE4wsW02VggNcds9ghXJ4gWfufZeceOWWEqIDk77SULECDmo9qDuhtQ5VXoWFeO2DzN8H%2BFuuuUSqfYYkzxEln03AhCxglz%2BF6w%2FlYLP6ZcPiByLuElgtm5kUbSxn65mui7JxyQqYia6m4YKAC3sVYM3tSbA%3D%3D&pciNonSensitive=false&encryptedCvv=ZsTj6%2BO9kPaCSE6pttrRgIBUfexI2SKFr0BAslN5U9ANz45BxP2%2FHdN4iR4hSB%2FycNtF69QxIzXBXLURN7cnG6Yt9pEdHqqrn5LH4l9DbgZcCyOsO5tz9PWdqdd5UPURsWegaIZXec99Xj%2BFy0JjN%2BqYUpH8Vop%2BB36rug%2BE%2FwekAEsQoFxRCt6HcqDU634jXkPiKvAuIIkW9yFoTWesRWiboiObkEftGNKAn3O5UeTNlbw8%2BRuAg4TmLjf70rwC4kSEYgjt9CVXdG41lz%2BB35A3QBdn060kActCHc%2B7b3cMlacsU8qdIpPA4oWUgzbMw6Crylu80NRNckWu%2B8g8gw%3D%3D&publicKeyId=1&requestType=eProtect&targetServer=primary&jsoncallback=jsonp1616596537869`;",
											"",
											"// Link Worldpay",
											"pm.sendRequest({",
											"    url,",
											"    method: 'GET'",
											"}, (err, responseBody) => {",
											"    if (err) {",
											"        console.log(\"[eProtectRequest error: ]\", err);",
											"    } else {",
											"        var res = responseBody.text();",
											"        var getdata = res.slice (res.indexOf(\"(\") + 1, res.indexOf(\")\"));",
											"        var payment = JSON.parse(getdata);",
											"",
											"        pm.environment.set(\"paypageRegistrationId\", payment.paypageRegistrationId);",
											"        pm.environment.set(\"vantivTxnId\", payment.vantivTxnId);",
											"        pm.environment.set(\"vativId\", payment.id);",
											"        pm.environment.set(\"vantivOrderId\", payment.orderId);",
											"    }",
											"    ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"paypageRegistrationId\": \"{{paypageRegistrationId}}\",\n    \"bin\": \"411111\",\n    \"type\": \"VI\",\n    \"targetServer\": \"primary\",\n    \"vantivTxnId\": \"{{vantivTxnId}}\",\n    \"orderId\": \"{{vantivOrderId}}\",\n    \"response\": \"870\",\n    \"responseTime\": \"2021-03-23 08:51:27\",\n    \"message\": \"Success\",\n    \"reportGroup\": \"{{reportGroup}}\",\n    \"id\": \"{{vativId}}\",\n    \"firstSix\": \"411111\",\n    \"lastFour\": \"1111\",\n    \"name\": \"Cartes Bancaires\",\n    \"billingZipCode\": \"23454\",\n    \"expMonth\": \"11\",\n    \"expYear\": \"24\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/add-payment",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"add-payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pre Sign Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Pre Sign Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Pre Sign Contract] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/pre-sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"pre-sign-contract"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Contract] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Contract] Response data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"sign-contract"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Sign Contract] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Sign Contract] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Sign Contract] Response body data must have ${accountCreated}, ${chargeApproved} properties and all of them are boolean\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"accountCreated\");",
											"    pm.expect(jsonData.data).to.have.property(\"chargeApproved\");",
											"    pm.expect(jsonData.data.accountCreated).to.have.a(\"boolean\");",
											"    pm.expect(jsonData.data.chargeApproved).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/sign-contract",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"sign-contract"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Red Zone",
					"item": [
						{
							"name": "Maintenance Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Maintenance Config] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Maintenance Config] Response body should have ${isTurnOn} property\", function () {",
											"    pm.expect(jsonData).to.have.property(\"isTurnOn\");",
											"    pm.expect(jsonData.isTurnOn).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/public/maintenance/configuration",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"maintenance",
										"configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Welcome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Welcome] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Welcome] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Welcome] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											"",
											"pm.environment.set(\"leadUuid\", jsonData.data.leadUuid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let stringRandom = utils.makeid(6);",
											"let envName = pm.environment.get(\"envName\");",
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"email\", `testing_${envName}_${stringRandom}@yopmail.com`);",
											"    pm.environment.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
											"    pm.environment.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Date  of Birth",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode) || !pm.environment.get(\"dateOfBirth\")) {",
											"    pm.environment.set(\"dateOfBirth\", \"1990-11-11\");",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Date of Birth] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Date of Birth] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"dateOfBirth\": \"{{dateOfBirth}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mobile Phone",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mobilePhoneNumber\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Mobile Phone] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Mobile Phone] Response body data must have leadUuid property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"mobilePhoneNumber\": \"{{mobilePhoneNumber}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Personal Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Personal Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Personal Address] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"addressLine1\": \"12040 AURORA AVE n\",\n    \"addressLine2\": \"\",\n    \"zipCode\": 98133,\n    \"city\": \"seattle\",\n    \"state\": \"WA\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"password\", \"Test!234\");",
											"}",
											"",
											"pm.environment.set(\"baseUrl\", environment.envName === 'local' ? 'http://localhost:4400' : `https://csc-${environment.envName}-customer-ui.business.creditstrong.com`);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"pm.test(\"[Password] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Password] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Password] Response body data must have ${leadUuid} property\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"leadUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-Lead-UUID",
										"value": "{{leadUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baseUrl\": \"{{baseUrl}}\",\n    \"leadUuid\": \"{{leadUuid}}\",\n    \"password\": \"{{password}}\",\n    \"utm_source\": \"{{utm_source}}\",\n    \"utm_term\": \"{{utm_term}}\",\n    \"utm_campaign\": \"{{utm_campaign}}\",\n    \"utm_medium\": \"{{utm_medium}}\",\n    \"utm_content\": \"{{utm_content}}\",\n    \"transaction_id\": \"{{transaction_id}}\",\n    \"affiliate_id\": \"{{affiliate_id}}\",\n    \"source\": \"{{source}}\",\n    \"aff_click_id\": \"{{aff_click_id}}\",\n    \"aff_sub\": \"{{aff_sub}}\",\n    \"aff_sub2\": \"{{aff_sub2}}\",\n    \"aff_sub3\": \"{{aff_sub3}}\",\n    \"aff_sub4\": \"{{aff_sub4}}\",\n    \"aff_sub5\": \"{{aff_sub5}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/commercial/lead",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"commercial",
										"lead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth - Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Auth - Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Auth - Token] Response body data must have ${access_token} and ${user_uuid} properties\", function () {",
											"    pm.expect(jsonData).to.have.property(\"access_token\");",
											"    pm.expect(jsonData).to.have.property(\"user_uuid\");",
											"});",
											"",
											"pm.environment.set(\"userUuid\", jsonData.user_uuid);",
											"pm.environment.set(\"accessToken\", jsonData.access_token);",
											"pm.environment.set(\"ked\", jsonData.ked);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-type",
										"value": "application/x-www-form-urlencoded; charset=UTF-8"
									},
									{
										"key": "Authorization",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "customer-portal",
											"type": "text"
										},
										{
											"key": "baseUrl",
											"value": "{{baseUrl}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiURL}}/auth/oauth/token",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"auth",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Applicants By Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"pm.environment.set(\"emailEncrypt\", utils.encrypt(environment.email));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Applicants By Email] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Applicants By Email] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData).to.have.property(\"uuid\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationUUID\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationId\");",
											"    pm.expect(jsonData).to.have.property(\"customerUUID\");",
											"    pm.expect(jsonData).to.have.property(\"customerId\");",
											"});",
											"",
											"pm.environment.set(\"applicantId\", jsonData.id);",
											"pm.environment.set(\"applicantUuid\", jsonData.uuid);",
											"pm.environment.set(\"applicationUuid\", jsonData.latestApplicationUUID);",
											"pm.environment.set(\"applicationId\", jsonData.latestApplicationId);",
											"pm.environment.set(\"customerUUID\", jsonData.customerUUID);",
											"pm.environment.set(\"customerId\", jsonData.customerId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/applicants/email?email={{emailEncrypt}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"applicants",
										"email"
									],
									"query": [
										{
											"key": "email",
											"value": "{{emailEncrypt}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Social Security Number",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ssn = utils.randomSSN();",
											"",
											"    pm.environment.set(\"ssn\", ssn);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Social Security Number] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Social Security Number] Response body data must have ${csApplicantUuid} and ${csApplicationUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicantUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"csApplicationUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssn\": \"{{ssn}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/ssn",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"ssn"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Suffixes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"",
											"const index = utils.randomize(jsonData);",
											"const suffix = jsonData[index].code;",
											"",
											"pm.test(\"[Get Suffixes] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Suffixes] Response data must be array\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});",
											"",
											"pm.environment.set(\"suffix\", suffix);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/suffixes",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"suffixes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Personal Information] Response data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/getPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"getPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Personal Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Personal Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Personal Information] Response body data must have ${applicationUuid} and ${applicantUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"applicantUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"ssn\": \"{{ssn}}\",\n    \"birthDate\": \"{{dateOfBirth}}\",\n    \"middleInitial\": null,\n    \"suffix\": \"{{suffix}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/verifyPersonalInfo",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"verifyPersonalInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let productList = [];",
											"",
											"jsonData.forEach(product => {",
											"    if (product.productCodeType === \"COMMERCIAL\" && !product.disabled) {",
											"        productList.push(product);",
											"    }",
											"});",
											"const index = utils.randomize(productList);",
											"const productSelected = productList[index].uuid;",
											"",
											"pm.environment.set(\"productUuid\", productSelected);",
											"",
											"pm.test(\"[Get Product List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Product List] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/products",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Selected Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Selected Product] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Selected Product] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productUuid\": \"{{productUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/selected-offer",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"selected-offer"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Company Name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"companyLegalName\", pm.variables.replaceIn('{{$randomCompanyName}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - Company Name] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - Company Name] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Industry List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"let industryList = [];",
											"",
											"jsonData.forEach(industry => {",
											"    if (industry.isEnabled && industry.isSupported) {",
											"        industryList.push(industry);",
											"    }",
											"});",
											"const index = utils.randomize(industryList);",
											"const industrySelected = industryList[index].uuid;",
											"",
											"pm.environment.set(\"industryUuid\", industrySelected);",
											"",
											"pm.test(\"[Business - Get Industry List] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - Get Industry List] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/industry/industries",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"industry",
										"industries"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Industry and Internet",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    pm.environment.set(\"website\", pm.variables.replaceIn('{{$randomUrl}}'));",
											"    pm.environment.set(\"businessDescription\", pm.variables.replaceIn('{{$randomLoremSentence}}'));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Industry and Internet] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Industry and Internet] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"industryUuid\": \"{{industryUuid}}\",\n    \"businessDescription\": \"{{businessDescription}}\",\n    \"website\": \"{{website}}\",\n    \"businessWebpage\": []\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Percentage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"let percentage = utils.randomPercentage();",
											"",
											"pm.environment.set(\"percentage\", percentage);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Percentage] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Percentage] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Get Business Information By Application Uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Business Information] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Get Business Information] Response body data must be valid\", function () {",
											"    pm.expect(jsonData.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses/applications/{{applicationUuid}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses",
										"applications",
										"{{applicationUuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Ownership Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Ownership Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Ownership Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"percentageOwnership\": {{percentage}},\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Google Map Verify",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Google Map Verify] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Google Map Verify] Response body data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"address1\");",
											"    pm.expect(jsonData).to.have.property(\"address2\");",
											"    pm.expect(jsonData).to.have.property(\"city\");",
											"    pm.expect(jsonData).to.have.property(\"state\");",
											"    pm.expect(jsonData).to.have.property(\"zip4\");",
											"    pm.expect(jsonData).to.have.property(\"zip5\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"googleAddressDTO\": {\n        \"address\": \"12040 Aurora Ave N, Seattle, WA 98133, USA\",\n        \"addressComponents\": [\n            {\n                \"long_name\": \"12040\",\n                \"short_name\": \"12040\",\n                \"types\": [\n                    \"street_number\"\n                ]\n            },\n            {\n                \"long_name\": \"Aurora Avenue North\",\n                \"short_name\": \"Aurora Ave N\",\n                \"types\": [\n                    \"route\"\n                ]\n            },\n            {\n                \"long_name\": \"Northwest Seattle\",\n                \"short_name\": \"Northwest Seattle\",\n                \"types\": [\n                    \"neighborhood\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Seattle\",\n                \"short_name\": \"Seattle\",\n                \"types\": [\n                    \"locality\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"King County\",\n                \"short_name\": \"King County\",\n                \"types\": [\n                    \"administrative_area_level_2\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"Washington\",\n                \"short_name\": \"WA\",\n                \"types\": [\n                    \"administrative_area_level_1\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"United States\",\n                \"short_name\": \"US\",\n                \"types\": [\n                    \"country\",\n                    \"political\"\n                ]\n            },\n            {\n                \"long_name\": \"98133\",\n                \"short_name\": \"98133\",\n                \"types\": [\n                    \"postal_code\"\n                ]\n            },\n            {\n                \"long_name\": \"8250\",\n                \"short_name\": \"8250\",\n                \"types\": [\n                    \"postal_code_suffix\"\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{apiURL}}/core/public/address/google/verify",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"public",
										"address",
										"google",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - Business Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business Address] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business Address] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business Address] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3V1aWQiOiIzZTExZTUxZS1kOTI5LTQ4OGUtODk1YS03YTViMjYzM2JiYjAiLCJ1c2VyX25hbWUiOiJkYXQudHJhbl90ZXN0aW5nXzAwMDFAeW9wbWFpbC5jb20iLCJzY29wZSI6WyJjb3JlIiwiYXV0aCIsImF1ZGl0Iiwib3JpZ2luYXRpb24iLCJjb21tdW5pY2F0aW9uIiwiYWNjb3VudCIsImN1c3RvbWVyIl0sInByb2ZpbGVzIjpbIkNVU1RPTUVSIl0sImtlZCI6ImNuTjZBMlNLYktkR0hBS1pja0hWcGw0amNleXF0d2I4IiwiZXhwIjoxNjE2NDkxMDczLCJhdXRob3JpdGllcyI6WyJyZWFkLXVzZXIiLCJyZWFkLWFwcGxpY2F0aW9uIiwiZW5jcnlwdC1kZWNyeXB0IiwicmVhZC1jdXN0b21lciIsInJlYWQta3ljIiwicmVhZC1maWxlIiwicmVuZGVyLXRlbXBsYXRlIiwibWFrZS1wYXltZW50IiwicHJvY2Vzcy1mYWN0b3J0cnVzdCIsInJlYWQtYWxsLWFwcGxpY2F0aW9ucyIsInJlYWQtc3RhdGUiLCJjcmVhdGUtZG9jdW1lbnQiLCJjaGVjay1lbGlnaWJpbGl0eS1hcHBsaWNhdGlvbiIsImlkLXZlcmlmaWNhdGlvbi1hcHBsaWNhdGlvbiIsInJlYWQtdGVtcGxhdGUiLCJyZWFkLWxvYW4tYWNjb3VudCIsInJlYWQtZG9jdW1lbnQiLCJjcmVhdGUtbG9hbi1hY2NvdW50IiwicHJvY2Vzcy1wbGFpZCIsInVwZGF0ZS11c2VyIiwibGluay1wYXltZW50LWFwcGxpY2F0aW9uIiwicmVhZC1jYi1hY2NvdW50IiwicmVzZXQtcGFzc3dvcmQtdXNlciIsInN1Ym1pdC1reWMiLCJzaWduLWNvbnRyYWN0IiwidXBkYXRlLWFwcGxpY2F0aW9uIiwiY3JlYXRlLXVzZXIiLCJyZWFkLWNvbnRyYWN0IiwicHJvY2Vzcy12YW50aXYiLCJ1cGRhdGUtb2ZmZXItYXBwbGljYXRpb24iLCJkZWxldGUtZG9jdW1lbnQiLCJzZW5kLWVtYWlsIiwicmVhZC1wcm9kdWN0IiwidXBsb2FkLXRlbXBsYXRlIiwiY3JlYXRlLWFwcGxpY2F0aW9uIiwidXBkYXRlLWN1c3RvbWVyIiwiZXZhbHVhdGUtYWxsb3kiLCJyZWFkLWNyZWRpdC1jdXN0b21lciIsInJlYWQtYXBwbGljYW50IiwidXBkYXRlLWFwcGxpY2FudCIsInJlYWQtYWxsLWRvY3VtZW50cyJdLCJqdGkiOiJjMzU0NTI0Zi1mZmNkLTRlMzEtOWU4ZC1hYjBhMDQzYTUxOWIiLCJjbGllbnRfaWQiOiJjdXN0b21lci1wb3J0YWwiLCJ1c2VybmFtZSI6ImRhdC50cmFuX3Rlc3RpbmdfMDAwMUB5b3BtYWlsLmNvbSJ9.X2SsM_IqGKg2E9Leoa7uZDTXlsg-R8M7gWlSAq5k07luo8TUHonfz16gQZ9tDwBrx69XebwSkOy-mghiAal5ar8Mb-fMfcbVaLuGEf8vVvg39U87RWWysyB119rcDO6ED8CHDn3oDAMgGncJpt2hU6WgnWL8E8ugkM2hHYbtxfQ8d0D7ny1aKZiyWZ5z07_q8_u8_PtKZqpr1sGtGqec5mUVvIDMQwU4CtDwjGbKv6xRpCnXXJZhV7KKE6UFxZPwonN5MpU5g1ocFUt9r5P1pwUncMqB6uN4F70ekNB7tIDPPL4S7LirNaVkn8KNd2XeytPKiLDJ_cWOkox36AjmRA"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": {\n        \"addressLine1\": \"12040 Aurora Avenue North\",\n        \"addressLine2\": \"\",\n        \"zipCode\": \"98133\",\n        \"city\": \"Seattle\",\n        \"state\": \"WA\"\n    },\n    \"applicationUuid\": \"{{applicationUuid}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business - EIN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (Boolean(environment.randomMode)) {",
											"    let utils = eval(environment.utils)();",
											"    let ein = utils.randomEIN();",
											"",
											"    pm.environment.set(\"ein\", ein);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Business - EIN] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Business - EIN] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Business Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Verify Business Info] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body status is SUCCESS\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"[Verify Business Info] Response body data must have ${applicationUuid} and ${businessUuid} properties\", function () {",
											"    pm.expect(jsonData.data).to.have.property(\"applicationUuid\");",
											"    pm.expect(jsonData.data).to.have.property(\"businessUuid\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationUuid\": \"{{applicationUuid}}\",\n    \"companyLegalName\": \"{{companyLegalName}}\",\n    \"employerIdentificationNumber\": \"{{ein}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/businesses",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"businesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Sentilink",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"let utils = eval(environment.utils)();",
											"",
											"pm.test(\"[Verify Sentilink] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Verify Sentilink] Response body status is SENTILINK_RED\", function () {",
											"    pm.expect(jsonData.status).to.equal(\"SENTILINK_RED\");",
											"});",
											"",
											"// Set interval to wait for NOAA generate",
											"const interval = setInterval(() => {",
											"    clearInterval(interval);",
											"}, 10000);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zoneBySsn\": \"111-11-1999\",\n    \"firstName\": \"ANNE\",\n    \"lastName\": \"APPLEBEE\",\n    \"birthDate\": \"1988-01-01\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/commercial/applicants/{{applicantUuid}}/applications/{{applicationUuid}}/senti-link",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"commercial",
										"applicants",
										"{{applicantUuid}}",
										"applications",
										"{{applicationUuid}}",
										"senti-link"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get NOAA Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get NOAA Data] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get NOAA Data] Response body data must be object\", function () {",
											"    pm.expect(jsonData).to.be.an(\"object\");",
											"});",
											"",
											"pm.test(\"[Get NOAA Data] Response body data must have ${downloadLink} and ${downloadLink} must have value\", function () {",
											"    pm.expect(jsonData).to.have.property(\"downloadLink\");",
											"    pm.expect(jsonData.downloadLink).to.be.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/documents/noaa/latest/{{customerUUID}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"documents",
										"noaa",
										"latest",
										"{{customerUUID}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Customer Portal",
			"item": [
				{
					"name": "Home",
					"item": [
						{
							"name": "Check Lead With Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Check Lead With Application] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Check Lead With Application] Response body is true\", function () {",
											"    pm.expect(jsonData).to.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\"\n}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/lead/check-lead-with-application",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"lead",
										"check-lead-with-application"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth - Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Auth - Token] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Auth - Token] Response body data must have ${access_token} and ${user_uuid} properties\", function () {",
											"    pm.expect(jsonData).to.have.property(\"access_token\");",
											"    pm.expect(jsonData).to.have.property(\"user_uuid\");",
											"});",
											"",
											"pm.environment.set(\"userUuid\", jsonData.user_uuid);",
											"pm.environment.set(\"accessToken\", jsonData.access_token);",
											"pm.environment.set(\"ked\", jsonData.ked);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-type",
										"value": "application/x-www-form-urlencoded; charset=UTF-8"
									},
									{
										"key": "Authorization",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "customer-portal",
											"type": "text"
										},
										{
											"key": "baseUrl",
											"value": "{{baseUrl}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{apiURL}}/auth/oauth/token",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"auth",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Applicants By Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"pm.environment.set(\"emailEncrypt\", utils.encrypt(environment.email));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Applicants By Email] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Applicants By Email] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\");",
											"    pm.expect(jsonData).to.have.property(\"uuid\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationUUID\");",
											"    pm.expect(jsonData).to.have.property(\"latestApplicationId\");",
											"    pm.expect(jsonData).to.have.property(\"customerUUID\");",
											"    pm.expect(jsonData).to.have.property(\"customerId\");",
											"    pm.expect(jsonData).to.have.property(\"commercialNextStep\");",
											"});",
											"",
											"pm.environment.set(\"applicantId\", jsonData.id);",
											"pm.environment.set(\"applicantUuid\", jsonData.uuid);",
											"pm.environment.set(\"applicationUuid\", jsonData.latestApplicationUUID);",
											"pm.environment.set(\"applicationId\", jsonData.latestApplicationId);",
											"pm.environment.set(\"customerUUID\", jsonData.customerUUID);",
											"pm.environment.set(\"customerId\", jsonData.customerId);",
											"pm.environment.set(\"appName\", jsonData.commercialNextStep === 'CSC_CUSTOMER_DASHBOARD' ? 'COMMERCIAL_DASHBOARD' : 'COMMERCIAL');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/applicants/email?email={{emailEncrypt}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"applicants",
										"email"
									],
									"query": [
										{
											"key": "email",
											"value": "{{emailEncrypt}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Maintenance Configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Maintenance Config] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Maintenance Config] Response body should have ${isTurnOn} property\", function () {",
											"    pm.expect(jsonData).to.have.property(\"isTurnOn\");",
											"    pm.expect(jsonData.isTurnOn).to.have.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/public/maintenance/configuration",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"maintenance",
										"configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Latest NOAA Document",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Latest NOAA Document] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Latest NOAA Document] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/core/documents/noaa/latest/{{customerUUID}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"core",
										"documents",
										"noaa",
										"latest",
										"{{customerUUID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dashboard",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"pm.environment.set(\"customerIdEncrypt\", utils.encrypt(environment.customerId));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Dashboard] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Dashboard] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/account/accounts/customers/{{customerIdEncrypt}}/dashboard",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"account",
										"accounts",
										"customers",
										"{{customerIdEncrypt}}",
										"dashboard"
									]
								}
							},
							"response": []
						},
						{
							"name": "Customers Payment Failed",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let utils = eval(environment.utils)();",
											"pm.environment.set(\"customerUuidEncrypt\", utils.encrypt(environment.customerUUID));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"[Customers Payment Failed] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/account/accounts/customers/{{customerUuidEncrypt}}/payments/failed",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"account",
										"accounts",
										"customers",
										"{{customerUuidEncrypt}}",
										"payments",
										"failed"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Account Summary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Account Summary] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Account Summary] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"loans\");",
											"    pm.expect(jsonData).to.have.property(\"savings\");",
											"    pm.expect(jsonData.loans).to.be.an(\"array\");",
											"    pm.expect(jsonData.savings).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/account/accounts/summary?emailEncrypted={{emailEncrypt}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"account",
										"accounts",
										"summary"
									],
									"query": [
										{
											"key": "emailEncrypted",
											"value": "{{emailEncrypt}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Customer By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Customer By Id] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Customer By Id] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/customer/customers/{{customerId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"customer",
										"customers",
										"{{customerId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Applicants By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Applicants By Id] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Applicants By Id] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/applicants/{{applicantId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"applicants",
										"{{applicantId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Applicants Popup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Applicants Popup] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Applicants Popup] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"isShowPopupNewFeatureAnnouncement\");",
											"    pm.expect(jsonData.isShowPopupNewFeatureAnnouncement).to.be.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/applicants/popup/{{applicantUuid}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"applicants",
										"popup",
										"{{applicantUuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Customers Popup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Get Customers Popup] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Get Customers Popup] Response data must be valid\", function () {",
											"    pm.expect(jsonData).to.have.property(\"displayPlaidVerificationFailedPaymentDetailsMessage\");",
											"    pm.expect(jsonData).to.have.property(\"displayPlaidVerificationFailedDashboardPopup\");",
											"    pm.expect(jsonData.displayPlaidVerificationFailedPaymentDetailsMessage).to.be.a(\"boolean\");",
											"    pm.expect(jsonData.displayPlaidVerificationFailedDashboardPopup).to.be.a(\"boolean\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/customer/customers/popup/{{customerId}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"customer",
										"customers",
										"popup",
										"{{customerId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Accounts Missed Payment Time",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"[Accounts Missed Payment Time] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"[Accounts Missed Payment Time] Response data must be array\", function () {",
											"    pm.expect(jsonData).to.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/account/accounts/missed-payment-time?customerUuid={{customerUUID}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"account",
										"accounts",
										"missed-payment-time"
									],
									"query": [
										{
											"key": "customerUuid",
											"value": "{{customerUUID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verification Code  Reset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"[Verification Code  Reset] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "HEAD",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"url": {
									"raw": "{{apiURL}}/origination/public/applicants/{{applicantId}}/verification/code/reset",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"applicants",
										"{{applicantId}}",
										"verification",
										"code",
										"reset"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend Verification Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"[Resend Verification Code] Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sec-ch-ua",
										"value": "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "X-App-Name",
										"value": "{{appName}}"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36"
									},
									{
										"key": "performance-testing",
										"value": "{{performanceTesting}}"
									},
									{
										"key": "X-User-UUID",
										"value": "{{userUuid}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{apiURL}}/origination/public/applicants/{{applicantId}}/verification/email/resend?baseUrl={{baseUrl}}&newEmailAddress=",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"origination",
										"public",
										"applicants",
										"{{applicantId}}",
										"verification",
										"email",
										"resend"
									],
									"query": [
										{
											"key": "baseUrl",
											"value": "{{baseUrl}}"
										},
										{
											"key": "newEmailAddress",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var CryptoJS = require(\"crypto-js\");",
					"var btoa = require(\"btoa\");",
					"",
					"// Set secret for access auth service",
					"const secret = `Basic ${btoa(\"customer-portal:10a2190daf0774d65d7d6ac661a0da958eb5b6ff\")}`;",
					"",
					"// Initials enviroments",
					"pm.environment.set(\"secretKey\", secret);",
					"pm.environment.set(\"iv\", \"9cb5ebfb-c360-46\");",
					"pm.environment.set(\"salt\", \"500285ef-8af8-4d19-8833-6110ed8f7ea0\");",
					"pm.environment.set(\"encrypt\", true);",
					"pm.environment.set(\"vantivUrl\", \"https://request.eprotect.vantivprelive.com\");",
					"pm.environment.set(\"paypageId\", \"nSA8FpvsnUNw3Hn7\");",
					"pm.environment.set(\"reportGroup\", \"ACBGrp1\");",
					"",
					"// Configuration utils global",
					"postman.setEnvironmentVariable(\"utils\", () => {",
					"    var makeid = (length) => {",
					"        var result           = '';",
					"        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
					"        var charactersLength = characters.length;",
					"        for ( var i = 0; i < length; i++ ) {",
					"            result += characters.charAt(Math.floor(Math.random() * charactersLength));",
					"        }",
					"        return result;",
					"    };",
					"",
					"    var randomSSN = () => {",
					"        let ssn = Math.floor(Math.random()*8+1) + Math.random().toString().slice(2,10);",
					"        return `${ssn.substr(0, 3)}-${ssn.substr(3, 2)}-${ssn.substr(5, 4)}`;",
					"    };",
					"",
					"    var randomEIN = () => {",
					"        let ein = Math.floor(Math.random()*8+1) + Math.random().toString().slice(2,10);",
					"        return `${ein.substr(0, 2)}-${ein.substr(2, 7)}`;",
					"    };",
					"",
					"    var randomPercentage = () => {",
					"        let percent = (Math.random() * 100).toFixed(2);",
					"        if (percent - 25 < 0) {",
					"            return randomPercentage();",
					"        } else {",
					"            return percent;",
					"        }",
					"    };",
					"",
					"    var encrypt = (message) => {",
					"        message = message + '';",
					"        if (!environment.encrypt) return message;",
					"        const ked = environment.ked;",
					"        if (!ked) {",
					"            return null;",
					"        }",
					"        const secret = CryptoJS.enc.Utf8.parse(ked);",
					"        const iv = CryptoJS.enc.Utf8.parse(environment.iv);",
					"        const salt = CryptoJS.enc.Utf8.parse(environment.salt);",
					"        const key = CryptoJS.PBKDF2(secret, salt, {",
					"            keySize: 256 / 32,",
					"            iterations: 128",
					"        });",
					"        const wordArray = {",
					"            iv,",
					"            mode: CryptoJS.mode.CBC,",
					"            padding: CryptoJS.pad.Pkcs7",
					"        };",
					"        const encrypted = CryptoJS.AES.encrypt(message, key, wordArray);",
					"        return CryptoJS.enc.Base64.stringify(encrypted.ciphertext).replace(/\\+/g, '-').replace(/\\//g, '_');",
					"    };",
					"",
					"    var randomId = (maxLength) => {",
					"        let id = '';",
					"        while (id.length < maxLength) {",
					"            id += Math.random().toString(36).substring(2);",
					"        }",
					"        return id.substr(0, maxLength);",
					"    };",
					"",
					"    var randomize = (array) => {",
					"        randint = Math.floor(Math.random() * array.length);",
					"        return randint;",
					"    };",
					"",
					"    return {",
					"        makeid,",
					"        encrypt,",
					"        randomSSN,",
					"        randomEIN,",
					"        randomPercentage,",
					"        randomId,",
					"        randomize",
					"    }",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}